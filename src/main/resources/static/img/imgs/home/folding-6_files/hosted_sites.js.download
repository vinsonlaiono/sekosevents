                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                

/*!
 * jQuery JavaScript Library v1.10.2
 * http://jquery.com/
 *
 * Includes Sizzle.js
 * http://sizzlejs.com/
 *
 * Copyright 2005, 2013 jQuery Foundation, Inc. and other contributors
 * Released under the MIT license
 * http://jquery.org/license
 *
 * Date: 2013-07-03T13:48Z
 */

(function(window,undefined){






var

readyList,


rootjQuery,



core_strundefined=typeof undefined,


location=window.location,
document=window.document,
docElem=document.documentElement,


_jQuery=window.jQuery,


_$=window.$,


class2type={},


core_deletedIds=[],

core_version="1.10.2",


core_concat=core_deletedIds.concat,
core_push=core_deletedIds.push,
core_slice=core_deletedIds.slice,
core_indexOf=core_deletedIds.indexOf,
core_toString=class2type.toString,
core_hasOwn=class2type.hasOwnProperty,
core_trim=core_version.trim,


jQuery=function(selector,context){

return new jQuery.fn.init(selector,context,rootjQuery);
},


core_pnum=/[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,


core_rnotwhite=/\S+/g,


rtrim=/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,




rquickExpr=/^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]*))$/,


rsingleTag=/^<(\w+)\s*\/?>(?:<\/\1>|)$/,


rvalidchars=/^[\],:{}\s]*$/,
rvalidbraces=/(?:^|:|,)(?:\s*\[)+/g,
rvalidescape=/\\(?:["\\\/bfnrt]|u[\da-fA-F]{4})/g,
rvalidtokens=/"[^"\\\r\n]*"|true|false|null|-?(?:\d+\.|)\d+(?:[eE][+-]?\d+|)/g,


rmsPrefix=/^-ms-/,
rdashAlpha=/-([\da-z])/gi,


fcamelCase=function(all,letter){
return letter.toUpperCase();
},


completed=function(event){


if(document.addEventListener||event.type==="load"||document.readyState==="complete"){
detach();
jQuery.ready();
}
},

detach=function(){
if(document.addEventListener){
document.removeEventListener("DOMContentLoaded",completed,false);
window.removeEventListener("load",completed,false);

}else{
document.detachEvent("onreadystatechange",completed);
window.detachEvent("onload",completed);
}
};

jQuery.fn=jQuery.prototype={

jquery:core_version,

constructor:jQuery,
init:function(selector,context,rootjQuery){
var match,elem;


if(!selector){
return this;
}


if(typeof selector==="string"){
if(selector.charAt(0)==="<"&&selector.charAt(selector.length-1)===">"&&selector.length>=3){

match=[null,selector,null];

}else{
match=rquickExpr.exec(selector);
}


if(match&&(match[1]||!context)){


if(match[1]){
context=context instanceof jQuery?context[0]:context;


jQuery.merge(this,jQuery.parseHTML(
match[1],
context&&context.nodeType?context.ownerDocument||context:document,
true
));


if(rsingleTag.test(match[1])&&jQuery.isPlainObject(context)){
for(match in context){

if(jQuery.isFunction(this[match])){
this[match](context[match]);


}else{
this.attr(match,context[match]);
}
}
}

return this;


}else{
elem=document.getElementById(match[2]);



if(elem&&elem.parentNode){


if(elem.id!==match[2]){
return rootjQuery.find(selector);
}


this.length=1;
this[0]=elem;
}

this.context=document;
this.selector=selector;
return this;
}


}else if(!context||context.jquery){
return(context||rootjQuery).find(selector);



}else{
return this.constructor(context).find(selector);
}


}else if(selector.nodeType){
this.context=this[0]=selector;
this.length=1;
return this;



}else if(jQuery.isFunction(selector)){
return rootjQuery.ready(selector);
}

if(selector.selector!==undefined){
this.selector=selector.selector;
this.context=selector.context;
}

return jQuery.makeArray(selector,this);
},


selector:"",


length:0,

toArray:function(){
return core_slice.call(this);
},



get:function(num){
return num==null?


this.toArray():


(num<0?this[this.length+num]:this[num]);
},



pushStack:function(elems){


var ret=jQuery.merge(this.constructor(),elems);


ret.prevObject=this;
ret.context=this.context;


return ret;
},




each:function(callback,args){
return jQuery.each(this,callback,args);
},

ready:function(fn){

jQuery.ready.promise().done(fn);

return this;
},

slice:function(){
return this.pushStack(core_slice.apply(this,arguments));
},

first:function(){
return this.eq(0);
},

last:function(){
return this.eq(-1);
},

eq:function(i){
var len=this.length,
j=+i+(i<0?len:0);
return this.pushStack(j>=0&&j<len?[this[j]]:[]);
},

map:function(callback){
return this.pushStack(jQuery.map(this,function(elem,i){
return callback.call(elem,i,elem);
}));
},

end:function(){
return this.prevObject||this.constructor(null);
},



push:core_push,
sort:[].sort,
splice:[].splice
};


jQuery.fn.init.prototype=jQuery.fn;

jQuery.extend=jQuery.fn.extend=function(){
var src,copyIsArray,copy,name,options,clone,
target=arguments[0]||{},
i=1,
length=arguments.length,
deep=false;


if(typeof target==="boolean"){
deep=target;
target=arguments[1]||{};

i=2;
}


if(typeof target!=="object"&&!jQuery.isFunction(target)){
target={};
}


if(length===i){
target=this;
--i;
}

for(;i<length;i++){

if((options=arguments[i])!=null){

for(name in options){
src=target[name];
copy=options[name];


if(target===copy){
continue;
}


if(deep&&copy&&(jQuery.isPlainObject(copy)||(copyIsArray=jQuery.isArray(copy)))){
if(copyIsArray){
copyIsArray=false;
clone=src&&jQuery.isArray(src)?src:[];

}else{
clone=src&&jQuery.isPlainObject(src)?src:{};
}


target[name]=jQuery.extend(deep,clone,copy);


}else if(copy!==undefined){
target[name]=copy;
}
}
}
}


return target;
};

jQuery.extend({


expando:"jQuery"+(core_version+Math.random()).replace(/\D/g,""),

noConflict:function(deep){
if(window.$===jQuery){
window.$=_$;
}

if(deep&&window.jQuery===jQuery){
window.jQuery=_jQuery;
}

return jQuery;
},


isReady:false,



readyWait:1,


holdReady:function(hold){
if(hold){
jQuery.readyWait++;
}else{
jQuery.ready(true);
}
},


ready:function(wait){


if(wait===true?--jQuery.readyWait:jQuery.isReady){
return;
}


if(!document.body){
return setTimeout(jQuery.ready);
}


jQuery.isReady=true;


if(wait!==true&&--jQuery.readyWait>0){
return;
}


readyList.resolveWith(document,[jQuery]);


if(jQuery.fn.trigger){
jQuery(document).trigger("ready").off("ready");
}
},




isFunction:function(obj){
return jQuery.type(obj)==="function";
},

isArray:Array.isArray||function(obj){
return jQuery.type(obj)==="array";
},

isWindow:function(obj){

return obj!=null&&obj==obj.window;
},

isNumeric:function(obj){
return!isNaN(parseFloat(obj))&&isFinite(obj);
},

type:function(obj){
if(obj==null){
return String(obj);
}
return typeof obj==="object"||typeof obj==="function"?
class2type[core_toString.call(obj)]||"object":
typeof obj;
},

isPlainObject:function(obj){
var key;




if(!obj||jQuery.type(obj)!=="object"||obj.nodeType||jQuery.isWindow(obj)){
return false;
}

try{

if(obj.constructor&&
!core_hasOwn.call(obj,"constructor")&&
!core_hasOwn.call(obj.constructor.prototype,"isPrototypeOf")){
return false;
}
}catch(e){

return false;
}



if(jQuery.support.ownLast){
for(key in obj){
return core_hasOwn.call(obj,key);
}
}



for(key in obj){}

return key===undefined||core_hasOwn.call(obj,key);
},

isEmptyObject:function(obj){
var name;
for(name in obj){
return false;
}
return true;
},

error:function(msg){
throw new Error(msg);
},




parseHTML:function(data,context,keepScripts){
if(!data||typeof data!=="string"){
return null;
}
if(typeof context==="boolean"){
keepScripts=context;
context=false;
}
context=context||document;

var parsed=rsingleTag.exec(data),
scripts=!keepScripts&&[];


if(parsed){
return[context.createElement(parsed[1])];
}

parsed=jQuery.buildFragment([data],context,scripts);
if(scripts){
jQuery(scripts).remove();
}
return jQuery.merge([],parsed.childNodes);
},

parseJSON:function(data){

if(window.JSON&&window.JSON.parse){
return window.JSON.parse(data);
}

if(data===null){
return data;
}

if(typeof data==="string"){


data=jQuery.trim(data);

if(data){


if(rvalidchars.test(data.replace(rvalidescape,"@")
.replace(rvalidtokens,"]")
.replace(rvalidbraces,""))){

return(new Function("return "+data))();
}
}
}

jQuery.error("Invalid JSON: "+data);
},


parseXML:function(data){
var xml,tmp;
if(!data||typeof data!=="string"){
return null;
}
try{
if(window.DOMParser){
tmp=new DOMParser();
xml=tmp.parseFromString(data,"text/xml");
}else{
xml=new ActiveXObject("Microsoft.XMLDOM");
xml.async="false";
xml.loadXML(data);
}
}catch(e){
xml=undefined;
}
if(!xml||!xml.documentElement||xml.getElementsByTagName("parsererror").length){
jQuery.error("Invalid XML: "+data);
}
return xml;
},

noop:function(){},




globalEval:function(data){
if(data&&jQuery.trim(data)){



(window.execScript||function(data){
window["eval"].call(window,data);
})(data);
}
},



camelCase:function(string){
return string.replace(rmsPrefix,"ms-").replace(rdashAlpha,fcamelCase);
},

nodeName:function(elem,name){
return elem.nodeName&&elem.nodeName.toLowerCase()===name.toLowerCase();
},


each:function(obj,callback,args){
var value,
i=0,
length=obj.length,
isArray=isArraylike(obj);

if(args){
if(isArray){
for(;i<length;i++){
value=callback.apply(obj[i],args);

if(value===false){
break;
}
}
}else{
for(i in obj){
value=callback.apply(obj[i],args);

if(value===false){
break;
}
}
}


}else{
if(isArray){
for(;i<length;i++){
value=callback.call(obj[i],i,obj[i]);

if(value===false){
break;
}
}
}else{
for(i in obj){
value=callback.call(obj[i],i,obj[i]);

if(value===false){
break;
}
}
}
}

return obj;
},


trim:core_trim&&!core_trim.call("\uFEFF\xA0")?
function(text){
return text==null?
"":
core_trim.call(text);
}:


function(text){
return text==null?
"":
(text+"").replace(rtrim,"");
},


makeArray:function(arr,results){
var ret=results||[];

if(arr!=null){
if(isArraylike(Object(arr))){
jQuery.merge(ret,
typeof arr==="string"?
[arr]:arr
);
}else{
core_push.call(ret,arr);
}
}

return ret;
},

inArray:function(elem,arr,i){
var len;

if(arr){
if(core_indexOf){
return core_indexOf.call(arr,elem,i);
}

len=arr.length;
i=i?i<0?Math.max(0,len+i):i:0;

for(;i<len;i++){

if(i in arr&&arr[i]===elem){
return i;
}
}
}

return-1;
},

merge:function(first,second){
var l=second.length,
i=first.length,
j=0;

if(typeof l==="number"){
for(;j<l;j++){
first[i++]=second[j];
}
}else{
while(second[j]!==undefined){
first[i++]=second[j++];
}
}

first.length=i;

return first;
},

grep:function(elems,callback,inv){
var retVal,
ret=[],
i=0,
length=elems.length;
inv=!!inv;



for(;i<length;i++){
retVal=!!callback(elems[i],i);
if(inv!==retVal){
ret.push(elems[i]);
}
}

return ret;
},


map:function(elems,callback,arg){
var value,
i=0,
length=elems.length,
isArray=isArraylike(elems),
ret=[];


if(isArray){
for(;i<length;i++){
value=callback(elems[i],i,arg);

if(value!=null){
ret[ret.length]=value;
}
}


}else{
for(i in elems){
value=callback(elems[i],i,arg);

if(value!=null){
ret[ret.length]=value;
}
}
}


return core_concat.apply([],ret);
},


guid:1,



proxy:function(fn,context){
var args,proxy,tmp;

if(typeof context==="string"){
tmp=fn[context];
context=fn;
fn=tmp;
}



if(!jQuery.isFunction(fn)){
return undefined;
}


args=core_slice.call(arguments,2);
proxy=function(){
return fn.apply(context||this,args.concat(core_slice.call(arguments)));
};


proxy.guid=fn.guid=fn.guid||jQuery.guid++;

return proxy;
},



access:function(elems,fn,key,value,chainable,emptyGet,raw){
var i=0,
length=elems.length,
bulk=key==null;


if(jQuery.type(key)==="object"){
chainable=true;
for(i in key){
jQuery.access(elems,fn,i,key[i],true,emptyGet,raw);
}


}else if(value!==undefined){
chainable=true;

if(!jQuery.isFunction(value)){
raw=true;
}

if(bulk){

if(raw){
fn.call(elems,value);
fn=null;


}else{
bulk=fn;
fn=function(elem,key,value){
return bulk.call(jQuery(elem),value);
};
}
}

if(fn){
for(;i<length;i++){
fn(elems[i],key,raw?value:value.call(elems[i],i,fn(elems[i],key)));
}
}
}

return chainable?
elems:


bulk?
fn.call(elems):
length?fn(elems[0],key):emptyGet;
},

now:function(){
return(new Date()).getTime();
},




swap:function(elem,options,callback,args){
var ret,name,
old={};


for(name in options){
old[name]=elem.style[name];
elem.style[name]=options[name];
}

ret=callback.apply(elem,args||[]);


for(name in options){
elem.style[name]=old[name];
}

return ret;
}
});

jQuery.ready.promise=function(obj){
if(!readyList){

readyList=jQuery.Deferred();




if(document.readyState==="complete"){

setTimeout(jQuery.ready);


}else if(document.addEventListener){

document.addEventListener("DOMContentLoaded",completed,false);


window.addEventListener("load",completed,false);


}else{

document.attachEvent("onreadystatechange",completed);


window.attachEvent("onload",completed);



var top=false;

try{
top=window.frameElement==null&&document.documentElement;
}catch(e){}

if(top&&top.doScroll){
(function doScrollCheck(){
if(!jQuery.isReady){

try{


top.doScroll("left");
}catch(e){
return setTimeout(doScrollCheck,50);
}


detach();


jQuery.ready();
}
})();
}
}
}
return readyList.promise(obj);
};


jQuery.each("Boolean Number String Function Array Date RegExp Object Error".split(" "),function(i,name){
class2type["[object "+name+"]"]=name.toLowerCase();
});

function isArraylike(obj){
var length=obj.length,
type=jQuery.type(obj);

if(jQuery.isWindow(obj)){
return false;
}

if(obj.nodeType===1&&length){
return true;
}

return type==="array"||type!=="function"&&
(length===0||
typeof length==="number"&&length>0&&(length-1)in obj);
}


rootjQuery=jQuery(document);/*!
 * Sizzle CSS Selector Engine v1.10.2
 * http://sizzlejs.com/
 *
 * Copyright 2013 jQuery Foundation, Inc. and other contributors
 * Released under the MIT license
 * http://jquery.org/license
 *
 * Date: 2013-07-03
 */

(function(window,undefined){

var i,
support,
cachedruns,
Expr,
getText,
isXML,
compile,
outermostContext,
sortInput,


setDocument,
document,
docElem,
documentIsHTML,
rbuggyQSA,
rbuggyMatches,
matches,
contains,


expando="sizzle"+-(new Date()),
preferredDoc=window.document,
dirruns=0,
done=0,
classCache=createCache(),
tokenCache=createCache(),
compilerCache=createCache(),
hasDuplicate=false,
sortOrder=function(a,b){
if(a===b){
hasDuplicate=true;
return 0;
}
return 0;
},


strundefined=typeof undefined,
MAX_NEGATIVE=1<<31,


hasOwn=({}).hasOwnProperty,
arr=[],
pop=arr.pop,
push_native=arr.push,
push=arr.push,
slice=arr.slice,

indexOf=arr.indexOf||function(elem){
var i=0,
len=this.length;
for(;i<len;i++){
if(this[i]===elem){
return i;
}
}
return-1;
},

booleans="checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",




whitespace="[\\x20\\t\\r\\n\\f]",

characterEncoding="(?:\\\\.|[\\w-]|[^\\x00-\\xa0])+",




identifier=characterEncoding.replace("w","w#"),


attributes="\\["+whitespace+"*("+characterEncoding+")"+whitespace+
"*(?:([*^$|!~]?=)"+whitespace+"*(?:(['\"])((?:\\\\.|[^\\\\])*?)\\3|("+identifier+")|)|)"+whitespace+"*\\]",







pseudos=":("+characterEncoding+")(?:\\(((['\"])((?:\\\\.|[^\\\\])*?)\\3|((?:\\\\.|[^\\\\()[\\]]|"+attributes.replace(3,8)+")*)|.*)\\)|)",


rtrim=new RegExp("^"+whitespace+"+|((?:^|[^\\\\])(?:\\\\.)*)"+whitespace+"+$","g"),

rcomma=new RegExp("^"+whitespace+"*,"+whitespace+"*"),
rcombinators=new RegExp("^"+whitespace+"*([>+~]|"+whitespace+")"+whitespace+"*"),

rsibling=new RegExp(whitespace+"*[+~]"),
rattributeQuotes=new RegExp("="+whitespace+"*([^\\]'\"]*)"+whitespace+"*\\]","g"),

rpseudo=new RegExp(pseudos),
ridentifier=new RegExp("^"+identifier+"$"),

matchExpr={
"ID":new RegExp("^#("+characterEncoding+")"),
"CLASS":new RegExp("^\\.("+characterEncoding+")"),
"TAG":new RegExp("^("+characterEncoding.replace("w","w*")+")"),
"ATTR":new RegExp("^"+attributes),
"PSEUDO":new RegExp("^"+pseudos),
"CHILD":new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\("+whitespace+
"*(even|odd|(([+-]|)(\\d*)n|)"+whitespace+"*(?:([+-]|)"+whitespace+
"*(\\d+)|))"+whitespace+"*\\)|)","i"),
"bool":new RegExp("^(?:"+booleans+")$","i"),


"needsContext":new RegExp("^"+whitespace+"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\("+
whitespace+"*((?:-\\d)?\\d*)"+whitespace+"*\\)|)(?=[^-]|$)","i")
},

rnative=/^[^{]+\{\s*\[native \w/,


rquickExpr=/^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,

rinputs=/^(?:input|select|textarea|button)$/i,
rheader=/^h\d$/i,

rescape=/'|\\/g,


runescape=new RegExp("\\\\([\\da-f]{1,6}"+whitespace+"?|("+whitespace+")|.)","ig"),
funescape=function(_,escaped,escapedWhitespace){
var high="0x"+escaped-0x10000;



return high!==high||escapedWhitespace?
escaped:

high<0?
String.fromCharCode(high+0x10000):

String.fromCharCode(high>>10|0xD800,high&0x3FF|0xDC00);
};


try{
push.apply(
(arr=slice.call(preferredDoc.childNodes)),
preferredDoc.childNodes
);


arr[preferredDoc.childNodes.length].nodeType;
}catch(e){
push={apply:arr.length?


function(target,els){
push_native.apply(target,slice.call(els));
}:



function(target,els){
var j=target.length,
i=0;

while((target[j++]=els[i++])){}
target.length=j-1;
}
};
}

function Sizzle(selector,context,results,seed){
var match,elem,m,nodeType,

i,groups,old,nid,newContext,newSelector;

if((context?context.ownerDocument||context:preferredDoc)!==document){
setDocument(context);
}

context=context||document;
results=results||[];

if(!selector||typeof selector!=="string"){
return results;
}

if((nodeType=context.nodeType)!==1&&nodeType!==9){
return[];
}

if(documentIsHTML&&!seed){


if((match=rquickExpr.exec(selector))){

if((m=match[1])){
if(nodeType===9){
elem=context.getElementById(m);


if(elem&&elem.parentNode){


if(elem.id===m){
results.push(elem);
return results;
}
}else{
return results;
}
}else{

if(context.ownerDocument&&(elem=context.ownerDocument.getElementById(m))&&
contains(context,elem)&&elem.id===m){
results.push(elem);
return results;
}
}


}else if(match[2]){
push.apply(results,context.getElementsByTagName(selector));
return results;


}else if((m=match[3])&&support.getElementsByClassName&&context.getElementsByClassName){
push.apply(results,context.getElementsByClassName(m));
return results;
}
}


if(support.qsa&&(!rbuggyQSA||!rbuggyQSA.test(selector))){
nid=old=expando;
newContext=context;
newSelector=nodeType===9&&selector;





if(nodeType===1&&context.nodeName.toLowerCase()!=="object"){
groups=tokenize(selector);

if((old=context.getAttribute("id"))){
nid=old.replace(rescape,"\\$&");
}else{
context.setAttribute("id",nid);
}
nid="[id='"+nid+"'] ";

i=groups.length;
while(i--){
groups[i]=nid+toSelector(groups[i]);
}
newContext=rsibling.test(selector)&&context.parentNode||context;
newSelector=groups.join(",");
}

if(newSelector){
try{
push.apply(results,
newContext.querySelectorAll(newSelector)
);
return results;
}catch(qsaError){
}finally{
if(!old){
context.removeAttribute("id");
}
}
}
}
}


return select(selector.replace(rtrim,"$1"),context,results,seed);
}







function createCache(){
var keys=[];

function cache(key,value){

if(keys.push(key+=" ")>Expr.cacheLength){

delete cache[keys.shift()];
}
return(cache[key]=value);
}
return cache;
}





function markFunction(fn){
fn[expando]=true;
return fn;
}





function assert(fn){
var div=document.createElement("div");

try{
return!!fn(div);
}catch(e){
return false;
}finally{

if(div.parentNode){
div.parentNode.removeChild(div);
}

div=null;
}
}






function addHandle(attrs,handler){
var arr=attrs.split("|"),
i=attrs.length;

while(i--){
Expr.attrHandle[arr[i]]=handler;
}
}







function siblingCheck(a,b){
var cur=b&&a,
diff=cur&&a.nodeType===1&&b.nodeType===1&&
(~b.sourceIndex||MAX_NEGATIVE)-
(~a.sourceIndex||MAX_NEGATIVE);


if(diff){
return diff;
}


if(cur){
while((cur=cur.nextSibling)){
if(cur===b){
return-1;
}
}
}

return a?1:-1;
}





function createInputPseudo(type){
return function(elem){
var name=elem.nodeName.toLowerCase();
return name==="input"&&elem.type===type;
};
}





function createButtonPseudo(type){
return function(elem){
var name=elem.nodeName.toLowerCase();
return(name==="input"||name==="button")&&elem.type===type;
};
}





function createPositionalPseudo(fn){
return markFunction(function(argument){
argument=+argument;
return markFunction(function(seed,matches){
var j,
matchIndexes=fn([],seed.length,argument),
i=matchIndexes.length;


while(i--){
if(seed[(j=matchIndexes[i])]){
seed[j]=!(matches[j]=seed[j]);
}
}
});
});
}





isXML=Sizzle.isXML=function(elem){


var documentElement=elem&&(elem.ownerDocument||elem).documentElement;
return documentElement?documentElement.nodeName!=="HTML":false;
};


support=Sizzle.support={};






setDocument=Sizzle.setDocument=function(node){
var doc=node?node.ownerDocument||node:preferredDoc,
parent=doc.defaultView;


if(doc===document||doc.nodeType!==9||!doc.documentElement){
return document;
}


document=doc;
docElem=doc.documentElement;


documentIsHTML=!isXML(doc);





if(parent&&parent.attachEvent&&parent!==parent.top){
parent.attachEvent("onbeforeunload",function(){
setDocument();
});
}






support.attributes=assert(function(div){
div.className="i";
return!div.getAttribute("className");
});





support.getElementsByTagName=assert(function(div){
div.appendChild(doc.createComment(""));
return!div.getElementsByTagName("*").length;
});


support.getElementsByClassName=assert(function(div){
div.innerHTML="<div class='a'></div><div class='a i'></div>";



div.firstChild.className="i";


return div.getElementsByClassName("i").length===2;
});





support.getById=assert(function(div){
docElem.appendChild(div).id=expando;
return!doc.getElementsByName||!doc.getElementsByName(expando).length;
});


if(support.getById){
Expr.find["ID"]=function(id,context){
if(typeof context.getElementById!==strundefined&&documentIsHTML){
var m=context.getElementById(id);


return m&&m.parentNode?[m]:[];
}
};
Expr.filter["ID"]=function(id){
var attrId=id.replace(runescape,funescape);
return function(elem){
return elem.getAttribute("id")===attrId;
};
};
}else{


delete Expr.find["ID"];

Expr.filter["ID"]=function(id){
var attrId=id.replace(runescape,funescape);
return function(elem){
var node=typeof elem.getAttributeNode!==strundefined&&elem.getAttributeNode("id");
return node&&node.value===attrId;
};
};
}


Expr.find["TAG"]=support.getElementsByTagName?
function(tag,context){
if(typeof context.getElementsByTagName!==strundefined){
return context.getElementsByTagName(tag);
}
}:
function(tag,context){
var elem,
tmp=[],
i=0,
results=context.getElementsByTagName(tag);


if(tag==="*"){
while((elem=results[i++])){
if(elem.nodeType===1){
tmp.push(elem);
}
}

return tmp;
}
return results;
};


Expr.find["CLASS"]=support.getElementsByClassName&&function(className,context){
if(typeof context.getElementsByClassName!==strundefined&&documentIsHTML){
return context.getElementsByClassName(className);
}
};







rbuggyMatches=[];






rbuggyQSA=[];

if((support.qsa=rnative.test(doc.querySelectorAll))){


assert(function(div){





div.innerHTML="<select><option selected=''></option></select>";



if(!div.querySelectorAll("[selected]").length){
rbuggyQSA.push("\\["+whitespace+"*(?:value|"+booleans+")");
}




if(!div.querySelectorAll(":checked").length){
rbuggyQSA.push(":checked");
}
});

assert(function(div){






var input=doc.createElement("input");
input.setAttribute("type","hidden");
div.appendChild(input).setAttribute("t","");

if(div.querySelectorAll("[t^='']").length){
rbuggyQSA.push("[*^$]="+whitespace+"*(?:''|\"\")");
}



if(!div.querySelectorAll(":enabled").length){
rbuggyQSA.push(":enabled",":disabled");
}


div.querySelectorAll("*,:x");
rbuggyQSA.push(",.*:");
});
}

if((support.matchesSelector=rnative.test((matches=docElem.webkitMatchesSelector||
docElem.mozMatchesSelector||
docElem.oMatchesSelector||
docElem.msMatchesSelector)))){

assert(function(div){


support.disconnectedMatch=matches.call(div,"div");



matches.call(div,"[s!='']:x");
rbuggyMatches.push("!=",pseudos);
});
}

rbuggyQSA=rbuggyQSA.length&&new RegExp(rbuggyQSA.join("|"));
rbuggyMatches=rbuggyMatches.length&&new RegExp(rbuggyMatches.join("|"));







contains=rnative.test(docElem.contains)||docElem.compareDocumentPosition?
function(a,b){
var adown=a.nodeType===9?a.documentElement:a,
bup=b&&b.parentNode;
return a===bup||!!(bup&&bup.nodeType===1&&(
adown.contains?
adown.contains(bup):
a.compareDocumentPosition&&a.compareDocumentPosition(bup)&16
));
}:
function(a,b){
if(b){
while((b=b.parentNode)){
if(b===a){
return true;
}
}
}
return false;
};





sortOrder=docElem.compareDocumentPosition?
function(a,b){


if(a===b){
hasDuplicate=true;
return 0;
}

var compare=b.compareDocumentPosition&&a.compareDocumentPosition&&a.compareDocumentPosition(b);

if(compare){

if(compare&1||
(!support.sortDetached&&b.compareDocumentPosition(a)===compare)){


if(a===doc||contains(preferredDoc,a)){
return-1;
}
if(b===doc||contains(preferredDoc,b)){
return 1;
}


return sortInput?
(indexOf.call(sortInput,a)-indexOf.call(sortInput,b)):
0;
}

return compare&4?-1:1;
}


return a.compareDocumentPosition?-1:1;
}:
function(a,b){
var cur,
i=0,
aup=a.parentNode,
bup=b.parentNode,
ap=[a],
bp=[b];


if(a===b){
hasDuplicate=true;
return 0;


}else if(!aup||!bup){
return a===doc?-1:
b===doc?1:
aup?-1:
bup?1:
sortInput?
(indexOf.call(sortInput,a)-indexOf.call(sortInput,b)):
0;


}else if(aup===bup){
return siblingCheck(a,b);
}


cur=a;
while((cur=cur.parentNode)){
ap.unshift(cur);
}
cur=b;
while((cur=cur.parentNode)){
bp.unshift(cur);
}


while(ap[i]===bp[i]){
i++;
}

return i?

siblingCheck(ap[i],bp[i]):


ap[i]===preferredDoc?-1:
bp[i]===preferredDoc?1:
0;
};

return doc;
};

Sizzle.matches=function(expr,elements){
return Sizzle(expr,null,null,elements);
};

Sizzle.matchesSelector=function(elem,expr){

if((elem.ownerDocument||elem)!==document){
setDocument(elem);
}


expr=expr.replace(rattributeQuotes,"='$1']");

if(support.matchesSelector&&documentIsHTML&&
(!rbuggyMatches||!rbuggyMatches.test(expr))&&
(!rbuggyQSA||!rbuggyQSA.test(expr))){

try{
var ret=matches.call(elem,expr);


if(ret||support.disconnectedMatch||


elem.document&&elem.document.nodeType!==11){
return ret;
}
}catch(e){}
}

return Sizzle(expr,document,null,[elem]).length>0;
};

Sizzle.contains=function(context,elem){

if((context.ownerDocument||context)!==document){
setDocument(context);
}
return contains(context,elem);
};

Sizzle.attr=function(elem,name){

if((elem.ownerDocument||elem)!==document){
setDocument(elem);
}

var fn=Expr.attrHandle[name.toLowerCase()],

val=fn&&hasOwn.call(Expr.attrHandle,name.toLowerCase())?
fn(elem,name,!documentIsHTML):
undefined;

return val===undefined?
support.attributes||!documentIsHTML?
elem.getAttribute(name):
(val=elem.getAttributeNode(name))&&val.specified?
val.value:
null:
val;
};

Sizzle.error=function(msg){
throw new Error("Syntax error, unrecognized expression: "+msg);
};





Sizzle.uniqueSort=function(results){
var elem,
duplicates=[],
j=0,
i=0;


hasDuplicate=!support.detectDuplicates;
sortInput=!support.sortStable&&results.slice(0);
results.sort(sortOrder);

if(hasDuplicate){
while((elem=results[i++])){
if(elem===results[i]){
j=duplicates.push(i);
}
}
while(j--){
results.splice(duplicates[j],1);
}
}

return results;
};





getText=Sizzle.getText=function(elem){
var node,
ret="",
i=0,
nodeType=elem.nodeType;

if(!nodeType){

for(;(node=elem[i]);i++){

ret+=getText(node);
}
}else if(nodeType===1||nodeType===9||nodeType===11){


if(typeof elem.textContent==="string"){
return elem.textContent;
}else{

for(elem=elem.firstChild;elem;elem=elem.nextSibling){
ret+=getText(elem);
}
}
}else if(nodeType===3||nodeType===4){
return elem.nodeValue;
}


return ret;
};

Expr=Sizzle.selectors={


cacheLength:50,

createPseudo:markFunction,

match:matchExpr,

attrHandle:{},

find:{},

relative:{
">":{dir:"parentNode",first:true},
" ":{dir:"parentNode"},
"+":{dir:"previousSibling",first:true},
"~":{dir:"previousSibling"}
},

preFilter:{
"ATTR":function(match){
match[1]=match[1].replace(runescape,funescape);


match[3]=(match[4]||match[5]||"").replace(runescape,funescape);

if(match[2]==="~="){
match[3]=" "+match[3]+" ";
}

return match.slice(0,4);
},

"CHILD":function(match){










match[1]=match[1].toLowerCase();

if(match[1].slice(0,3)==="nth"){

if(!match[3]){
Sizzle.error(match[0]);
}



match[4]=+(match[4]?match[5]+(match[6]||1):2*(match[3]==="even"||match[3]==="odd"));
match[5]=+((match[7]+match[8])||match[3]==="odd");


}else if(match[3]){
Sizzle.error(match[0]);
}

return match;
},

"PSEUDO":function(match){
var excess,
unquoted=!match[5]&&match[2];

if(matchExpr["CHILD"].test(match[0])){
return null;
}


if(match[3]&&match[4]!==undefined){
match[2]=match[4];


}else if(unquoted&&rpseudo.test(unquoted)&&

(excess=tokenize(unquoted,true))&&

(excess=unquoted.indexOf(")",unquoted.length-excess)-unquoted.length)){


match[0]=match[0].slice(0,excess);
match[2]=unquoted.slice(0,excess);
}


return match.slice(0,3);
}
},

filter:{

"TAG":function(nodeNameSelector){
var nodeName=nodeNameSelector.replace(runescape,funescape).toLowerCase();
return nodeNameSelector==="*"?
function(){return true;}:
function(elem){
return elem.nodeName&&elem.nodeName.toLowerCase()===nodeName;
};
},

"CLASS":function(className){
var pattern=classCache[className+" "];

return pattern||
(pattern=new RegExp("(^|"+whitespace+")"+className+"("+whitespace+"|$)"))&&
classCache(className,function(elem){
return pattern.test(typeof elem.className==="string"&&elem.className||typeof elem.getAttribute!==strundefined&&elem.getAttribute("class")||"");
});
},

"ATTR":function(name,operator,check){
return function(elem){
var result=Sizzle.attr(elem,name);

if(result==null){
return operator==="!=";
}
if(!operator){
return true;
}

result+="";

return operator==="="?result===check:
operator==="!="?result!==check:
operator==="^="?check&&result.indexOf(check)===0:
operator==="*="?check&&result.indexOf(check)>-1:
operator==="$="?check&&result.slice(-check.length)===check:
operator==="~="?(" "+result+" ").indexOf(check)>-1:
operator==="|="?result===check||result.slice(0,check.length+1)===check+"-":
false;
};
},

"CHILD":function(type,what,argument,first,last){
var simple=type.slice(0,3)!=="nth",
forward=type.slice(-4)!=="last",
ofType=what==="of-type";

return first===1&&last===0?


function(elem){
return!!elem.parentNode;
}:

function(elem,context,xml){
var cache,outerCache,node,diff,nodeIndex,start,
dir=simple!==forward?"nextSibling":"previousSibling",
parent=elem.parentNode,
name=ofType&&elem.nodeName.toLowerCase(),
useCache=!xml&&!ofType;

if(parent){


if(simple){
while(dir){
node=elem;
while((node=node[dir])){
if(ofType?node.nodeName.toLowerCase()===name:node.nodeType===1){
return false;
}
}

start=dir=type==="only"&&!start&&"nextSibling";
}
return true;
}

start=[forward?parent.firstChild:parent.lastChild];


if(forward&&useCache){

outerCache=parent[expando]||(parent[expando]={});
cache=outerCache[type]||[];
nodeIndex=cache[0]===dirruns&&cache[1];
diff=cache[0]===dirruns&&cache[2];
node=nodeIndex&&parent.childNodes[nodeIndex];

while((node=++nodeIndex&&node&&node[dir]||


(diff=nodeIndex=0)||start.pop())){


if(node.nodeType===1&&++diff&&node===elem){
outerCache[type]=[dirruns,nodeIndex,diff];
break;
}
}


}else if(useCache&&(cache=(elem[expando]||(elem[expando]={}))[type])&&cache[0]===dirruns){
diff=cache[1];


}else{

while((node=++nodeIndex&&node&&node[dir]||
(diff=nodeIndex=0)||start.pop())){

if((ofType?node.nodeName.toLowerCase()===name:node.nodeType===1)&&++diff){

if(useCache){
(node[expando]||(node[expando]={}))[type]=[dirruns,diff];
}

if(node===elem){
break;
}
}
}
}


diff-=last;
return diff===first||(diff%first===0&&diff/first>=0);
}
};
},

"PSEUDO":function(pseudo,argument){




var args,
fn=Expr.pseudos[pseudo]||Expr.setFilters[pseudo.toLowerCase()]||
Sizzle.error("unsupported pseudo: "+pseudo);




if(fn[expando]){
return fn(argument);
}


if(fn.length>1){
args=[pseudo,pseudo,"",argument];
return Expr.setFilters.hasOwnProperty(pseudo.toLowerCase())?
markFunction(function(seed,matches){
var idx,
matched=fn(seed,argument),
i=matched.length;
while(i--){
idx=indexOf.call(seed,matched[i]);
seed[idx]=!(matches[idx]=matched[i]);
}
}):
function(elem){
return fn(elem,0,args);
};
}

return fn;
}
},

pseudos:{

"not":markFunction(function(selector){



var input=[],
results=[],
matcher=compile(selector.replace(rtrim,"$1"));

return matcher[expando]?
markFunction(function(seed,matches,context,xml){
var elem,
unmatched=matcher(seed,null,xml,[]),
i=seed.length;


while(i--){
if((elem=unmatched[i])){
seed[i]=!(matches[i]=elem);
}
}
}):
function(elem,context,xml){
input[0]=elem;
matcher(input,null,xml,results);
return!results.pop();
};
}),

"has":markFunction(function(selector){
return function(elem){
return Sizzle(selector,elem).length>0;
};
}),

"contains":markFunction(function(text){
return function(elem){
return(elem.textContent||elem.innerText||getText(elem)).indexOf(text)>-1;
};
}),








"lang":markFunction(function(lang){

if(!ridentifier.test(lang||"")){
Sizzle.error("unsupported lang: "+lang);
}
lang=lang.replace(runescape,funescape).toLowerCase();
return function(elem){
var elemLang;
do{
if((elemLang=documentIsHTML?
elem.lang:
elem.getAttribute("xml:lang")||elem.getAttribute("lang"))){

elemLang=elemLang.toLowerCase();
return elemLang===lang||elemLang.indexOf(lang+"-")===0;
}
}while((elem=elem.parentNode)&&elem.nodeType===1);
return false;
};
}),


"target":function(elem){
var hash=window.location&&window.location.hash;
return hash&&hash.slice(1)===elem.id;
},

"root":function(elem){
return elem===docElem;
},

"focus":function(elem){
return elem===document.activeElement&&(!document.hasFocus||document.hasFocus())&&!!(elem.type||elem.href||~elem.tabIndex);
},


"enabled":function(elem){
return elem.disabled===false;
},

"disabled":function(elem){
return elem.disabled===true;
},

"checked":function(elem){


var nodeName=elem.nodeName.toLowerCase();
return(nodeName==="input"&&!!elem.checked)||(nodeName==="option"&&!!elem.selected);
},

"selected":function(elem){


if(elem.parentNode){
elem.parentNode.selectedIndex;
}

return elem.selected===true;
},


"empty":function(elem){





for(elem=elem.firstChild;elem;elem=elem.nextSibling){
if(elem.nodeName>"@"||elem.nodeType===3||elem.nodeType===4){
return false;
}
}
return true;
},

"parent":function(elem){
return!Expr.pseudos["empty"](elem);
},


"header":function(elem){
return rheader.test(elem.nodeName);
},

"input":function(elem){
return rinputs.test(elem.nodeName);
},

"button":function(elem){
var name=elem.nodeName.toLowerCase();
return name==="input"&&elem.type==="button"||name==="button";
},

"text":function(elem){
var attr;


return elem.nodeName.toLowerCase()==="input"&&
elem.type==="text"&&
((attr=elem.getAttribute("type"))==null||attr.toLowerCase()===elem.type);
},


"first":createPositionalPseudo(function(){
return[0];
}),

"last":createPositionalPseudo(function(matchIndexes,length){
return[length-1];
}),

"eq":createPositionalPseudo(function(matchIndexes,length,argument){
return[argument<0?argument+length:argument];
}),

"even":createPositionalPseudo(function(matchIndexes,length){
var i=0;
for(;i<length;i+=2){
matchIndexes.push(i);
}
return matchIndexes;
}),

"odd":createPositionalPseudo(function(matchIndexes,length){
var i=1;
for(;i<length;i+=2){
matchIndexes.push(i);
}
return matchIndexes;
}),

"lt":createPositionalPseudo(function(matchIndexes,length,argument){
var i=argument<0?argument+length:argument;
for(;--i>=0;){
matchIndexes.push(i);
}
return matchIndexes;
}),

"gt":createPositionalPseudo(function(matchIndexes,length,argument){
var i=argument<0?argument+length:argument;
for(;++i<length;){
matchIndexes.push(i);
}
return matchIndexes;
})
}
};

Expr.pseudos["nth"]=Expr.pseudos["eq"];


for(i in{radio:true,checkbox:true,file:true,password:true,image:true}){
Expr.pseudos[i]=createInputPseudo(i);
}
for(i in{submit:true,reset:true}){
Expr.pseudos[i]=createButtonPseudo(i);
}


function setFilters(){}
setFilters.prototype=Expr.filters=Expr.pseudos;
Expr.setFilters=new setFilters();

function tokenize(selector,parseOnly){
var matched,match,tokens,type,
soFar,groups,preFilters,
cached=tokenCache[selector+" "];

if(cached){
return parseOnly?0:cached.slice(0);
}

soFar=selector;
groups=[];
preFilters=Expr.preFilter;

while(soFar){


if(!matched||(match=rcomma.exec(soFar))){
if(match){

soFar=soFar.slice(match[0].length)||soFar;
}
groups.push(tokens=[]);
}

matched=false;


if((match=rcombinators.exec(soFar))){
matched=match.shift();
tokens.push({
value:matched,

type:match[0].replace(rtrim," ")
});
soFar=soFar.slice(matched.length);
}


for(type in Expr.filter){
if((match=matchExpr[type].exec(soFar))&&(!preFilters[type]||
(match=preFilters[type](match)))){
matched=match.shift();
tokens.push({
value:matched,
type:type,
matches:match
});
soFar=soFar.slice(matched.length);
}
}

if(!matched){
break;
}
}




return parseOnly?
soFar.length:
soFar?
Sizzle.error(selector):

tokenCache(selector,groups).slice(0);
}

function toSelector(tokens){
var i=0,
len=tokens.length,
selector="";
for(;i<len;i++){
selector+=tokens[i].value;
}
return selector;
}

function addCombinator(matcher,combinator,base){
var dir=combinator.dir,
checkNonElements=base&&dir==="parentNode",
doneName=done++;

return combinator.first?

function(elem,context,xml){
while((elem=elem[dir])){
if(elem.nodeType===1||checkNonElements){
return matcher(elem,context,xml);
}
}
}:


function(elem,context,xml){
var data,cache,outerCache,
dirkey=dirruns+" "+doneName;


if(xml){
while((elem=elem[dir])){
if(elem.nodeType===1||checkNonElements){
if(matcher(elem,context,xml)){
return true;
}
}
}
}else{
while((elem=elem[dir])){
if(elem.nodeType===1||checkNonElements){
outerCache=elem[expando]||(elem[expando]={});
if((cache=outerCache[dir])&&cache[0]===dirkey){
if((data=cache[1])===true||data===cachedruns){
return data===true;
}
}else{
cache=outerCache[dir]=[dirkey];
cache[1]=matcher(elem,context,xml)||cachedruns;
if(cache[1]===true){
return true;
}
}
}
}
}
};
}

function elementMatcher(matchers){
return matchers.length>1?
function(elem,context,xml){
var i=matchers.length;
while(i--){
if(!matchers[i](elem,context,xml)){
return false;
}
}
return true;
}:
matchers[0];
}

function condense(unmatched,map,filter,context,xml){
var elem,
newUnmatched=[],
i=0,
len=unmatched.length,
mapped=map!=null;

for(;i<len;i++){
if((elem=unmatched[i])){
if(!filter||filter(elem,context,xml)){
newUnmatched.push(elem);
if(mapped){
map.push(i);
}
}
}
}

return newUnmatched;
}

function setMatcher(preFilter,selector,matcher,postFilter,postFinder,postSelector){
if(postFilter&&!postFilter[expando]){
postFilter=setMatcher(postFilter);
}
if(postFinder&&!postFinder[expando]){
postFinder=setMatcher(postFinder,postSelector);
}
return markFunction(function(seed,results,context,xml){
var temp,i,elem,
preMap=[],
postMap=[],
preexisting=results.length,


elems=seed||multipleContexts(selector||"*",context.nodeType?[context]:context,[]),


matcherIn=preFilter&&(seed||!selector)?
condense(elems,preMap,preFilter,context,xml):
elems,

matcherOut=matcher?

postFinder||(seed?preFilter:preexisting||postFilter)?


[]:


results:
matcherIn;


if(matcher){
matcher(matcherIn,matcherOut,context,xml);
}


if(postFilter){
temp=condense(matcherOut,postMap);
postFilter(temp,[],context,xml);


i=temp.length;
while(i--){
if((elem=temp[i])){
matcherOut[postMap[i]]=!(matcherIn[postMap[i]]=elem);
}
}
}

if(seed){
if(postFinder||preFilter){
if(postFinder){

temp=[];
i=matcherOut.length;
while(i--){
if((elem=matcherOut[i])){

temp.push((matcherIn[i]=elem));
}
}
postFinder(null,(matcherOut=[]),temp,xml);
}


i=matcherOut.length;
while(i--){
if((elem=matcherOut[i])&&
(temp=postFinder?indexOf.call(seed,elem):preMap[i])>-1){

seed[temp]=!(results[temp]=elem);
}
}
}


}else{
matcherOut=condense(
matcherOut===results?
matcherOut.splice(preexisting,matcherOut.length):
matcherOut
);
if(postFinder){
postFinder(null,results,matcherOut,xml);
}else{
push.apply(results,matcherOut);
}
}
});
}

function matcherFromTokens(tokens){
var checkContext,matcher,j,
len=tokens.length,
leadingRelative=Expr.relative[tokens[0].type],
implicitRelative=leadingRelative||Expr.relative[" "],
i=leadingRelative?1:0,


matchContext=addCombinator(function(elem){
return elem===checkContext;
},implicitRelative,true),
matchAnyContext=addCombinator(function(elem){
return indexOf.call(checkContext,elem)>-1;
},implicitRelative,true),
matchers=[function(elem,context,xml){
return(!leadingRelative&&(xml||context!==outermostContext))||(
(checkContext=context).nodeType?
matchContext(elem,context,xml):
matchAnyContext(elem,context,xml));
}];

for(;i<len;i++){
if((matcher=Expr.relative[tokens[i].type])){
matchers=[addCombinator(elementMatcher(matchers),matcher)];
}else{
matcher=Expr.filter[tokens[i].type].apply(null,tokens[i].matches);


if(matcher[expando]){

j=++i;
for(;j<len;j++){
if(Expr.relative[tokens[j].type]){
break;
}
}
return setMatcher(
i>1&&elementMatcher(matchers),
i>1&&toSelector(

tokens.slice(0,i-1).concat({value:tokens[i-2].type===" "?"*":""})
).replace(rtrim,"$1"),
matcher,
i<j&&matcherFromTokens(tokens.slice(i,j)),
j<len&&matcherFromTokens((tokens=tokens.slice(j))),
j<len&&toSelector(tokens)
);
}
matchers.push(matcher);
}
}

return elementMatcher(matchers);
}

function matcherFromGroupMatchers(elementMatchers,setMatchers){

var matcherCachedRuns=0,
bySet=setMatchers.length>0,
byElement=elementMatchers.length>0,
superMatcher=function(seed,context,xml,results,expandContext){
var elem,j,matcher,
setMatched=[],
matchedCount=0,
i="0",
unmatched=seed&&[],
outermost=expandContext!=null,
contextBackup=outermostContext,

elems=seed||byElement&&Expr.find["TAG"]("*",expandContext&&context.parentNode||context),

dirrunsUnique=(dirruns+=contextBackup==null?1:Math.random()||0.1);

if(outermost){
outermostContext=context!==document&&context;
cachedruns=matcherCachedRuns;
}



for(;(elem=elems[i])!=null;i++){
if(byElement&&elem){
j=0;
while((matcher=elementMatchers[j++])){
if(matcher(elem,context,xml)){
results.push(elem);
break;
}
}
if(outermost){
dirruns=dirrunsUnique;
cachedruns=++matcherCachedRuns;
}
}


if(bySet){

if((elem=!matcher&&elem)){
matchedCount--;
}


if(seed){
unmatched.push(elem);
}
}
}


matchedCount+=i;
if(bySet&&i!==matchedCount){
j=0;
while((matcher=setMatchers[j++])){
matcher(unmatched,setMatched,context,xml);
}

if(seed){

if(matchedCount>0){
while(i--){
if(!(unmatched[i]||setMatched[i])){
setMatched[i]=pop.call(results);
}
}
}


setMatched=condense(setMatched);
}


push.apply(results,setMatched);


if(outermost&&!seed&&setMatched.length>0&&
(matchedCount+setMatchers.length)>1){

Sizzle.uniqueSort(results);
}
}


if(outermost){
dirruns=dirrunsUnique;
outermostContext=contextBackup;
}

return unmatched;
};

return bySet?
markFunction(superMatcher):
superMatcher;
}

compile=Sizzle.compile=function(selector,group){
var i,
setMatchers=[],
elementMatchers=[],
cached=compilerCache[selector+" "];

if(!cached){

if(!group){
group=tokenize(selector);
}
i=group.length;
while(i--){
cached=matcherFromTokens(group[i]);
if(cached[expando]){
setMatchers.push(cached);
}else{
elementMatchers.push(cached);
}
}


cached=compilerCache(selector,matcherFromGroupMatchers(elementMatchers,setMatchers));
}
return cached;
};

function multipleContexts(selector,contexts,results){
var i=0,
len=contexts.length;
for(;i<len;i++){
Sizzle(selector,contexts[i],results);
}
return results;
}

function select(selector,context,results,seed){
var i,tokens,token,type,find,
match=tokenize(selector);

if(!seed){

if(match.length===1){


tokens=match[0]=match[0].slice(0);
if(tokens.length>2&&(token=tokens[0]).type==="ID"&&
support.getById&&context.nodeType===9&&documentIsHTML&&
Expr.relative[tokens[1].type]){

context=(Expr.find["ID"](token.matches[0].replace(runescape,funescape),context)||[])[0];
if(!context){
return results;
}
selector=selector.slice(tokens.shift().value.length);
}


i=matchExpr["needsContext"].test(selector)?0:tokens.length;
while(i--){
token=tokens[i];


if(Expr.relative[(type=token.type)]){
break;
}
if((find=Expr.find[type])){

if((seed=find(
token.matches[0].replace(runescape,funescape),
rsibling.test(tokens[0].type)&&context.parentNode||context
))){


tokens.splice(i,1);
selector=seed.length&&toSelector(tokens);
if(!selector){
push.apply(results,seed);
return results;
}

break;
}
}
}
}
}



compile(selector,match)(
seed,
context,
!documentIsHTML,
results,
rsibling.test(selector)
);
return results;
}




support.sortStable=expando.split("").sort(sortOrder).join("")===expando;



support.detectDuplicates=hasDuplicate;


setDocument();



support.sortDetached=assert(function(div1){

return div1.compareDocumentPosition(document.createElement("div"))&1;
});




if(!assert(function(div){
div.innerHTML="<a href='#'></a>";
return div.firstChild.getAttribute("href")==="#";
})){
addHandle("type|href|height|width",function(elem,name,isXML){
if(!isXML){
return elem.getAttribute(name,name.toLowerCase()==="type"?1:2);
}
});
}



if(!support.attributes||!assert(function(div){
div.innerHTML="<input/>";
div.firstChild.setAttribute("value","");
return div.firstChild.getAttribute("value")==="";
})){
addHandle("value",function(elem,name,isXML){
if(!isXML&&elem.nodeName.toLowerCase()==="input"){
return elem.defaultValue;
}
});
}



if(!assert(function(div){
return div.getAttribute("disabled")==null;
})){
addHandle(booleans,function(elem,name,isXML){
var val;
if(!isXML){
return(val=elem.getAttributeNode(name))&&val.specified?
val.value:
elem[name]===true?name.toLowerCase():null;
}
});
}

jQuery.find=Sizzle;
jQuery.expr=Sizzle.selectors;
jQuery.expr[":"]=jQuery.expr.pseudos;
jQuery.unique=Sizzle.uniqueSort;
jQuery.text=Sizzle.getText;
jQuery.isXMLDoc=Sizzle.isXML;
jQuery.contains=Sizzle.contains;


})(window);

var optionsCache={};


function createOptions(options){
var object=optionsCache[options]={};
jQuery.each(options.match(core_rnotwhite)||[],function(_,flag){
object[flag]=true;
});
return object;
}























jQuery.Callbacks=function(options){



options=typeof options==="string"?
(optionsCache[options]||createOptions(options)):
jQuery.extend({},options);

var
firing,

memory,

fired,

firingLength,

firingIndex,

firingStart,

list=[],

stack=!options.once&&[],

fire=function(data){
memory=options.memory&&data;
fired=true;
firingIndex=firingStart||0;
firingStart=0;
firingLength=list.length;
firing=true;
for(;list&&firingIndex<firingLength;firingIndex++){
if(list[firingIndex].apply(data[0],data[1])===false&&options.stopOnFalse){
memory=false;
break;
}
}
firing=false;
if(list){
if(stack){
if(stack.length){
fire(stack.shift());
}
}else if(memory){
list=[];
}else{
self.disable();
}
}
},

self={

add:function(){
if(list){

var start=list.length;
(function add(args){
jQuery.each(args,function(_,arg){
var type=jQuery.type(arg);
if(type==="function"){
if(!options.unique||!self.has(arg)){
list.push(arg);
}
}else if(arg&&arg.length&&type!=="string"){

add(arg);
}
});
})(arguments);


if(firing){
firingLength=list.length;


}else if(memory){
firingStart=start;
fire(memory);
}
}
return this;
},

remove:function(){
if(list){
jQuery.each(arguments,function(_,arg){
var index;
while((index=jQuery.inArray(arg,list,index))>-1){
list.splice(index,1);

if(firing){
if(index<=firingLength){
firingLength--;
}
if(index<=firingIndex){
firingIndex--;
}
}
}
});
}
return this;
},


has:function(fn){
return fn?jQuery.inArray(fn,list)>-1:!!(list&&list.length);
},

empty:function(){
list=[];
firingLength=0;
return this;
},

disable:function(){
list=stack=memory=undefined;
return this;
},

disabled:function(){
return!list;
},

lock:function(){
stack=undefined;
if(!memory){
self.disable();
}
return this;
},

locked:function(){
return!stack;
},

fireWith:function(context,args){
if(list&&(!fired||stack)){
args=args||[];
args=[context,args.slice?args.slice():args];
if(firing){
stack.push(args);
}else{
fire(args);
}
}
return this;
},

fire:function(){
self.fireWith(this,arguments);
return this;
},

fired:function(){
return!!fired;
}
};

return self;
};
jQuery.extend({

Deferred:function(func){
var tuples=[

["resolve","done",jQuery.Callbacks("once memory"),"resolved"],
["reject","fail",jQuery.Callbacks("once memory"),"rejected"],
["notify","progress",jQuery.Callbacks("memory")]
],
state="pending",
promise={
state:function(){
return state;
},
always:function(){
deferred.done(arguments).fail(arguments);
return this;
},
then:function(){
var fns=arguments;
return jQuery.Deferred(function(newDefer){
jQuery.each(tuples,function(i,tuple){
var action=tuple[0],
fn=jQuery.isFunction(fns[i])&&fns[i];

deferred[tuple[1]](function(){
var returned=fn&&fn.apply(this,arguments);
if(returned&&jQuery.isFunction(returned.promise)){
returned.promise()
.done(newDefer.resolve)
.fail(newDefer.reject)
.progress(newDefer.notify);
}else{
newDefer[action+"With"](this===promise?newDefer.promise():this,fn?[returned]:arguments);
}
});
});
fns=null;
}).promise();
},


promise:function(obj){
return obj!=null?jQuery.extend(obj,promise):promise;
}
},
deferred={};


promise.pipe=promise.then;


jQuery.each(tuples,function(i,tuple){
var list=tuple[2],
stateString=tuple[3];


promise[tuple[1]]=list.add;


if(stateString){
list.add(function(){

state=stateString;


},tuples[i^1][2].disable,tuples[2][2].lock);
}


deferred[tuple[0]]=function(){
deferred[tuple[0]+"With"](this===deferred?promise:this,arguments);
return this;
};
deferred[tuple[0]+"With"]=list.fireWith;
});


promise.promise(deferred);


if(func){
func.call(deferred,deferred);
}


return deferred;
},


when:function(subordinate){
var i=0,
resolveValues=core_slice.call(arguments),
length=resolveValues.length,


remaining=length!==1||(subordinate&&jQuery.isFunction(subordinate.promise))?length:0,


deferred=remaining===1?subordinate:jQuery.Deferred(),


updateFunc=function(i,contexts,values){
return function(value){
contexts[i]=this;
values[i]=arguments.length>1?core_slice.call(arguments):value;
if(values===progressValues){
deferred.notifyWith(contexts,values);
}else if(!(--remaining)){
deferred.resolveWith(contexts,values);
}
};
},

progressValues,progressContexts,resolveContexts;


if(length>1){
progressValues=new Array(length);
progressContexts=new Array(length);
resolveContexts=new Array(length);
for(;i<length;i++){
if(resolveValues[i]&&jQuery.isFunction(resolveValues[i].promise)){
resolveValues[i].promise()
.done(updateFunc(i,resolveContexts,resolveValues))
.fail(deferred.reject)
.progress(updateFunc(i,progressContexts,progressValues));
}else{
--remaining;
}
}
}


if(!remaining){
deferred.resolveWith(resolveContexts,resolveValues);
}

return deferred.promise();
}
});
jQuery.support=(function(support){

var all,a,input,select,fragment,opt,eventName,isSupported,i,
div=document.createElement("div");


div.setAttribute("className","t");
div.innerHTML="  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>";


all=div.getElementsByTagName("*")||[];
a=div.getElementsByTagName("a")[0];
if(!a||!a.style||!all.length){
return support;
}


select=document.createElement("select");
opt=select.appendChild(document.createElement("option"));
input=div.getElementsByTagName("input")[0];

a.style.cssText="top:1px;float:left;opacity:.5";


support.getSetAttribute=div.className!=="t";


support.leadingWhitespace=div.firstChild.nodeType===3;



support.tbody=!div.getElementsByTagName("tbody").length;



support.htmlSerialize=!!div.getElementsByTagName("link").length;



support.style=/top/.test(a.getAttribute("style"));



support.hrefNormalized=a.getAttribute("href")==="/a";




support.opacity=/^0.5/.test(a.style.opacity);



support.cssFloat=!!a.style.cssFloat;


support.checkOn=!!input.value;



support.optSelected=opt.selected;


support.enctype=!!document.createElement("form").enctype;



support.html5Clone=document.createElement("nav").cloneNode(true).outerHTML!=="<:nav></:nav>";


support.inlineBlockNeedsLayout=false;
support.shrinkWrapBlocks=false;
support.pixelPosition=false;
support.deleteExpando=true;
support.noCloneEvent=true;
support.reliableMarginRight=true;
support.boxSizingReliable=true;


input.checked=true;
support.noCloneChecked=input.cloneNode(true).checked;



select.disabled=true;
support.optDisabled=!opt.disabled;


try{
delete div.test;
}catch(e){
support.deleteExpando=false;
}


input=document.createElement("input");
input.setAttribute("value","");
support.input=input.getAttribute("value")==="";


input.value="t";
input.setAttribute("type","radio");
support.radioValue=input.value==="t";


input.setAttribute("checked","t");
input.setAttribute("name","t");

fragment=document.createDocumentFragment();
fragment.appendChild(input);



support.appendChecked=input.checked;


support.checkClone=fragment.cloneNode(true).cloneNode(true).lastChild.checked;




if(div.attachEvent){
div.attachEvent("onclick",function(){
support.noCloneEvent=false;
});

div.cloneNode(true).click();
}



for(i in{submit:true,change:true,focusin:true}){
div.setAttribute(eventName="on"+i,"t");

support[i+"Bubbles"]=eventName in window||div.attributes[eventName].expando===false;
}

div.style.backgroundClip="content-box";
div.cloneNode(true).style.backgroundClip="";
support.clearCloneStyle=div.style.backgroundClip==="content-box";



for(i in jQuery(support)){
break;
}
support.ownLast=i!=="0";


jQuery(function(){
var container,marginDiv,tds,
divReset="padding:0;margin:0;border:0;display:block;box-sizing:content-box;-moz-box-sizing:content-box;-webkit-box-sizing:content-box;",
body=document.getElementsByTagName("body")[0];

if(!body){

return;
}

container=document.createElement("div");
container.style.cssText="border:0;width:0;height:0;position:absolute;top:0;left:-9999px;margin-top:1px";

body.appendChild(container).appendChild(div);








div.innerHTML="<table><tr><td></td><td>t</td></tr></table>";
tds=div.getElementsByTagName("td");
tds[0].style.cssText="padding:0;margin:0;border:0;display:none";
isSupported=(tds[0].offsetHeight===0);

tds[0].style.display="";
tds[1].style.display="none";



support.reliableHiddenOffsets=isSupported&&(tds[0].offsetHeight===0);


div.innerHTML="";
div.style.cssText="box-sizing:border-box;-moz-box-sizing:border-box;-webkit-box-sizing:border-box;padding:1px;border:1px;display:block;width:4px;margin-top:1%;position:absolute;top:1%;";



jQuery.swap(body,body.style.zoom!=null?{zoom:1}:{},function(){
support.boxSizing=div.offsetWidth===4;
});


if(window.getComputedStyle){
support.pixelPosition=(window.getComputedStyle(div,null)||{}).top!=="1%";
support.boxSizingReliable=(window.getComputedStyle(div,null)||{width:"4px"}).width==="4px";





marginDiv=div.appendChild(document.createElement("div"));
marginDiv.style.cssText=div.style.cssText=divReset;
marginDiv.style.marginRight=marginDiv.style.width="0";
div.style.width="1px";

support.reliableMarginRight=
!parseFloat((window.getComputedStyle(marginDiv,null)||{}).marginRight);
}

if(typeof div.style.zoom!==core_strundefined){




div.innerHTML="";
div.style.cssText=divReset+"width:1px;padding:1px;display:inline;zoom:1";
support.inlineBlockNeedsLayout=(div.offsetWidth===3);



div.style.display="block";
div.innerHTML="<div></div>";
div.firstChild.style.width="5px";
support.shrinkWrapBlocks=(div.offsetWidth!==3);

if(support.inlineBlockNeedsLayout){



body.style.zoom=1;
}
}

body.removeChild(container);


container=div=tds=marginDiv=null;
});


all=select=fragment=opt=a=input=null;

return support;
})({});

var rbrace=/(?:\{[\s\S]*\}|\[[\s\S]*\])$/,
rmultiDash=/([A-Z])/g;

function internalData(elem,name,data,pvt){
if(!jQuery.acceptData(elem)){
return;
}

var ret,thisCache,
internalKey=jQuery.expando,



isNode=elem.nodeType,



cache=isNode?jQuery.cache:elem,



id=isNode?elem[internalKey]:elem[internalKey]&&internalKey;



if((!id||!cache[id]||(!pvt&&!cache[id].data))&&data===undefined&&typeof name==="string"){
return;
}

if(!id){


if(isNode){
id=elem[internalKey]=core_deletedIds.pop()||jQuery.guid++;
}else{
id=internalKey;
}
}

if(!cache[id]){


cache[id]=isNode?{}:{toJSON:jQuery.noop};
}



if(typeof name==="object"||typeof name==="function"){
if(pvt){
cache[id]=jQuery.extend(cache[id],name);
}else{
cache[id].data=jQuery.extend(cache[id].data,name);
}
}

thisCache=cache[id];




if(!pvt){
if(!thisCache.data){
thisCache.data={};
}

thisCache=thisCache.data;
}

if(data!==undefined){
thisCache[jQuery.camelCase(name)]=data;
}



if(typeof name==="string"){


ret=thisCache[name];


if(ret==null){


ret=thisCache[jQuery.camelCase(name)];
}
}else{
ret=thisCache;
}

return ret;
}

function internalRemoveData(elem,name,pvt){
if(!jQuery.acceptData(elem)){
return;
}

var thisCache,i,
isNode=elem.nodeType,


cache=isNode?jQuery.cache:elem,
id=isNode?elem[jQuery.expando]:jQuery.expando;



if(!cache[id]){
return;
}

if(name){

thisCache=pvt?cache[id]:cache[id].data;

if(thisCache){


if(!jQuery.isArray(name)){


if(name in thisCache){
name=[name];
}else{


name=jQuery.camelCase(name);
if(name in thisCache){
name=[name];
}else{
name=name.split(" ");
}
}
}else{






name=name.concat(jQuery.map(name,jQuery.camelCase));
}

i=name.length;
while(i--){
delete thisCache[name[i]];
}



if(pvt?!isEmptyDataObject(thisCache):!jQuery.isEmptyObject(thisCache)){
return;
}
}
}


if(!pvt){
delete cache[id].data;



if(!isEmptyDataObject(cache[id])){
return;
}
}


if(isNode){
jQuery.cleanData([elem],true);



}else if(jQuery.support.deleteExpando||cache!=cache.window){

delete cache[id];


}else{
cache[id]=null;
}
}

jQuery.extend({
cache:{},



noData:{
"applet":true,
"embed":true,

"object":"clsid:D27CDB6E-AE6D-11cf-96B8-444553540000"
},

hasData:function(elem){
elem=elem.nodeType?jQuery.cache[elem[jQuery.expando]]:elem[jQuery.expando];
return!!elem&&!isEmptyDataObject(elem);
},

data:function(elem,name,data){
return internalData(elem,name,data);
},

removeData:function(elem,name){
return internalRemoveData(elem,name);
},


_data:function(elem,name,data){
return internalData(elem,name,data,true);
},

_removeData:function(elem,name){
return internalRemoveData(elem,name,true);
},


acceptData:function(elem){

if(elem.nodeType&&elem.nodeType!==1&&elem.nodeType!==9){
return false;
}

var noData=elem.nodeName&&jQuery.noData[elem.nodeName.toLowerCase()];


return!noData||noData!==true&&elem.getAttribute("classid")===noData;
}
});

jQuery.fn.extend({
data:function(key,value){
var attrs,name,
data=null,
i=0,
elem=this[0];





if(key===undefined){
if(this.length){
data=jQuery.data(elem);

if(elem.nodeType===1&&!jQuery._data(elem,"parsedAttrs")){
attrs=elem.attributes;
for(;i<attrs.length;i++){
name=attrs[i].name;

if(name.indexOf("data-")===0){
name=jQuery.camelCase(name.slice(5));

dataAttr(elem,name,data[name]);
}
}
jQuery._data(elem,"parsedAttrs",true);
}
}

return data;
}


if(typeof key==="object"){
return this.each(function(){
jQuery.data(this,key);
});
}

return arguments.length>1?


this.each(function(){
jQuery.data(this,key,value);
}):



elem?dataAttr(elem,key,jQuery.data(elem,key)):null;
},

removeData:function(key){
return this.each(function(){
jQuery.removeData(this,key);
});
}
});

function dataAttr(elem,key,data){


if(data===undefined&&elem.nodeType===1){

var name="data-"+key.replace(rmultiDash,"-$1").toLowerCase();

data=elem.getAttribute(name);

if(typeof data==="string"){
try{
data=data==="true"?true:
data==="false"?false:
data==="null"?null:

+data+""===data?+data:
rbrace.test(data)?jQuery.parseJSON(data):
data;
}catch(e){}


jQuery.data(elem,key,data);

}else{
data=undefined;
}
}

return data;
}


function isEmptyDataObject(obj){
var name;
for(name in obj){


if(name==="data"&&jQuery.isEmptyObject(obj[name])){
continue;
}
if(name!=="toJSON"){
return false;
}
}

return true;
}
jQuery.extend({
queue:function(elem,type,data){
var queue;

if(elem){
type=(type||"fx")+"queue";
queue=jQuery._data(elem,type);


if(data){
if(!queue||jQuery.isArray(data)){
queue=jQuery._data(elem,type,jQuery.makeArray(data));
}else{
queue.push(data);
}
}
return queue||[];
}
},

dequeue:function(elem,type){
type=type||"fx";

var queue=jQuery.queue(elem,type),
startLength=queue.length,
fn=queue.shift(),
hooks=jQuery._queueHooks(elem,type),
next=function(){
jQuery.dequeue(elem,type);
};


if(fn==="inprogress"){
fn=queue.shift();
startLength--;
}

if(fn){



if(type==="fx"){
queue.unshift("inprogress");
}


delete hooks.stop;
fn.call(elem,next,hooks);
}

if(!startLength&&hooks){
hooks.empty.fire();
}
},


_queueHooks:function(elem,type){
var key=type+"queueHooks";
return jQuery._data(elem,key)||jQuery._data(elem,key,{
empty:jQuery.Callbacks("once memory").add(function(){
jQuery._removeData(elem,type+"queue");
jQuery._removeData(elem,key);
})
});
}
});

jQuery.fn.extend({
queue:function(type,data){
var setter=2;

if(typeof type!=="string"){
data=type;
type="fx";
setter--;
}

if(arguments.length<setter){
return jQuery.queue(this[0],type);
}

return data===undefined?
this:
this.each(function(){
var queue=jQuery.queue(this,type,data);


jQuery._queueHooks(this,type);

if(type==="fx"&&queue[0]!=="inprogress"){
jQuery.dequeue(this,type);
}
});
},
dequeue:function(type){
return this.each(function(){
jQuery.dequeue(this,type);
});
},


delay:function(time,type){
time=jQuery.fx?jQuery.fx.speeds[time]||time:time;
type=type||"fx";

return this.queue(type,function(next,hooks){
var timeout=setTimeout(next,time);
hooks.stop=function(){
clearTimeout(timeout);
};
});
},
clearQueue:function(type){
return this.queue(type||"fx",[]);
},


promise:function(type,obj){
var tmp,
count=1,
defer=jQuery.Deferred(),
elements=this,
i=this.length,
resolve=function(){
if(!(--count)){
defer.resolveWith(elements,[elements]);
}
};

if(typeof type!=="string"){
obj=type;
type=undefined;
}
type=type||"fx";

while(i--){
tmp=jQuery._data(elements[i],type+"queueHooks");
if(tmp&&tmp.empty){
count++;
tmp.empty.add(resolve);
}
}
resolve();
return defer.promise(obj);
}
});
var nodeHook,boolHook,
rclass=/[\t\r\n\f]/g,
rreturn=/\r/g,
rfocusable=/^(?:input|select|textarea|button|object)$/i,
rclickable=/^(?:a|area)$/i,
ruseDefault=/^(?:checked|selected)$/i,
getSetAttribute=jQuery.support.getSetAttribute,
getSetInput=jQuery.support.input;

jQuery.fn.extend({
attr:function(name,value){
return jQuery.access(this,jQuery.attr,name,value,arguments.length>1);
},

removeAttr:function(name){
return this.each(function(){
jQuery.removeAttr(this,name);
});
},

prop:function(name,value){
return jQuery.access(this,jQuery.prop,name,value,arguments.length>1);
},

removeProp:function(name){
name=jQuery.propFix[name]||name;
return this.each(function(){

try{
this[name]=undefined;
delete this[name];
}catch(e){}
});
},

addClass:function(value){
var classes,elem,cur,clazz,j,
i=0,
len=this.length,
proceed=typeof value==="string"&&value;

if(jQuery.isFunction(value)){
return this.each(function(j){
jQuery(this).addClass(value.call(this,j,this.className));
});
}

if(proceed){

classes=(value||"").match(core_rnotwhite)||[];

for(;i<len;i++){
elem=this[i];
cur=elem.nodeType===1&&(elem.className?
(" "+elem.className+" ").replace(rclass," "):
" "
);

if(cur){
j=0;
while((clazz=classes[j++])){
if(cur.indexOf(" "+clazz+" ")<0){
cur+=clazz+" ";
}
}
elem.className=jQuery.trim(cur);

}
}
}

return this;
},

removeClass:function(value){
var classes,elem,cur,clazz,j,
i=0,
len=this.length,
proceed=arguments.length===0||typeof value==="string"&&value;

if(jQuery.isFunction(value)){
return this.each(function(j){
jQuery(this).removeClass(value.call(this,j,this.className));
});
}
if(proceed){
classes=(value||"").match(core_rnotwhite)||[];

for(;i<len;i++){
elem=this[i];

cur=elem.nodeType===1&&(elem.className?
(" "+elem.className+" ").replace(rclass," "):
""
);

if(cur){
j=0;
while((clazz=classes[j++])){

while(cur.indexOf(" "+clazz+" ")>=0){
cur=cur.replace(" "+clazz+" "," ");
}
}
elem.className=value?jQuery.trim(cur):"";
}
}
}

return this;
},

toggleClass:function(value,stateVal){
var type=typeof value;

if(typeof stateVal==="boolean"&&type==="string"){
return stateVal?this.addClass(value):this.removeClass(value);
}

if(jQuery.isFunction(value)){
return this.each(function(i){
jQuery(this).toggleClass(value.call(this,i,this.className,stateVal),stateVal);
});
}

return this.each(function(){
if(type==="string"){

var className,
i=0,
self=jQuery(this),
classNames=value.match(core_rnotwhite)||[];

while((className=classNames[i++])){

if(self.hasClass(className)){
self.removeClass(className);
}else{
self.addClass(className);
}
}


}else if(type===core_strundefined||type==="boolean"){
if(this.className){

jQuery._data(this,"__className__",this.className);
}





this.className=this.className||value===false?"":jQuery._data(this,"__className__")||"";
}
});
},

hasClass:function(selector){
var className=" "+selector+" ",
i=0,
l=this.length;
for(;i<l;i++){
if(this[i].nodeType===1&&(" "+this[i].className+" ").replace(rclass," ").indexOf(className)>=0){
return true;
}
}

return false;
},

val:function(value){
var ret,hooks,isFunction,
elem=this[0];

if(!arguments.length){
if(elem){
hooks=jQuery.valHooks[elem.type]||jQuery.valHooks[elem.nodeName.toLowerCase()];

if(hooks&&"get"in hooks&&(ret=hooks.get(elem,"value"))!==undefined){
return ret;
}

ret=elem.value;

return typeof ret==="string"?

ret.replace(rreturn,""):

ret==null?"":ret;
}

return;
}

isFunction=jQuery.isFunction(value);

return this.each(function(i){
var val;

if(this.nodeType!==1){
return;
}

if(isFunction){
val=value.call(this,i,jQuery(this).val());
}else{
val=value;
}


if(val==null){
val="";
}else if(typeof val==="number"){
val+="";
}else if(jQuery.isArray(val)){
val=jQuery.map(val,function(value){
return value==null?"":value+"";
});
}

hooks=jQuery.valHooks[this.type]||jQuery.valHooks[this.nodeName.toLowerCase()];


if(!hooks||!("set"in hooks)||hooks.set(this,val,"value")===undefined){
this.value=val;
}
});
}
});

jQuery.extend({
valHooks:{
option:{
get:function(elem){

var val=jQuery.find.attr(elem,"value");
return val!=null?
val:
elem.text;
}
},
select:{
get:function(elem){
var value,option,
options=elem.options,
index=elem.selectedIndex,
one=elem.type==="select-one"||index<0,
values=one?null:[],
max=one?index+1:options.length,
i=index<0?
max:
one?index:0;


for(;i<max;i++){
option=options[i];


if((option.selected||i===index)&&

(jQuery.support.optDisabled?!option.disabled:option.getAttribute("disabled")===null)&&
(!option.parentNode.disabled||!jQuery.nodeName(option.parentNode,"optgroup"))){


value=jQuery(option).val();


if(one){
return value;
}


values.push(value);
}
}

return values;
},

set:function(elem,value){
var optionSet,option,
options=elem.options,
values=jQuery.makeArray(value),
i=options.length;

while(i--){
option=options[i];
if((option.selected=jQuery.inArray(jQuery(option).val(),values)>=0)){
optionSet=true;
}
}


if(!optionSet){
elem.selectedIndex=-1;
}
return values;
}
}
},

attr:function(elem,name,value){
var hooks,ret,
nType=elem.nodeType;


if(!elem||nType===3||nType===8||nType===2){
return;
}


if(typeof elem.getAttribute===core_strundefined){
return jQuery.prop(elem,name,value);
}



if(nType!==1||!jQuery.isXMLDoc(elem)){
name=name.toLowerCase();
hooks=jQuery.attrHooks[name]||
(jQuery.expr.match.bool.test(name)?boolHook:nodeHook);
}

if(value!==undefined){

if(value===null){
jQuery.removeAttr(elem,name);

}else if(hooks&&"set"in hooks&&(ret=hooks.set(elem,value,name))!==undefined){
return ret;

}else{
elem.setAttribute(name,value+"");
return value;
}

}else if(hooks&&"get"in hooks&&(ret=hooks.get(elem,name))!==null){
return ret;

}else{
ret=jQuery.find.attr(elem,name);


return ret==null?
undefined:
ret;
}
},

removeAttr:function(elem,value){
var name,propName,
i=0,
attrNames=value&&value.match(core_rnotwhite);

if(attrNames&&elem.nodeType===1){
while((name=attrNames[i++])){
propName=jQuery.propFix[name]||name;


if(jQuery.expr.match.bool.test(name)){

if(getSetInput&&getSetAttribute||!ruseDefault.test(name)){
elem[propName]=false;


}else{
elem[jQuery.camelCase("default-"+name)]=
elem[propName]=false;
}


}else{
jQuery.attr(elem,name,"");
}

elem.removeAttribute(getSetAttribute?name:propName);
}
}
},

attrHooks:{
type:{
set:function(elem,value){
if(!jQuery.support.radioValue&&value==="radio"&&jQuery.nodeName(elem,"input")){


var val=elem.value;
elem.setAttribute("type",value);
if(val){
elem.value=val;
}
return value;
}
}
}
},

propFix:{
"for":"htmlFor",
"class":"className"
},

prop:function(elem,name,value){
var ret,hooks,notxml,
nType=elem.nodeType;


if(!elem||nType===3||nType===8||nType===2){
return;
}

notxml=nType!==1||!jQuery.isXMLDoc(elem);

if(notxml){

name=jQuery.propFix[name]||name;
hooks=jQuery.propHooks[name];
}

if(value!==undefined){
return hooks&&"set"in hooks&&(ret=hooks.set(elem,value,name))!==undefined?
ret:
(elem[name]=value);

}else{
return hooks&&"get"in hooks&&(ret=hooks.get(elem,name))!==null?
ret:
elem[name];
}
},

propHooks:{
tabIndex:{
get:function(elem){



var tabindex=jQuery.find.attr(elem,"tabindex");

return tabindex?
parseInt(tabindex,10):
rfocusable.test(elem.nodeName)||rclickable.test(elem.nodeName)&&elem.href?
0:
-1;
}
}
}
});


boolHook={
set:function(elem,value,name){
if(value===false){

jQuery.removeAttr(elem,name);
}else if(getSetInput&&getSetAttribute||!ruseDefault.test(name)){

elem.setAttribute(!getSetAttribute&&jQuery.propFix[name]||name,name);


}else{
elem[jQuery.camelCase("default-"+name)]=elem[name]=true;
}

return name;
}
};
jQuery.each(jQuery.expr.match.bool.source.match(/\w+/g),function(i,name){
var getter=jQuery.expr.attrHandle[name]||jQuery.find.attr;

jQuery.expr.attrHandle[name]=getSetInput&&getSetAttribute||!ruseDefault.test(name)?
function(elem,name,isXML){
var fn=jQuery.expr.attrHandle[name],
ret=isXML?
undefined:

(jQuery.expr.attrHandle[name]=undefined)!=
getter(elem,name,isXML)?

name.toLowerCase():
null;
jQuery.expr.attrHandle[name]=fn;
return ret;
}:
function(elem,name,isXML){
return isXML?
undefined:
elem[jQuery.camelCase("default-"+name)]?
name.toLowerCase():
null;
};
});


if(!getSetInput||!getSetAttribute){
jQuery.attrHooks.value={
set:function(elem,value,name){
if(jQuery.nodeName(elem,"input")){

elem.defaultValue=value;
}else{

return nodeHook&&nodeHook.set(elem,value,name);
}
}
};
}


if(!getSetAttribute){



nodeHook={
set:function(elem,value,name){

var ret=elem.getAttributeNode(name);
if(!ret){
elem.setAttributeNode(
(ret=elem.ownerDocument.createAttribute(name))
);
}

ret.value=value+="";


return name==="value"||value===elem.getAttribute(name)?
value:
undefined;
}
};
jQuery.expr.attrHandle.id=jQuery.expr.attrHandle.name=jQuery.expr.attrHandle.coords=

function(elem,name,isXML){
var ret;
return isXML?
undefined:
(ret=elem.getAttributeNode(name))&&ret.value!==""?
ret.value:
null;
};
jQuery.valHooks.button={
get:function(elem,name){
var ret=elem.getAttributeNode(name);
return ret&&ret.specified?
ret.value:
undefined;
},
set:nodeHook.set
};



jQuery.attrHooks.contenteditable={
set:function(elem,value,name){
nodeHook.set(elem,value===""?false:value,name);
}
};



jQuery.each(["width","height"],function(i,name){
jQuery.attrHooks[name]={
set:function(elem,value){
if(value===""){
elem.setAttribute(name,"auto");
return value;
}
}
};
});
}




if(!jQuery.support.hrefNormalized){

jQuery.each(["href","src"],function(i,name){
jQuery.propHooks[name]={
get:function(elem){
return elem.getAttribute(name,4);
}
};
});
}

if(!jQuery.support.style){
jQuery.attrHooks.style={
get:function(elem){



return elem.style.cssText||undefined;
},
set:function(elem,value){
return(elem.style.cssText=value+"");
}
};
}



if(!jQuery.support.optSelected){
jQuery.propHooks.selected={
get:function(elem){
var parent=elem.parentNode;

if(parent){
parent.selectedIndex;


if(parent.parentNode){
parent.parentNode.selectedIndex;
}
}
return null;
}
};
}

jQuery.each([
"tabIndex",
"readOnly",
"maxLength",
"cellSpacing",
"cellPadding",
"rowSpan",
"colSpan",
"useMap",
"frameBorder",
"contentEditable"
],function(){
jQuery.propFix[this.toLowerCase()]=this;
});


if(!jQuery.support.enctype){
jQuery.propFix.enctype="encoding";
}


jQuery.each(["radio","checkbox"],function(){
jQuery.valHooks[this]={
set:function(elem,value){
if(jQuery.isArray(value)){
return(elem.checked=jQuery.inArray(jQuery(elem).val(),value)>=0);
}
}
};
if(!jQuery.support.checkOn){
jQuery.valHooks[this].get=function(elem){


return elem.getAttribute("value")===null?"on":elem.value;
};
}
});
var rformElems=/^(?:input|select|textarea)$/i,
rkeyEvent=/^key/,
rmouseEvent=/^(?:mouse|contextmenu)|click/,
rfocusMorph=/^(?:focusinfocus|focusoutblur)$/,
rtypenamespace=/^([^.]*)(?:\.(.+)|)$/;

function returnTrue(){
return true;
}

function returnFalse(){
return false;
}

function safeActiveElement(){
try{
return document.activeElement;
}catch(err){}
}





jQuery.event={

global:{},

add:function(elem,types,handler,data,selector){
var tmp,events,t,handleObjIn,
special,eventHandle,handleObj,
handlers,type,namespaces,origType,
elemData=jQuery._data(elem);


if(!elemData){
return;
}


if(handler.handler){
handleObjIn=handler;
handler=handleObjIn.handler;
selector=handleObjIn.selector;
}


if(!handler.guid){
handler.guid=jQuery.guid++;
}


if(!(events=elemData.events)){
events=elemData.events={};
}
if(!(eventHandle=elemData.handle)){
eventHandle=elemData.handle=function(e){


return typeof jQuery!==core_strundefined&&(!e||jQuery.event.triggered!==e.type)?
jQuery.event.dispatch.apply(eventHandle.elem,arguments):
undefined;
};

eventHandle.elem=elem;
}


types=(types||"").match(core_rnotwhite)||[""];
t=types.length;
while(t--){
tmp=rtypenamespace.exec(types[t])||[];
type=origType=tmp[1];
namespaces=(tmp[2]||"").split(".").sort();


if(!type){
continue;
}


special=jQuery.event.special[type]||{};


type=(selector?special.delegateType:special.bindType)||type;


special=jQuery.event.special[type]||{};


handleObj=jQuery.extend({
type:type,
origType:origType,
data:data,
handler:handler,
guid:handler.guid,
selector:selector,
needsContext:selector&&jQuery.expr.match.needsContext.test(selector),
namespace:namespaces.join(".")
},handleObjIn);


if(!(handlers=events[type])){
handlers=events[type]=[];
handlers.delegateCount=0;


if(!special.setup||special.setup.call(elem,data,namespaces,eventHandle)===false){

if(elem.addEventListener){
elem.addEventListener(type,eventHandle,false);

}else if(elem.attachEvent){
elem.attachEvent("on"+type,eventHandle);
}
}
}

if(special.add){
special.add.call(elem,handleObj);

if(!handleObj.handler.guid){
handleObj.handler.guid=handler.guid;
}
}


if(selector){
handlers.splice(handlers.delegateCount++,0,handleObj);
}else{
handlers.push(handleObj);
}


jQuery.event.global[type]=true;
}


elem=null;
},


remove:function(elem,types,handler,selector,mappedTypes){
var j,handleObj,tmp,
origCount,t,events,
special,handlers,type,
namespaces,origType,
elemData=jQuery.hasData(elem)&&jQuery._data(elem);

if(!elemData||!(events=elemData.events)){
return;
}


types=(types||"").match(core_rnotwhite)||[""];
t=types.length;
while(t--){
tmp=rtypenamespace.exec(types[t])||[];
type=origType=tmp[1];
namespaces=(tmp[2]||"").split(".").sort();


if(!type){
for(type in events){
jQuery.event.remove(elem,type+types[t],handler,selector,true);
}
continue;
}

special=jQuery.event.special[type]||{};
type=(selector?special.delegateType:special.bindType)||type;
handlers=events[type]||[];
tmp=tmp[2]&&new RegExp("(^|\\.)"+namespaces.join("\\.(?:.*\\.|)")+"(\\.|$)");


origCount=j=handlers.length;
while(j--){
handleObj=handlers[j];

if((mappedTypes||origType===handleObj.origType)&&
(!handler||handler.guid===handleObj.guid)&&
(!tmp||tmp.test(handleObj.namespace))&&
(!selector||selector===handleObj.selector||selector==="**"&&handleObj.selector)){
handlers.splice(j,1);

if(handleObj.selector){
handlers.delegateCount--;
}
if(special.remove){
special.remove.call(elem,handleObj);
}
}
}



if(origCount&&!handlers.length){
if(!special.teardown||special.teardown.call(elem,namespaces,elemData.handle)===false){
jQuery.removeEvent(elem,type,elemData.handle);
}

delete events[type];
}
}


if(jQuery.isEmptyObject(events)){
delete elemData.handle;



jQuery._removeData(elem,"events");
}
},

trigger:function(event,data,elem,onlyHandlers){
var handle,ontype,cur,
bubbleType,special,tmp,i,
eventPath=[elem||document],
type=core_hasOwn.call(event,"type")?event.type:event,
namespaces=core_hasOwn.call(event,"namespace")?event.namespace.split("."):[];

cur=tmp=elem=elem||document;


if(elem.nodeType===3||elem.nodeType===8){
return;
}


if(rfocusMorph.test(type+jQuery.event.triggered)){
return;
}

if(type.indexOf(".")>=0){

namespaces=type.split(".");
type=namespaces.shift();
namespaces.sort();
}
ontype=type.indexOf(":")<0&&"on"+type;


event=event[jQuery.expando]?
event:
new jQuery.Event(type,typeof event==="object"&&event);


event.isTrigger=onlyHandlers?2:3;
event.namespace=namespaces.join(".");
event.namespace_re=event.namespace?
new RegExp("(^|\\.)"+namespaces.join("\\.(?:.*\\.|)")+"(\\.|$)"):
null;


event.result=undefined;
if(!event.target){
event.target=elem;
}


data=data==null?
[event]:
jQuery.makeArray(data,[event]);


special=jQuery.event.special[type]||{};
if(!onlyHandlers&&special.trigger&&special.trigger.apply(elem,data)===false){
return;
}



if(!onlyHandlers&&!special.noBubble&&!jQuery.isWindow(elem)){

bubbleType=special.delegateType||type;
if(!rfocusMorph.test(bubbleType+type)){
cur=cur.parentNode;
}
for(;cur;cur=cur.parentNode){
eventPath.push(cur);
tmp=cur;
}


if(tmp===(elem.ownerDocument||document)){
eventPath.push(tmp.defaultView||tmp.parentWindow||window);
}
}


i=0;
while((cur=eventPath[i++])&&!event.isPropagationStopped()){

event.type=i>1?
bubbleType:
special.bindType||type;


handle=(jQuery._data(cur,"events")||{})[event.type]&&jQuery._data(cur,"handle");
if(handle){
handle.apply(cur,data);
}


handle=ontype&&cur[ontype];
if(handle&&jQuery.acceptData(cur)&&handle.apply&&handle.apply(cur,data)===false){
event.preventDefault();
}
}
event.type=type;


if(!onlyHandlers&&!event.isDefaultPrevented()){

if((!special._default||special._default.apply(eventPath.pop(),data)===false)&&
jQuery.acceptData(elem)){




if(ontype&&elem[type]&&!jQuery.isWindow(elem)){


tmp=elem[ontype];

if(tmp){
elem[ontype]=null;
}


jQuery.event.triggered=type;
try{
elem[type]();
}catch(e){


}
jQuery.event.triggered=undefined;

if(tmp){
elem[ontype]=tmp;
}
}
}
}

return event.result;
},

dispatch:function(event){


event=jQuery.event.fix(event);

var i,ret,handleObj,matched,j,
handlerQueue=[],
args=core_slice.call(arguments),
handlers=(jQuery._data(this,"events")||{})[event.type]||[],
special=jQuery.event.special[event.type]||{};


args[0]=event;
event.delegateTarget=this;


if(special.preDispatch&&special.preDispatch.call(this,event)===false){
return;
}


handlerQueue=jQuery.event.handlers.call(this,event,handlers);


i=0;
while((matched=handlerQueue[i++])&&!event.isPropagationStopped()){
event.currentTarget=matched.elem;

j=0;
while((handleObj=matched.handlers[j++])&&!event.isImmediatePropagationStopped()){



if(!event.namespace_re||event.namespace_re.test(handleObj.namespace)){

event.handleObj=handleObj;
event.data=handleObj.data;

ret=((jQuery.event.special[handleObj.origType]||{}).handle||handleObj.handler)
.apply(matched.elem,args);

if(ret!==undefined){
if((event.result=ret)===false){
event.preventDefault();
event.stopPropagation();
}
}
}
}
}


if(special.postDispatch){
special.postDispatch.call(this,event);
}

return event.result;
},

handlers:function(event,handlers){
var sel,handleObj,matches,i,
handlerQueue=[],
delegateCount=handlers.delegateCount,
cur=event.target;




if(delegateCount&&cur.nodeType&&(!event.button||event.type!=="click")){


for(;cur!=this;cur=cur.parentNode||this){




if(cur.nodeType===1&&(cur.disabled!==true||event.type!=="click")){
matches=[];
for(i=0;i<delegateCount;i++){
handleObj=handlers[i];


sel=handleObj.selector+" ";

if(matches[sel]===undefined){
matches[sel]=handleObj.needsContext?
jQuery(sel,this).index(cur)>=0:
jQuery.find(sel,this,null,[cur]).length;
}
if(matches[sel]){
matches.push(handleObj);
}
}
if(matches.length){
handlerQueue.push({elem:cur,handlers:matches});
}
}
}
}


if(delegateCount<handlers.length){
handlerQueue.push({elem:this,handlers:handlers.slice(delegateCount)});
}

return handlerQueue;
},

fix:function(event){
if(event[jQuery.expando]){
return event;
}


var i,prop,copy,
type=event.type,
originalEvent=event,
fixHook=this.fixHooks[type];

if(!fixHook){
this.fixHooks[type]=fixHook=
rmouseEvent.test(type)?this.mouseHooks:
rkeyEvent.test(type)?this.keyHooks:
{};
}
copy=fixHook.props?this.props.concat(fixHook.props):this.props;

event=new jQuery.Event(originalEvent);

i=copy.length;
while(i--){
prop=copy[i];
event[prop]=originalEvent[prop];
}



if(!event.target){
event.target=originalEvent.srcElement||document;
}



if(event.target.nodeType===3){
event.target=event.target.parentNode;
}



event.metaKey=!!event.metaKey;

return fixHook.filter?fixHook.filter(event,originalEvent):event;
},


props:"altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which".split(" "),

fixHooks:{},

keyHooks:{
props:"char charCode key keyCode".split(" "),
filter:function(event,original){


if(event.which==null){
event.which=original.charCode!=null?original.charCode:original.keyCode;
}

return event;
}
},

mouseHooks:{
props:"button buttons clientX clientY fromElement offsetX offsetY pageX pageY screenX screenY toElement".split(" "),
filter:function(event,original){
var body,eventDoc,doc,
button=original.button,
fromElement=original.fromElement;


if(event.pageX==null&&original.clientX!=null){
eventDoc=event.target.ownerDocument||document;
doc=eventDoc.documentElement;
body=eventDoc.body;

event.pageX=original.clientX+(doc&&doc.scrollLeft||body&&body.scrollLeft||0)-(doc&&doc.clientLeft||body&&body.clientLeft||0);
event.pageY=original.clientY+(doc&&doc.scrollTop||body&&body.scrollTop||0)-(doc&&doc.clientTop||body&&body.clientTop||0);
}


if(!event.relatedTarget&&fromElement){
event.relatedTarget=fromElement===event.target?original.toElement:fromElement;
}



if(!event.which&&button!==undefined){
event.which=(button&1?1:(button&2?3:(button&4?2:0)));
}

return event;
}
},

special:{
load:{

noBubble:true
},
focus:{

trigger:function(){
if(this!==safeActiveElement()&&this.focus){
try{
this.focus();
return false;
}catch(e){



}
}
},
delegateType:"focusin"
},
blur:{
trigger:function(){
if(this===safeActiveElement()&&this.blur){
this.blur();
return false;
}
},
delegateType:"focusout"
},
click:{

trigger:function(){
if(jQuery.nodeName(this,"input")&&this.type==="checkbox"&&this.click){
this.click();
return false;
}
},


_default:function(event){
return jQuery.nodeName(event.target,"a");
}
},

beforeunload:{
postDispatch:function(event){


if(event.result!==undefined){
event.originalEvent.returnValue=event.result;
}
}
}
},

simulate:function(type,elem,event,bubble){



var e=jQuery.extend(
new jQuery.Event(),
event,
{
type:type,
isSimulated:true,
originalEvent:{}
}
);
if(bubble){
jQuery.event.trigger(e,null,elem);
}else{
jQuery.event.dispatch.call(elem,e);
}
if(e.isDefaultPrevented()){
event.preventDefault();
}
}
};

jQuery.removeEvent=document.removeEventListener?
function(elem,type,handle){
if(elem.removeEventListener){
elem.removeEventListener(type,handle,false);
}
}:
function(elem,type,handle){
var name="on"+type;

if(elem.detachEvent){



if(typeof elem[name]===core_strundefined){
elem[name]=null;
}

elem.detachEvent(name,handle);
}
};

jQuery.Event=function(src,props){

if(!(this instanceof jQuery.Event)){
return new jQuery.Event(src,props);
}


if(src&&src.type){
this.originalEvent=src;
this.type=src.type;



this.isDefaultPrevented=(src.defaultPrevented||src.returnValue===false||
src.getPreventDefault&&src.getPreventDefault())?returnTrue:returnFalse;


}else{
this.type=src;
}


if(props){
jQuery.extend(this,props);
}


this.timeStamp=src&&src.timeStamp||jQuery.now();


this[jQuery.expando]=true;
};



jQuery.Event.prototype={
isDefaultPrevented:returnFalse,
isPropagationStopped:returnFalse,
isImmediatePropagationStopped:returnFalse,

preventDefault:function(){
var e=this.originalEvent;

this.isDefaultPrevented=returnTrue;
if(!e){
return;
}


if(e.preventDefault){
e.preventDefault();



}else{
e.returnValue=false;
}
},
stopPropagation:function(){
var e=this.originalEvent;

this.isPropagationStopped=returnTrue;
if(!e){
return;
}

if(e.stopPropagation){
e.stopPropagation();
}



e.cancelBubble=true;
},
stopImmediatePropagation:function(){
this.isImmediatePropagationStopped=returnTrue;
this.stopPropagation();
}
};


jQuery.each({
mouseenter:"mouseover",
mouseleave:"mouseout"
},function(orig,fix){
jQuery.event.special[orig]={
delegateType:fix,
bindType:fix,

handle:function(event){
var ret,
target=this,
related=event.relatedTarget,
handleObj=event.handleObj;



if(!related||(related!==target&&!jQuery.contains(target,related))){
event.type=handleObj.origType;
ret=handleObj.handler.apply(this,arguments);
event.type=fix;
}
return ret;
}
};
});


if(!jQuery.support.submitBubbles){

jQuery.event.special.submit={
setup:function(){

if(jQuery.nodeName(this,"form")){
return false;
}


jQuery.event.add(this,"click._submit keypress._submit",function(e){

var elem=e.target,
form=jQuery.nodeName(elem,"input")||jQuery.nodeName(elem,"button")?elem.form:undefined;
if(form&&!jQuery._data(form,"submitBubbles")){
jQuery.event.add(form,"submit._submit",function(event){
event._submit_bubble=true;
});
jQuery._data(form,"submitBubbles",true);
}
});

},

postDispatch:function(event){

if(event._submit_bubble){
delete event._submit_bubble;
if(this.parentNode&&!event.isTrigger){
jQuery.event.simulate("submit",this.parentNode,event,true);
}
}
},

teardown:function(){

if(jQuery.nodeName(this,"form")){
return false;
}


jQuery.event.remove(this,"._submit");
}
};
}


if(!jQuery.support.changeBubbles){

jQuery.event.special.change={

setup:function(){

if(rformElems.test(this.nodeName)){



if(this.type==="checkbox"||this.type==="radio"){
jQuery.event.add(this,"propertychange._change",function(event){
if(event.originalEvent.propertyName==="checked"){
this._just_changed=true;
}
});
jQuery.event.add(this,"click._change",function(event){
if(this._just_changed&&!event.isTrigger){
this._just_changed=false;
}

jQuery.event.simulate("change",this,event,true);
});
}
return false;
}

jQuery.event.add(this,"beforeactivate._change",function(e){
var elem=e.target;

if(rformElems.test(elem.nodeName)&&!jQuery._data(elem,"changeBubbles")){
jQuery.event.add(elem,"change._change",function(event){
if(this.parentNode&&!event.isSimulated&&!event.isTrigger){
jQuery.event.simulate("change",this.parentNode,event,true);
}
});
jQuery._data(elem,"changeBubbles",true);
}
});
},

handle:function(event){
var elem=event.target;


if(this!==elem||event.isSimulated||event.isTrigger||(elem.type!=="radio"&&elem.type!=="checkbox")){
return event.handleObj.handler.apply(this,arguments);
}
},

teardown:function(){
jQuery.event.remove(this,"._change");

return!rformElems.test(this.nodeName);
}
};
}


if(!jQuery.support.focusinBubbles){
jQuery.each({focus:"focusin",blur:"focusout"},function(orig,fix){


var attaches=0,
handler=function(event){
jQuery.event.simulate(fix,event.target,jQuery.event.fix(event),true);
};

jQuery.event.special[fix]={
setup:function(){
if(attaches++===0){
document.addEventListener(orig,handler,true);
}
},
teardown:function(){
if(--attaches===0){
document.removeEventListener(orig,handler,true);
}
}
};
});
}

jQuery.fn.extend({

on:function(types,selector,data,fn,one){
var type,origFn;


if(typeof types==="object"){

if(typeof selector!=="string"){

data=data||selector;
selector=undefined;
}
for(type in types){
this.on(type,selector,data,types[type],one);
}
return this;
}

if(data==null&&fn==null){

fn=selector;
data=selector=undefined;
}else if(fn==null){
if(typeof selector==="string"){

fn=data;
data=undefined;
}else{

fn=data;
data=selector;
selector=undefined;
}
}
if(fn===false){
fn=returnFalse;
}else if(!fn){
return this;
}

if(one===1){
origFn=fn;
fn=function(event){

jQuery().off(event);
return origFn.apply(this,arguments);
};

fn.guid=origFn.guid||(origFn.guid=jQuery.guid++);
}
return this.each(function(){
jQuery.event.add(this,types,fn,data,selector);
});
},
one:function(types,selector,data,fn){
return this.on(types,selector,data,fn,1);
},
off:function(types,selector,fn){
var handleObj,type;
if(types&&types.preventDefault&&types.handleObj){

handleObj=types.handleObj;
jQuery(types.delegateTarget).off(
handleObj.namespace?handleObj.origType+"."+handleObj.namespace:handleObj.origType,
handleObj.selector,
handleObj.handler
);
return this;
}
if(typeof types==="object"){

for(type in types){
this.off(type,selector,types[type]);
}
return this;
}
if(selector===false||typeof selector==="function"){

fn=selector;
selector=undefined;
}
if(fn===false){
fn=returnFalse;
}
return this.each(function(){
jQuery.event.remove(this,types,fn,selector);
});
},

trigger:function(type,data){
return this.each(function(){
jQuery.event.trigger(type,data,this);
});
},
triggerHandler:function(type,data){
var elem=this[0];
if(elem){
return jQuery.event.trigger(type,data,elem,true);
}
}
});
var isSimple=/^.[^:#\[\.,]*$/,
rparentsprev=/^(?:parents|prev(?:Until|All))/,
rneedsContext=jQuery.expr.match.needsContext,

guaranteedUnique={
children:true,
contents:true,
next:true,
prev:true
};

jQuery.fn.extend({
find:function(selector){
var i,
ret=[],
self=this,
len=self.length;

if(typeof selector!=="string"){
return this.pushStack(jQuery(selector).filter(function(){
for(i=0;i<len;i++){
if(jQuery.contains(self[i],this)){
return true;
}
}
}));
}

for(i=0;i<len;i++){
jQuery.find(selector,self[i],ret);
}


ret=this.pushStack(len>1?jQuery.unique(ret):ret);
ret.selector=this.selector?this.selector+" "+selector:selector;
return ret;
},

has:function(target){
var i,
targets=jQuery(target,this),
len=targets.length;

return this.filter(function(){
for(i=0;i<len;i++){
if(jQuery.contains(this,targets[i])){
return true;
}
}
});
},

not:function(selector){
return this.pushStack(winnow(this,selector||[],true));
},

filter:function(selector){
return this.pushStack(winnow(this,selector||[],false));
},

is:function(selector){
return!!winnow(
this,



typeof selector==="string"&&rneedsContext.test(selector)?
jQuery(selector):
selector||[],
false
).length;
},

closest:function(selectors,context){
var cur,
i=0,
l=this.length,
ret=[],
pos=rneedsContext.test(selectors)||typeof selectors!=="string"?
jQuery(selectors,context||this.context):
0;

for(;i<l;i++){
for(cur=this[i];cur&&cur!==context;cur=cur.parentNode){

if(cur.nodeType<11&&(pos?
pos.index(cur)>-1:


cur.nodeType===1&&
jQuery.find.matchesSelector(cur,selectors))){

cur=ret.push(cur);
break;
}
}
}

return this.pushStack(ret.length>1?jQuery.unique(ret):ret);
},



index:function(elem){


if(!elem){
return(this[0]&&this[0].parentNode)?this.first().prevAll().length:-1;
}


if(typeof elem==="string"){
return jQuery.inArray(this[0],jQuery(elem));
}


return jQuery.inArray(

elem.jquery?elem[0]:elem,this);
},

add:function(selector,context){
var set=typeof selector==="string"?
jQuery(selector,context):
jQuery.makeArray(selector&&selector.nodeType?[selector]:selector),
all=jQuery.merge(this.get(),set);

return this.pushStack(jQuery.unique(all));
},

addBack:function(selector){
return this.add(selector==null?
this.prevObject:this.prevObject.filter(selector)
);
}
});

function sibling(cur,dir){
do{
cur=cur[dir];
}while(cur&&cur.nodeType!==1);

return cur;
}

jQuery.each({
parent:function(elem){
var parent=elem.parentNode;
return parent&&parent.nodeType!==11?parent:null;
},
parents:function(elem){
return jQuery.dir(elem,"parentNode");
},
parentsUntil:function(elem,i,until){
return jQuery.dir(elem,"parentNode",until);
},
next:function(elem){
return sibling(elem,"nextSibling");
},
prev:function(elem){
return sibling(elem,"previousSibling");
},
nextAll:function(elem){
return jQuery.dir(elem,"nextSibling");
},
prevAll:function(elem){
return jQuery.dir(elem,"previousSibling");
},
nextUntil:function(elem,i,until){
return jQuery.dir(elem,"nextSibling",until);
},
prevUntil:function(elem,i,until){
return jQuery.dir(elem,"previousSibling",until);
},
siblings:function(elem){
return jQuery.sibling((elem.parentNode||{}).firstChild,elem);
},
children:function(elem){
return jQuery.sibling(elem.firstChild);
},
contents:function(elem){
return jQuery.nodeName(elem,"iframe")?
elem.contentDocument||elem.contentWindow.document:
jQuery.merge([],elem.childNodes);
}
},function(name,fn){
jQuery.fn[name]=function(until,selector){
var ret=jQuery.map(this,fn,until);

if(name.slice(-5)!=="Until"){
selector=until;
}

if(selector&&typeof selector==="string"){
ret=jQuery.filter(selector,ret);
}

if(this.length>1){

if(!guaranteedUnique[name]){
ret=jQuery.unique(ret);
}


if(rparentsprev.test(name)){
ret=ret.reverse();
}
}

return this.pushStack(ret);
};
});

jQuery.extend({
filter:function(expr,elems,not){
var elem=elems[0];

if(not){
expr=":not("+expr+")";
}

return elems.length===1&&elem.nodeType===1?
jQuery.find.matchesSelector(elem,expr)?[elem]:[]:
jQuery.find.matches(expr,jQuery.grep(elems,function(elem){
return elem.nodeType===1;
}));
},

dir:function(elem,dir,until){
var matched=[],
cur=elem[dir];

while(cur&&cur.nodeType!==9&&(until===undefined||cur.nodeType!==1||!jQuery(cur).is(until))){
if(cur.nodeType===1){
matched.push(cur);
}
cur=cur[dir];
}
return matched;
},

sibling:function(n,elem){
var r=[];

for(;n;n=n.nextSibling){
if(n.nodeType===1&&n!==elem){
r.push(n);
}
}

return r;
}
});


function winnow(elements,qualifier,not){
if(jQuery.isFunction(qualifier)){
return jQuery.grep(elements,function(elem,i){

return!!qualifier.call(elem,i,elem)!==not;
});

}

if(qualifier.nodeType){
return jQuery.grep(elements,function(elem){
return(elem===qualifier)!==not;
});

}

if(typeof qualifier==="string"){
if(isSimple.test(qualifier)){
return jQuery.filter(qualifier,elements,not);
}

qualifier=jQuery.filter(qualifier,elements);
}

return jQuery.grep(elements,function(elem){
return(jQuery.inArray(elem,qualifier)>=0)!==not;
});
}
function createSafeFragment(document){
var list=nodeNames.split("|"),
safeFrag=document.createDocumentFragment();

if(safeFrag.createElement){
while(list.length){
safeFrag.createElement(
list.pop()
);
}
}
return safeFrag;
}

var nodeNames="abbr|article|aside|audio|bdi|canvas|data|datalist|details|figcaption|figure|footer|"+
"header|hgroup|mark|meter|nav|output|progress|section|summary|time|video",
rinlinejQuery=/ jQuery\d+="(?:null|\d+)"/g,
rnoshimcache=new RegExp("<(?:"+nodeNames+")[\\s/>]","i"),
rleadingWhitespace=/^\s+/,
rxhtmlTag=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/gi,
rtagName=/<([\w:]+)/,
rtbody=/<tbody/i,
rhtml=/<|&#?\w+;/,
rnoInnerhtml=/<(?:script|style|link)/i,
manipulation_rcheckableType=/^(?:checkbox|radio)$/i,

rchecked=/checked\s*(?:[^=]|=\s*.checked.)/i,
rscriptType=/^$|\/(?:java|ecma)script/i,
rscriptTypeMasked=/^true\/(.*)/,
rcleanScript=/^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g,


wrapMap={
option:[1,"<select multiple='multiple'>","</select>"],
legend:[1,"<fieldset>","</fieldset>"],
area:[1,"<map>","</map>"],
param:[1,"<object>","</object>"],
thead:[1,"<table>","</table>"],
tr:[2,"<table><tbody>","</tbody></table>"],
col:[2,"<table><tbody></tbody><colgroup>","</colgroup></table>"],
td:[3,"<table><tbody><tr>","</tr></tbody></table>"],



_default:jQuery.support.htmlSerialize?[0,"",""]:[1,"X<div>","</div>"]
},
safeFragment=createSafeFragment(document),
fragmentDiv=safeFragment.appendChild(document.createElement("div"));

wrapMap.optgroup=wrapMap.option;
wrapMap.tbody=wrapMap.tfoot=wrapMap.colgroup=wrapMap.caption=wrapMap.thead;
wrapMap.th=wrapMap.td;

jQuery.fn.extend({
text:function(value){
return jQuery.access(this,function(value){
return value===undefined?
jQuery.text(this):
this.empty().append((this[0]&&this[0].ownerDocument||document).createTextNode(value));
},null,value,arguments.length);
},

append:function(){
return this.domManip(arguments,function(elem){
if(this.nodeType===1||this.nodeType===11||this.nodeType===9){
var target=manipulationTarget(this,elem);
target.appendChild(elem);
}
});
},

prepend:function(){
return this.domManip(arguments,function(elem){
if(this.nodeType===1||this.nodeType===11||this.nodeType===9){
var target=manipulationTarget(this,elem);
target.insertBefore(elem,target.firstChild);
}
});
},

before:function(){
return this.domManip(arguments,function(elem){
if(this.parentNode){
this.parentNode.insertBefore(elem,this);
}
});
},

after:function(){
return this.domManip(arguments,function(elem){
if(this.parentNode){
this.parentNode.insertBefore(elem,this.nextSibling);
}
});
},


remove:function(selector,keepData){
var elem,
elems=selector?jQuery.filter(selector,this):this,
i=0;

for(;(elem=elems[i])!=null;i++){

if(!keepData&&elem.nodeType===1){
jQuery.cleanData(getAll(elem));
}

if(elem.parentNode){
if(keepData&&jQuery.contains(elem.ownerDocument,elem)){
setGlobalEval(getAll(elem,"script"));
}
elem.parentNode.removeChild(elem);
}
}

return this;
},

empty:function(){
var elem,
i=0;

for(;(elem=this[i])!=null;i++){

if(elem.nodeType===1){
jQuery.cleanData(getAll(elem,false));
}


while(elem.firstChild){
elem.removeChild(elem.firstChild);
}



if(elem.options&&jQuery.nodeName(elem,"select")){
elem.options.length=0;
}
}

return this;
},

clone:function(dataAndEvents,deepDataAndEvents){
dataAndEvents=dataAndEvents==null?false:dataAndEvents;
deepDataAndEvents=deepDataAndEvents==null?dataAndEvents:deepDataAndEvents;

return this.map(function(){
return jQuery.clone(this,dataAndEvents,deepDataAndEvents);
});
},

html:function(value){
return jQuery.access(this,function(value){
var elem=this[0]||{},
i=0,
l=this.length;

if(value===undefined){
return elem.nodeType===1?
elem.innerHTML.replace(rinlinejQuery,""):
undefined;
}


if(typeof value==="string"&&!rnoInnerhtml.test(value)&&
(jQuery.support.htmlSerialize||!rnoshimcache.test(value))&&
(jQuery.support.leadingWhitespace||!rleadingWhitespace.test(value))&&
!wrapMap[(rtagName.exec(value)||["",""])[1].toLowerCase()]){

value=value.replace(rxhtmlTag,"<$1></$2>");

try{
for(;i<l;i++){

elem=this[i]||{};
if(elem.nodeType===1){
jQuery.cleanData(getAll(elem,false));
elem.innerHTML=value;
}
}

elem=0;


}catch(e){}
}

if(elem){
this.empty().append(value);
}
},null,value,arguments.length);
},

replaceWith:function(){
var

args=jQuery.map(this,function(elem){
return[elem.nextSibling,elem.parentNode];
}),
i=0;


this.domManip(arguments,function(elem){
var next=args[i++],
parent=args[i++];

if(parent){

if(next&&next.parentNode!==parent){
next=this.nextSibling;
}
jQuery(this).remove();
parent.insertBefore(elem,next);
}

},true);


return i?this:this.remove();
},

detach:function(selector){
return this.remove(selector,true);
},

domManip:function(args,callback,allowIntersection){


args=core_concat.apply([],args);

var first,node,hasScripts,
scripts,doc,fragment,
i=0,
l=this.length,
set=this,
iNoClone=l-1,
value=args[0],
isFunction=jQuery.isFunction(value);


if(isFunction||!(l<=1||typeof value!=="string"||jQuery.support.checkClone||!rchecked.test(value))){
return this.each(function(index){
var self=set.eq(index);
if(isFunction){
args[0]=value.call(this,index,self.html());
}
self.domManip(args,callback,allowIntersection);
});
}

if(l){
fragment=jQuery.buildFragment(args,this[0].ownerDocument,false,!allowIntersection&&this);
first=fragment.firstChild;

if(fragment.childNodes.length===1){
fragment=first;
}

if(first){
scripts=jQuery.map(getAll(fragment,"script"),disableScript);
hasScripts=scripts.length;



for(;i<l;i++){
node=fragment;

if(i!==iNoClone){
node=jQuery.clone(node,true,true);


if(hasScripts){
jQuery.merge(scripts,getAll(node,"script"));
}
}

callback.call(this[i],node,i);
}

if(hasScripts){
doc=scripts[scripts.length-1].ownerDocument;


jQuery.map(scripts,restoreScript);


for(i=0;i<hasScripts;i++){
node=scripts[i];
if(rscriptType.test(node.type||"")&&
!jQuery._data(node,"globalEval")&&jQuery.contains(doc,node)){

if(node.src){

jQuery._evalUrl(node.src);
}else{
jQuery.globalEval((node.text||node.textContent||node.innerHTML||"").replace(rcleanScript,""));
}
}
}
}


fragment=first=null;
}
}

return this;
}
});



function manipulationTarget(elem,content){
return jQuery.nodeName(elem,"table")&&
jQuery.nodeName(content.nodeType===1?content:content.firstChild,"tr")?

elem.getElementsByTagName("tbody")[0]||
elem.appendChild(elem.ownerDocument.createElement("tbody")):
elem;
}


function disableScript(elem){
elem.type=(jQuery.find.attr(elem,"type")!==null)+"/"+elem.type;
return elem;
}
function restoreScript(elem){
var match=rscriptTypeMasked.exec(elem.type);
if(match){
elem.type=match[1];
}else{
elem.removeAttribute("type");
}
return elem;
}


function setGlobalEval(elems,refElements){
var elem,
i=0;
for(;(elem=elems[i])!=null;i++){
jQuery._data(elem,"globalEval",!refElements||jQuery._data(refElements[i],"globalEval"));
}
}

function cloneCopyEvent(src,dest){

if(dest.nodeType!==1||!jQuery.hasData(src)){
return;
}

var type,i,l,
oldData=jQuery._data(src),
curData=jQuery._data(dest,oldData),
events=oldData.events;

if(events){
delete curData.handle;
curData.events={};

for(type in events){
for(i=0,l=events[type].length;i<l;i++){
jQuery.event.add(dest,type,events[type][i]);
}
}
}


if(curData.data){
curData.data=jQuery.extend({},curData.data);
}
}

function fixCloneNodeIssues(src,dest){
var nodeName,e,data;


if(dest.nodeType!==1){
return;
}

nodeName=dest.nodeName.toLowerCase();


if(!jQuery.support.noCloneEvent&&dest[jQuery.expando]){
data=jQuery._data(dest);

for(e in data.events){
jQuery.removeEvent(dest,e,data.handle);
}


dest.removeAttribute(jQuery.expando);
}


if(nodeName==="script"&&dest.text!==src.text){
disableScript(dest).text=src.text;
restoreScript(dest);



}else if(nodeName==="object"){
if(dest.parentNode){
dest.outerHTML=src.outerHTML;
}





if(jQuery.support.html5Clone&&(src.innerHTML&&!jQuery.trim(dest.innerHTML))){
dest.innerHTML=src.innerHTML;
}

}else if(nodeName==="input"&&manipulation_rcheckableType.test(src.type)){




dest.defaultChecked=dest.checked=src.checked;



if(dest.value!==src.value){
dest.value=src.value;
}



}else if(nodeName==="option"){
dest.defaultSelected=dest.selected=src.defaultSelected;



}else if(nodeName==="input"||nodeName==="textarea"){
dest.defaultValue=src.defaultValue;
}
}

jQuery.each({
appendTo:"append",
prependTo:"prepend",
insertBefore:"before",
insertAfter:"after",
replaceAll:"replaceWith"
},function(name,original){
jQuery.fn[name]=function(selector){
var elems,
i=0,
ret=[],
insert=jQuery(selector),
last=insert.length-1;

for(;i<=last;i++){
elems=i===last?this:this.clone(true);
jQuery(insert[i])[original](elems);


core_push.apply(ret,elems.get());
}

return this.pushStack(ret);
};
});

function getAll(context,tag){
var elems,elem,
i=0,
found=typeof context.getElementsByTagName!==core_strundefined?context.getElementsByTagName(tag||"*"):
typeof context.querySelectorAll!==core_strundefined?context.querySelectorAll(tag||"*"):
undefined;

if(!found){
for(found=[],elems=context.childNodes||context;(elem=elems[i])!=null;i++){
if(!tag||jQuery.nodeName(elem,tag)){
found.push(elem);
}else{
jQuery.merge(found,getAll(elem,tag));
}
}
}

return tag===undefined||tag&&jQuery.nodeName(context,tag)?
jQuery.merge([context],found):
found;
}


function fixDefaultChecked(elem){
if(manipulation_rcheckableType.test(elem.type)){
elem.defaultChecked=elem.checked;
}
}

jQuery.extend({
clone:function(elem,dataAndEvents,deepDataAndEvents){
var destElements,node,clone,i,srcElements,
inPage=jQuery.contains(elem.ownerDocument,elem);

if(jQuery.support.html5Clone||jQuery.isXMLDoc(elem)||!rnoshimcache.test("<"+elem.nodeName+">")){
clone=elem.cloneNode(true);


}else{
fragmentDiv.innerHTML=elem.outerHTML;
fragmentDiv.removeChild(clone=fragmentDiv.firstChild);
}

if((!jQuery.support.noCloneEvent||!jQuery.support.noCloneChecked)&&
(elem.nodeType===1||elem.nodeType===11)&&!jQuery.isXMLDoc(elem)){


destElements=getAll(clone);
srcElements=getAll(elem);


for(i=0;(node=srcElements[i])!=null;++i){

if(destElements[i]){
fixCloneNodeIssues(node,destElements[i]);
}
}
}


if(dataAndEvents){
if(deepDataAndEvents){
srcElements=srcElements||getAll(elem);
destElements=destElements||getAll(clone);

for(i=0;(node=srcElements[i])!=null;i++){
cloneCopyEvent(node,destElements[i]);
}
}else{
cloneCopyEvent(elem,clone);
}
}


destElements=getAll(clone,"script");
if(destElements.length>0){
setGlobalEval(destElements,!inPage&&getAll(elem,"script"));
}

destElements=srcElements=node=null;


return clone;
},

buildFragment:function(elems,context,scripts,selection){
var j,elem,contains,
tmp,tag,tbody,wrap,
l=elems.length,


safe=createSafeFragment(context),

nodes=[],
i=0;

for(;i<l;i++){
elem=elems[i];

if(elem||elem===0){


if(jQuery.type(elem)==="object"){
jQuery.merge(nodes,elem.nodeType?[elem]:elem);


}else if(!rhtml.test(elem)){
nodes.push(context.createTextNode(elem));


}else{
tmp=tmp||safe.appendChild(context.createElement("div"));


tag=(rtagName.exec(elem)||["",""])[1].toLowerCase();
wrap=wrapMap[tag]||wrapMap._default;

tmp.innerHTML=wrap[1]+elem.replace(rxhtmlTag,"<$1></$2>")+wrap[2];


j=wrap[0];
while(j--){
tmp=tmp.lastChild;
}


if(!jQuery.support.leadingWhitespace&&rleadingWhitespace.test(elem)){
nodes.push(context.createTextNode(rleadingWhitespace.exec(elem)[0]));
}


if(!jQuery.support.tbody){


elem=tag==="table"&&!rtbody.test(elem)?
tmp.firstChild:


wrap[1]==="<table>"&&!rtbody.test(elem)?
tmp:
0;

j=elem&&elem.childNodes.length;
while(j--){
if(jQuery.nodeName((tbody=elem.childNodes[j]),"tbody")&&!tbody.childNodes.length){
elem.removeChild(tbody);
}
}
}

jQuery.merge(nodes,tmp.childNodes);


tmp.textContent="";


while(tmp.firstChild){
tmp.removeChild(tmp.firstChild);
}


tmp=safe.lastChild;
}
}
}


if(tmp){
safe.removeChild(tmp);
}



if(!jQuery.support.appendChecked){
jQuery.grep(getAll(nodes,"input"),fixDefaultChecked);
}

i=0;
while((elem=nodes[i++])){



if(selection&&jQuery.inArray(elem,selection)!==-1){
continue;
}

contains=jQuery.contains(elem.ownerDocument,elem);


tmp=getAll(safe.appendChild(elem),"script");


if(contains){
setGlobalEval(tmp);
}


if(scripts){
j=0;
while((elem=tmp[j++])){
if(rscriptType.test(elem.type||"")){
scripts.push(elem);
}
}
}
}

tmp=null;

return safe;
},

cleanData:function(elems,acceptData){
var elem,type,id,data,
i=0,
internalKey=jQuery.expando,
cache=jQuery.cache,
deleteExpando=jQuery.support.deleteExpando,
special=jQuery.event.special;

for(;(elem=elems[i])!=null;i++){

if(acceptData||jQuery.acceptData(elem)){

id=elem[internalKey];
data=id&&cache[id];

if(data){
if(data.events){
for(type in data.events){
if(special[type]){
jQuery.event.remove(elem,type);


}else{
jQuery.removeEvent(elem,type,data.handle);
}
}
}


if(cache[id]){

delete cache[id];




if(deleteExpando){
delete elem[internalKey];

}else if(typeof elem.removeAttribute!==core_strundefined){
elem.removeAttribute(internalKey);

}else{
elem[internalKey]=null;
}

core_deletedIds.push(id);
}
}
}
}
},

_evalUrl:function(url){
return jQuery.ajax({
url:url,
type:"GET",
dataType:"script",
async:false,
global:false,
"throws":true
});
}
});
jQuery.fn.extend({
wrapAll:function(html){
if(jQuery.isFunction(html)){
return this.each(function(i){
jQuery(this).wrapAll(html.call(this,i));
});
}

if(this[0]){

var wrap=jQuery(html,this[0].ownerDocument).eq(0).clone(true);

if(this[0].parentNode){
wrap.insertBefore(this[0]);
}

wrap.map(function(){
var elem=this;

while(elem.firstChild&&elem.firstChild.nodeType===1){
elem=elem.firstChild;
}

return elem;
}).append(this);
}

return this;
},

wrapInner:function(html){
if(jQuery.isFunction(html)){
return this.each(function(i){
jQuery(this).wrapInner(html.call(this,i));
});
}

return this.each(function(){
var self=jQuery(this),
contents=self.contents();

if(contents.length){
contents.wrapAll(html);

}else{
self.append(html);
}
});
},

wrap:function(html){
var isFunction=jQuery.isFunction(html);

return this.each(function(i){
jQuery(this).wrapAll(isFunction?html.call(this,i):html);
});
},

unwrap:function(){
return this.parent().each(function(){
if(!jQuery.nodeName(this,"body")){
jQuery(this).replaceWith(this.childNodes);
}
}).end();
}
});
var iframe,getStyles,curCSS,
ralpha=/alpha\([^)]*\)/i,
ropacity=/opacity\s*=\s*([^)]*)/,
rposition=/^(top|right|bottom|left)$/,


rdisplayswap=/^(none|table(?!-c[ea]).+)/,
rmargin=/^margin/,
rnumsplit=new RegExp("^("+core_pnum+")(.*)$","i"),
rnumnonpx=new RegExp("^("+core_pnum+")(?!px)[a-z%]+$","i"),
rrelNum=new RegExp("^([+-])=("+core_pnum+")","i"),
elemdisplay={BODY:"block"},

cssShow={position:"absolute",visibility:"hidden",display:"block"},
cssNormalTransform={
letterSpacing:0,
fontWeight:400
},

cssExpand=["Top","Right","Bottom","Left"],
cssPrefixes=["Webkit","O","Moz","ms"];


function vendorPropName(style,name){


if(name in style){
return name;
}


var capName=name.charAt(0).toUpperCase()+name.slice(1),
origName=name,
i=cssPrefixes.length;

while(i--){
name=cssPrefixes[i]+capName;
if(name in style){
return name;
}
}

return origName;
}

function isHidden(elem,el){


elem=el||elem;
return jQuery.css(elem,"display")==="none"||!jQuery.contains(elem.ownerDocument,elem);
}

function showHide(elements,show){
var display,elem,hidden,
values=[],
index=0,
length=elements.length;

for(;index<length;index++){
elem=elements[index];
if(!elem.style){
continue;
}

values[index]=jQuery._data(elem,"olddisplay");
display=elem.style.display;
if(show){


if(!values[index]&&display==="none"){
elem.style.display="";
}




if(elem.style.display===""&&isHidden(elem)){
values[index]=jQuery._data(elem,"olddisplay",css_defaultDisplay(elem.nodeName));
}
}else{

if(!values[index]){
hidden=isHidden(elem);

if(display&&display!=="none"||!hidden){
jQuery._data(elem,"olddisplay",hidden?display:jQuery.css(elem,"display"));
}
}
}
}



for(index=0;index<length;index++){
elem=elements[index];
if(!elem.style){
continue;
}
if(!show||elem.style.display==="none"||elem.style.display===""){
elem.style.display=show?values[index]||"":"none";
}
}

return elements;
}

jQuery.fn.extend({
css:function(name,value){
return jQuery.access(this,function(elem,name,value){
var len,styles,
map={},
i=0;

if(jQuery.isArray(name)){
styles=getStyles(elem);
len=name.length;

for(;i<len;i++){
map[name[i]]=jQuery.css(elem,name[i],false,styles);
}

return map;
}

return value!==undefined?
jQuery.style(elem,name,value):
jQuery.css(elem,name);
},name,value,arguments.length>1);
},
show:function(){
return showHide(this,true);
},
hide:function(){
return showHide(this);
},
toggle:function(state){
if(typeof state==="boolean"){
return state?this.show():this.hide();
}

return this.each(function(){
if(isHidden(this)){
jQuery(this).show();
}else{
jQuery(this).hide();
}
});
}
});

jQuery.extend({


cssHooks:{
opacity:{
get:function(elem,computed){
if(computed){

var ret=curCSS(elem,"opacity");
return ret===""?"1":ret;
}
}
}
},


cssNumber:{
"columnCount":true,
"fillOpacity":true,
"fontWeight":true,
"lineHeight":true,
"opacity":true,
"order":true,
"orphans":true,
"widows":true,
"zIndex":true,
"zoom":true
},



cssProps:{

"float":jQuery.support.cssFloat?"cssFloat":"styleFloat"
},


style:function(elem,name,value,extra){

if(!elem||elem.nodeType===3||elem.nodeType===8||!elem.style){
return;
}


var ret,type,hooks,
origName=jQuery.camelCase(name),
style=elem.style;

name=jQuery.cssProps[origName]||(jQuery.cssProps[origName]=vendorPropName(style,origName));



hooks=jQuery.cssHooks[name]||jQuery.cssHooks[origName];


if(value!==undefined){
type=typeof value;


if(type==="string"&&(ret=rrelNum.exec(value))){
value=(ret[1]+1)*ret[2]+parseFloat(jQuery.css(elem,name));

type="number";
}


if(value==null||type==="number"&&isNaN(value)){
return;
}


if(type==="number"&&!jQuery.cssNumber[origName]){
value+="px";
}



if(!jQuery.support.clearCloneStyle&&value===""&&name.indexOf("background")===0){
style[name]="inherit";
}


if(!hooks||!("set"in hooks)||(value=hooks.set(elem,value,extra))!==undefined){



try{
style[name]=value;
}catch(e){}
}

}else{

if(hooks&&"get"in hooks&&(ret=hooks.get(elem,false,extra))!==undefined){
return ret;
}


return style[name];
}
},

css:function(elem,name,extra,styles){
var num,val,hooks,
origName=jQuery.camelCase(name);


name=jQuery.cssProps[origName]||(jQuery.cssProps[origName]=vendorPropName(elem.style,origName));



hooks=jQuery.cssHooks[name]||jQuery.cssHooks[origName];


if(hooks&&"get"in hooks){
val=hooks.get(elem,true,extra);
}


if(val===undefined){
val=curCSS(elem,name,styles);
}


if(val==="normal"&&name in cssNormalTransform){
val=cssNormalTransform[name];
}


if(extra===""||extra){
num=parseFloat(val);
return extra===true||jQuery.isNumeric(num)?num||0:val;
}
return val;
}
});



if(window.getComputedStyle){
getStyles=function(elem){
return window.getComputedStyle(elem,null);
};

curCSS=function(elem,name,_computed){
var width,minWidth,maxWidth,
computed=_computed||getStyles(elem),


ret=computed?computed.getPropertyValue(name)||computed[name]:undefined,
style=elem.style;

if(computed){

if(ret===""&&!jQuery.contains(elem.ownerDocument,elem)){
ret=jQuery.style(elem,name);
}





if(rnumnonpx.test(ret)&&rmargin.test(name)){


width=style.width;
minWidth=style.minWidth;
maxWidth=style.maxWidth;


style.minWidth=style.maxWidth=style.width=ret;
ret=computed.width;


style.width=width;
style.minWidth=minWidth;
style.maxWidth=maxWidth;
}
}

return ret;
};
}else if(document.documentElement.currentStyle){
getStyles=function(elem){
return elem.currentStyle;
};

curCSS=function(elem,name,_computed){
var left,rs,rsLeft,
computed=_computed||getStyles(elem),
ret=computed?computed[name]:undefined,
style=elem.style;



if(ret==null&&style&&style[name]){
ret=style[name];
}








if(rnumnonpx.test(ret)&&!rposition.test(name)){


left=style.left;
rs=elem.runtimeStyle;
rsLeft=rs&&rs.left;


if(rsLeft){
rs.left=elem.currentStyle.left;
}
style.left=name==="fontSize"?"1em":ret;
ret=style.pixelLeft+"px";


style.left=left;
if(rsLeft){
rs.left=rsLeft;
}
}

return ret===""?"auto":ret;
};
}

function setPositiveNumber(elem,value,subtract){
var matches=rnumsplit.exec(value);
return matches?

Math.max(0,matches[1]-(subtract||0))+(matches[2]||"px"):
value;
}

function augmentWidthOrHeight(elem,name,extra,isBorderBox,styles){
var i=extra===(isBorderBox?"border":"content")?

4:

name==="width"?1:0,

val=0;

for(;i<4;i+=2){

if(extra==="margin"){
val+=jQuery.css(elem,extra+cssExpand[i],true,styles);
}

if(isBorderBox){

if(extra==="content"){
val-=jQuery.css(elem,"padding"+cssExpand[i],true,styles);
}


if(extra!=="margin"){
val-=jQuery.css(elem,"border"+cssExpand[i]+"Width",true,styles);
}
}else{

val+=jQuery.css(elem,"padding"+cssExpand[i],true,styles);


if(extra!=="padding"){
val+=jQuery.css(elem,"border"+cssExpand[i]+"Width",true,styles);
}
}
}

return val;
}

function getWidthOrHeight(elem,name,extra){


var valueIsBorderBox=true,
val=name==="width"?elem.offsetWidth:elem.offsetHeight,
styles=getStyles(elem),
isBorderBox=jQuery.support.boxSizing&&jQuery.css(elem,"boxSizing",false,styles)==="border-box";




if(val<=0||val==null){

val=curCSS(elem,name,styles);
if(val<0||val==null){
val=elem.style[name];
}


if(rnumnonpx.test(val)){
return val;
}



valueIsBorderBox=isBorderBox&&(jQuery.support.boxSizingReliable||val===elem.style[name]);


val=parseFloat(val)||0;
}


return(val+
augmentWidthOrHeight(
elem,
name,
extra||(isBorderBox?"border":"content"),
valueIsBorderBox,
styles
)
)+"px";
}


function css_defaultDisplay(nodeName){
var doc=document,
display=elemdisplay[nodeName];

if(!display){
display=actualDisplay(nodeName,doc);


if(display==="none"||!display){

iframe=(iframe||
jQuery("<iframe frameborder='0' width='0' height='0'/>")
.css("cssText","display:block !important")
).appendTo(doc.documentElement);


doc=(iframe[0].contentWindow||iframe[0].contentDocument).document;
doc.write("<!doctype html><html><body>");
doc.close();

display=actualDisplay(nodeName,doc);
iframe.detach();
}


elemdisplay[nodeName]=display;
}

return display;
}


function actualDisplay(name,doc){
var elem=jQuery(doc.createElement(name)).appendTo(doc.body),
display=jQuery.css(elem[0],"display");
elem.remove();
return display;
}

jQuery.each(["height","width"],function(i,name){
jQuery.cssHooks[name]={
get:function(elem,computed,extra){
if(computed){


return elem.offsetWidth===0&&rdisplayswap.test(jQuery.css(elem,"display"))?
jQuery.swap(elem,cssShow,function(){
return getWidthOrHeight(elem,name,extra);
}):
getWidthOrHeight(elem,name,extra);
}
},

set:function(elem,value,extra){
var styles=extra&&getStyles(elem);
return setPositiveNumber(elem,value,extra?
augmentWidthOrHeight(
elem,
name,
extra,
jQuery.support.boxSizing&&jQuery.css(elem,"boxSizing",false,styles)==="border-box",
styles
):0
);
}
};
});

if(!jQuery.support.opacity){
jQuery.cssHooks.opacity={
get:function(elem,computed){

return ropacity.test((computed&&elem.currentStyle?elem.currentStyle.filter:elem.style.filter)||"")?
(0.01*parseFloat(RegExp.$1))+"":
computed?"1":"";
},

set:function(elem,value){
var style=elem.style,
currentStyle=elem.currentStyle,
opacity=jQuery.isNumeric(value)?"alpha(opacity="+value*100+")":"",
filter=currentStyle&&currentStyle.filter||style.filter||"";



style.zoom=1;



if((value>=1||value==="")&&
jQuery.trim(filter.replace(ralpha,""))===""&&
style.removeAttribute){




style.removeAttribute("filter");


if(value===""||currentStyle&&!currentStyle.filter){
return;
}
}


style.filter=ralpha.test(filter)?
filter.replace(ralpha,opacity):
filter+" "+opacity;
}
};
}



jQuery(function(){
if(!jQuery.support.reliableMarginRight){
jQuery.cssHooks.marginRight={
get:function(elem,computed){
if(computed){


return jQuery.swap(elem,{"display":"inline-block"},
curCSS,[elem,"marginRight"]);
}
}
};
}




if(!jQuery.support.pixelPosition&&jQuery.fn.position){
jQuery.each(["top","left"],function(i,prop){
jQuery.cssHooks[prop]={
get:function(elem,computed){
if(computed){
computed=curCSS(elem,prop);

return rnumnonpx.test(computed)?
jQuery(elem).position()[prop]+"px":
computed;
}
}
};
});
}

});

if(jQuery.expr&&jQuery.expr.filters){
jQuery.expr.filters.hidden=function(elem){


return elem.offsetWidth<=0&&elem.offsetHeight<=0||
(!jQuery.support.reliableHiddenOffsets&&((elem.style&&elem.style.display)||jQuery.css(elem,"display"))==="none");
};

jQuery.expr.filters.visible=function(elem){
return!jQuery.expr.filters.hidden(elem);
};
}


jQuery.each({
margin:"",
padding:"",
border:"Width"
},function(prefix,suffix){
jQuery.cssHooks[prefix+suffix]={
expand:function(value){
var i=0,
expanded={},


parts=typeof value==="string"?value.split(" "):[value];

for(;i<4;i++){
expanded[prefix+cssExpand[i]+suffix]=
parts[i]||parts[i-2]||parts[0];
}

return expanded;
}
};

if(!rmargin.test(prefix)){
jQuery.cssHooks[prefix+suffix].set=setPositiveNumber;
}
});
var r20=/%20/g,
rbracket=/\[\]$/,
rCRLF=/\r?\n/g,
rsubmitterTypes=/^(?:submit|button|image|reset|file)$/i,
rsubmittable=/^(?:input|select|textarea|keygen)/i;

jQuery.fn.extend({
serialize:function(){
return jQuery.param(this.serializeArray());
},
serializeArray:function(){
return this.map(function(){

var elements=jQuery.prop(this,"elements");
return elements?jQuery.makeArray(elements):this;
})
.filter(function(){
var type=this.type;

return this.name&&!jQuery(this).is(":disabled")&&
rsubmittable.test(this.nodeName)&&!rsubmitterTypes.test(type)&&
(this.checked||!manipulation_rcheckableType.test(type));
})
.map(function(i,elem){
var val=jQuery(this).val();

return val==null?
null:
jQuery.isArray(val)?
jQuery.map(val,function(val){
return{name:elem.name,value:val.replace(rCRLF,"\r\n")};
}):
{name:elem.name,value:val.replace(rCRLF,"\r\n")};
}).get();
}
});



jQuery.param=function(a,traditional){
var prefix,
s=[],
add=function(key,value){

value=jQuery.isFunction(value)?value():(value==null?"":value);
s[s.length]=encodeURIComponent(key)+"="+encodeURIComponent(value);
};


if(traditional===undefined){
traditional=jQuery.ajaxSettings&&jQuery.ajaxSettings.traditional;
}


if(jQuery.isArray(a)||(a.jquery&&!jQuery.isPlainObject(a))){

jQuery.each(a,function(){
add(this.name,this.value);
});

}else{


for(prefix in a){
buildParams(prefix,a[prefix],traditional,add);
}
}


return s.join("&").replace(r20,"+");
};

function buildParams(prefix,obj,traditional,add){
var name;

if(jQuery.isArray(obj)){

jQuery.each(obj,function(i,v){
if(traditional||rbracket.test(prefix)){

add(prefix,v);

}else{

buildParams(prefix+"["+(typeof v==="object"?i:"")+"]",v,traditional,add);
}
});

}else if(!traditional&&jQuery.type(obj)==="object"){

for(name in obj){
buildParams(prefix+"["+name+"]",obj[name],traditional,add);
}

}else{

add(prefix,obj);
}
}
jQuery.each(("blur focus focusin focusout load resize scroll unload click dblclick "+
"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave "+
"change select submit keydown keypress keyup error contextmenu").split(" "),function(i,name){


jQuery.fn[name]=function(data,fn){
return arguments.length>0?
this.on(name,null,data,fn):
this.trigger(name);
};
});

jQuery.fn.extend({
hover:function(fnOver,fnOut){
return this.mouseenter(fnOver).mouseleave(fnOut||fnOver);
},

bind:function(types,data,fn){
return this.on(types,null,data,fn);
},
unbind:function(types,fn){
return this.off(types,null,fn);
},

delegate:function(selector,types,data,fn){
return this.on(types,selector,data,fn);
},
undelegate:function(selector,types,fn){

return arguments.length===1?this.off(selector,"**"):this.off(types,selector||"**",fn);
}
});
var

ajaxLocParts,
ajaxLocation,
ajax_nonce=jQuery.now(),

ajax_rquery=/\?/,
rhash=/#.*$/,
rts=/([?&])_=[^&]*/,
rheaders=/^(.*?):[ \t]*([^\r\n]*)\r?$/mg,

rlocalProtocol=/^(?:about|app|app-storage|.+-extension|file|res|widget):$/,
rnoContent=/^(?:GET|HEAD)$/,
rprotocol=/^\/\//,
rurl=/^([\w.+-]+:)(?:\/\/([^\/?#:]*)(?::(\d+)|)|)/,


_load=jQuery.fn.load,










prefilters={},






transports={},


allTypes="*/".concat("*");



try{
ajaxLocation=location.href;
}catch(e){


ajaxLocation=document.createElement("a");
ajaxLocation.href="";
ajaxLocation=ajaxLocation.href;
}


ajaxLocParts=rurl.exec(ajaxLocation.toLowerCase())||[];


function addToPrefiltersOrTransports(structure){


return function(dataTypeExpression,func){

if(typeof dataTypeExpression!=="string"){
func=dataTypeExpression;
dataTypeExpression="*";
}

var dataType,
i=0,
dataTypes=dataTypeExpression.toLowerCase().match(core_rnotwhite)||[];

if(jQuery.isFunction(func)){

while((dataType=dataTypes[i++])){

if(dataType[0]==="+"){
dataType=dataType.slice(1)||"*";
(structure[dataType]=structure[dataType]||[]).unshift(func);


}else{
(structure[dataType]=structure[dataType]||[]).push(func);
}
}
}
};
}


function inspectPrefiltersOrTransports(structure,options,originalOptions,jqXHR){

var inspected={},
seekingTransport=(structure===transports);

function inspect(dataType){
var selected;
inspected[dataType]=true;
jQuery.each(structure[dataType]||[],function(_,prefilterOrFactory){
var dataTypeOrTransport=prefilterOrFactory(options,originalOptions,jqXHR);
if(typeof dataTypeOrTransport==="string"&&!seekingTransport&&!inspected[dataTypeOrTransport]){
options.dataTypes.unshift(dataTypeOrTransport);
inspect(dataTypeOrTransport);
return false;
}else if(seekingTransport){
return!(selected=dataTypeOrTransport);
}
});
return selected;
}

return inspect(options.dataTypes[0])||!inspected["*"]&&inspect("*");
}




function ajaxExtend(target,src){
var deep,key,
flatOptions=jQuery.ajaxSettings.flatOptions||{};

for(key in src){
if(src[key]!==undefined){
(flatOptions[key]?target:(deep||(deep={})))[key]=src[key];
}
}
if(deep){
jQuery.extend(true,target,deep);
}

return target;
}

jQuery.fn.load=function(url,params,callback){
if(typeof url!=="string"&&_load){
return _load.apply(this,arguments);
}

var selector,response,type,
self=this,
off=url.indexOf(" ");

if(off>=0){
selector=url.slice(off,url.length);
url=url.slice(0,off);
}


if(jQuery.isFunction(params)){


callback=params;
params=undefined;


}else if(params&&typeof params==="object"){
type="POST";
}


if(self.length>0){
jQuery.ajax({
url:url,


type:type,
dataType:"html",
data:params
}).done(function(responseText){


response=arguments;

self.html(selector?



jQuery("<div>").append(jQuery.parseHTML(responseText)).find(selector):


responseText);

}).complete(callback&&function(jqXHR,status){
self.each(callback,response||[jqXHR.responseText,status,jqXHR]);
});
}

return this;
};


jQuery.each(["ajaxStart","ajaxStop","ajaxComplete","ajaxError","ajaxSuccess","ajaxSend"],function(i,type){
jQuery.fn[type]=function(fn){
return this.on(type,fn);
};
});

jQuery.extend({


active:0,


lastModified:{},
etag:{},

ajaxSettings:{
url:ajaxLocation,
type:"GET",
isLocal:rlocalProtocol.test(ajaxLocParts[1]),
global:true,
processData:true,
async:true,
contentType:"application/x-www-form-urlencoded; charset=UTF-8",












accepts:{
"*":allTypes,
text:"text/plain",
html:"text/html",
xml:"application/xml, text/xml",
json:"application/json, text/javascript"
},

contents:{
xml:/xml/,
html:/html/,
json:/json/
},

responseFields:{
xml:"responseXML",
text:"responseText",
json:"responseJSON"
},



converters:{


"* text":String,


"text html":true,


"text json":jQuery.parseJSON,


"text xml":jQuery.parseXML
},





flatOptions:{
url:true,
context:true
}
},




ajaxSetup:function(target,settings){
return settings?


ajaxExtend(ajaxExtend(target,jQuery.ajaxSettings),settings):


ajaxExtend(jQuery.ajaxSettings,target);
},

ajaxPrefilter:addToPrefiltersOrTransports(prefilters),
ajaxTransport:addToPrefiltersOrTransports(transports),


ajax:function(url,options){


if(typeof url==="object"){
options=url;
url=undefined;
}


options=options||{};

var
parts,

i,

cacheURL,

responseHeadersString,

timeoutTimer,


fireGlobals,

transport,

responseHeaders,

s=jQuery.ajaxSetup({},options),

callbackContext=s.context||s,

globalEventContext=s.context&&(callbackContext.nodeType||callbackContext.jquery)?
jQuery(callbackContext):
jQuery.event,

deferred=jQuery.Deferred(),
completeDeferred=jQuery.Callbacks("once memory"),

statusCode=s.statusCode||{},

requestHeaders={},
requestHeadersNames={},

state=0,

strAbort="canceled",

jqXHR={
readyState:0,


getResponseHeader:function(key){
var match;
if(state===2){
if(!responseHeaders){
responseHeaders={};
while((match=rheaders.exec(responseHeadersString))){
responseHeaders[match[1].toLowerCase()]=match[2];
}
}
match=responseHeaders[key.toLowerCase()];
}
return match==null?null:match;
},


getAllResponseHeaders:function(){
return state===2?responseHeadersString:null;
},


setRequestHeader:function(name,value){
var lname=name.toLowerCase();
if(!state){
name=requestHeadersNames[lname]=requestHeadersNames[lname]||name;
requestHeaders[name]=value;
}
return this;
},


overrideMimeType:function(type){
if(!state){
s.mimeType=type;
}
return this;
},


statusCode:function(map){
var code;
if(map){
if(state<2){
for(code in map){

statusCode[code]=[statusCode[code],map[code]];
}
}else{

jqXHR.always(map[jqXHR.status]);
}
}
return this;
},


abort:function(statusText){
var finalText=statusText||strAbort;
if(transport){
transport.abort(finalText);
}
done(0,finalText);
return this;
}
};


deferred.promise(jqXHR).complete=completeDeferred.add;
jqXHR.success=jqXHR.done;
jqXHR.error=jqXHR.fail;





s.url=((url||s.url||ajaxLocation)+"").replace(rhash,"").replace(rprotocol,ajaxLocParts[1]+"//");


s.type=options.method||options.type||s.method||s.type;


s.dataTypes=jQuery.trim(s.dataType||"*").toLowerCase().match(core_rnotwhite)||[""];


if(s.crossDomain==null){
parts=rurl.exec(s.url.toLowerCase());
s.crossDomain=!!(parts&&
(parts[1]!==ajaxLocParts[1]||parts[2]!==ajaxLocParts[2]||
(parts[3]||(parts[1]==="http:"?"80":"443"))!==
(ajaxLocParts[3]||(ajaxLocParts[1]==="http:"?"80":"443")))
);
}


if(s.data&&s.processData&&typeof s.data!=="string"){
s.data=jQuery.param(s.data,s.traditional);
}


inspectPrefiltersOrTransports(prefilters,s,options,jqXHR);


if(state===2){
return jqXHR;
}


fireGlobals=s.global;


if(fireGlobals&&jQuery.active++===0){
jQuery.event.trigger("ajaxStart");
}


s.type=s.type.toUpperCase();


s.hasContent=!rnoContent.test(s.type);



cacheURL=s.url;


if(!s.hasContent){


if(s.data){
cacheURL=(s.url+=(ajax_rquery.test(cacheURL)?"&":"?")+s.data);

delete s.data;
}


if(s.cache===false){
s.url=rts.test(cacheURL)?


cacheURL.replace(rts,"$1_="+ajax_nonce++):


cacheURL+(ajax_rquery.test(cacheURL)?"&":"?")+"_="+ajax_nonce++;
}
}


if(s.ifModified){
if(jQuery.lastModified[cacheURL]){
jqXHR.setRequestHeader("If-Modified-Since",jQuery.lastModified[cacheURL]);
}
if(jQuery.etag[cacheURL]){
jqXHR.setRequestHeader("If-None-Match",jQuery.etag[cacheURL]);
}
}


if(s.data&&s.hasContent&&s.contentType!==false||options.contentType){
jqXHR.setRequestHeader("Content-Type",s.contentType);
}


jqXHR.setRequestHeader(
"Accept",
s.dataTypes[0]&&s.accepts[s.dataTypes[0]]?
s.accepts[s.dataTypes[0]]+(s.dataTypes[0]!=="*"?", "+allTypes+"; q=0.01":""):
s.accepts["*"]
);


for(i in s.headers){
jqXHR.setRequestHeader(i,s.headers[i]);
}


if(s.beforeSend&&(s.beforeSend.call(callbackContext,jqXHR,s)===false||state===2)){

return jqXHR.abort();
}


strAbort="abort";


for(i in{success:1,error:1,complete:1}){
jqXHR[i](s[i]);
}


transport=inspectPrefiltersOrTransports(transports,s,options,jqXHR);


if(!transport){
done(-1,"No Transport");
}else{
jqXHR.readyState=1;


if(fireGlobals){
globalEventContext.trigger("ajaxSend",[jqXHR,s]);
}

if(s.async&&s.timeout>0){
timeoutTimer=setTimeout(function(){
jqXHR.abort("timeout");
},s.timeout);
}

try{
state=1;
transport.send(requestHeaders,done);
}catch(e){

if(state<2){
done(-1,e);

}else{
throw e;
}
}
}


function done(status,nativeStatusText,responses,headers){
var isSuccess,success,error,response,modified,
statusText=nativeStatusText;


if(state===2){
return;
}


state=2;


if(timeoutTimer){
clearTimeout(timeoutTimer);
}



transport=undefined;


responseHeadersString=headers||"";


jqXHR.readyState=status>0?4:0;


isSuccess=status>=200&&status<300||status===304;


if(responses){
response=ajaxHandleResponses(s,jqXHR,responses);
}


response=ajaxConvert(s,response,jqXHR,isSuccess);


if(isSuccess){


if(s.ifModified){
modified=jqXHR.getResponseHeader("Last-Modified");
if(modified){
jQuery.lastModified[cacheURL]=modified;
}
modified=jqXHR.getResponseHeader("etag");
if(modified){
jQuery.etag[cacheURL]=modified;
}
}


if(status===204||s.type==="HEAD"){
statusText="nocontent";


}else if(status===304){
statusText="notmodified";


}else{
statusText=response.state;
success=response.data;
error=response.error;
isSuccess=!error;
}
}else{


error=statusText;
if(status||!statusText){
statusText="error";
if(status<0){
status=0;
}
}
}


jqXHR.status=status;
jqXHR.statusText=(nativeStatusText||statusText)+"";


if(isSuccess){
deferred.resolveWith(callbackContext,[success,statusText,jqXHR]);
}else{
deferred.rejectWith(callbackContext,[jqXHR,statusText,error]);
}


jqXHR.statusCode(statusCode);
statusCode=undefined;

if(fireGlobals){
globalEventContext.trigger(isSuccess?"ajaxSuccess":"ajaxError",
[jqXHR,s,isSuccess?success:error]);
}


completeDeferred.fireWith(callbackContext,[jqXHR,statusText]);

if(fireGlobals){
globalEventContext.trigger("ajaxComplete",[jqXHR,s]);

if(!(--jQuery.active)){
jQuery.event.trigger("ajaxStop");
}
}
}

return jqXHR;
},

getJSON:function(url,data,callback){
return jQuery.get(url,data,callback,"json");
},

getScript:function(url,callback){
return jQuery.get(url,undefined,callback,"script");
}
});

jQuery.each(["get","post"],function(i,method){
jQuery[method]=function(url,data,callback,type){

if(jQuery.isFunction(data)){
type=type||callback;
callback=data;
data=undefined;
}

return jQuery.ajax({
url:url,
type:method,
dataType:type,
data:data,
success:callback
});
};
});





function ajaxHandleResponses(s,jqXHR,responses){
var firstDataType,ct,finalDataType,type,
contents=s.contents,
dataTypes=s.dataTypes;


while(dataTypes[0]==="*"){
dataTypes.shift();
if(ct===undefined){
ct=s.mimeType||jqXHR.getResponseHeader("Content-Type");
}
}


if(ct){
for(type in contents){
if(contents[type]&&contents[type].test(ct)){
dataTypes.unshift(type);
break;
}
}
}


if(dataTypes[0]in responses){
finalDataType=dataTypes[0];
}else{

for(type in responses){
if(!dataTypes[0]||s.converters[type+" "+dataTypes[0]]){
finalDataType=type;
break;
}
if(!firstDataType){
firstDataType=type;
}
}

finalDataType=finalDataType||firstDataType;
}




if(finalDataType){
if(finalDataType!==dataTypes[0]){
dataTypes.unshift(finalDataType);
}
return responses[finalDataType];
}
}




function ajaxConvert(s,response,jqXHR,isSuccess){
var conv2,current,conv,tmp,prev,
converters={},

dataTypes=s.dataTypes.slice();


if(dataTypes[1]){
for(conv in s.converters){
converters[conv.toLowerCase()]=s.converters[conv];
}
}

current=dataTypes.shift();


while(current){

if(s.responseFields[current]){
jqXHR[s.responseFields[current]]=response;
}


if(!prev&&isSuccess&&s.dataFilter){
response=s.dataFilter(response,s.dataType);
}

prev=current;
current=dataTypes.shift();

if(current){


if(current==="*"){

current=prev;


}else if(prev!=="*"&&prev!==current){


conv=converters[prev+" "+current]||converters["* "+current];


if(!conv){
for(conv2 in converters){


tmp=conv2.split(" ");
if(tmp[1]===current){


conv=converters[prev+" "+tmp[0]]||
converters["* "+tmp[0]];
if(conv){

if(conv===true){
conv=converters[conv2];


}else if(converters[conv2]!==true){
current=tmp[0];
dataTypes.unshift(tmp[1]);
}
break;
}
}
}
}


if(conv!==true){


if(conv&&s["throws"]){
response=conv(response);
}else{
try{
response=conv(response);
}catch(e){
return{state:"parsererror",error:conv?e:"No conversion from "+prev+" to "+current};
}
}
}
}
}
}

return{state:"success",data:response};
}

jQuery.ajaxSetup({
accepts:{
script:"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"
},
contents:{
script:/(?:java|ecma)script/
},
converters:{
"text script":function(text){
jQuery.globalEval(text);
return text;
}
}
});


jQuery.ajaxPrefilter("script",function(s){
if(s.cache===undefined){
s.cache=false;
}
if(s.crossDomain){
s.type="GET";
s.global=false;
}
});


jQuery.ajaxTransport("script",function(s){


if(s.crossDomain){

var script,
head=document.head||jQuery("head")[0]||document.documentElement;

return{

send:function(_,callback){

script=document.createElement("script");

script.async=true;

if(s.scriptCharset){
script.charset=s.scriptCharset;
}

script.src=s.url;


script.onload=script.onreadystatechange=function(_,isAbort){

if(isAbort||!script.readyState||/loaded|complete/.test(script.readyState)){


script.onload=script.onreadystatechange=null;


if(script.parentNode){
script.parentNode.removeChild(script);
}


script=null;


if(!isAbort){
callback(200,"success");
}
}
};



head.insertBefore(script,head.firstChild);
},

abort:function(){
if(script){
script.onload(undefined,true);
}
}
};
}
});
var oldCallbacks=[],
rjsonp=/(=)\?(?=&|$)|\?\?/;


jQuery.ajaxSetup({
jsonp:"callback",
jsonpCallback:function(){
var callback=oldCallbacks.pop()||(jQuery.expando+"_"+(ajax_nonce++));
this[callback]=true;
return callback;
}
});


jQuery.ajaxPrefilter("json jsonp",function(s,originalSettings,jqXHR){

var callbackName,overwritten,responseContainer,
jsonProp=s.jsonp!==false&&(rjsonp.test(s.url)?
"url":
typeof s.data==="string"&&!(s.contentType||"").indexOf("application/x-www-form-urlencoded")&&rjsonp.test(s.data)&&"data"
);


if(jsonProp||s.dataTypes[0]==="jsonp"){


callbackName=s.jsonpCallback=jQuery.isFunction(s.jsonpCallback)?
s.jsonpCallback():
s.jsonpCallback;


if(jsonProp){
s[jsonProp]=s[jsonProp].replace(rjsonp,"$1"+callbackName);
}else if(s.jsonp!==false){
s.url+=(ajax_rquery.test(s.url)?"&":"?")+s.jsonp+"="+callbackName;
}


s.converters["script json"]=function(){
if(!responseContainer){
jQuery.error(callbackName+" was not called");
}
return responseContainer[0];
};


s.dataTypes[0]="json";


overwritten=window[callbackName];
window[callbackName]=function(){
responseContainer=arguments;
};


jqXHR.always(function(){

window[callbackName]=overwritten;


if(s[callbackName]){

s.jsonpCallback=originalSettings.jsonpCallback;


oldCallbacks.push(callbackName);
}


if(responseContainer&&jQuery.isFunction(overwritten)){
overwritten(responseContainer[0]);
}

responseContainer=overwritten=undefined;
});


return"script";
}
});
var xhrCallbacks,xhrSupported,
xhrId=0,

xhrOnUnloadAbort=window.ActiveXObject&&function(){

var key;
for(key in xhrCallbacks){
xhrCallbacks[key](undefined,true);
}
};


function createStandardXHR(){
try{
return new window.XMLHttpRequest();
}catch(e){}
}

function createActiveXHR(){
try{
return new window.ActiveXObject("Microsoft.XMLHTTP");
}catch(e){}
}



jQuery.ajaxSettings.xhr=window.ActiveXObject?






function(){
return!this.isLocal&&createStandardXHR()||createActiveXHR();
}:

createStandardXHR;


xhrSupported=jQuery.ajaxSettings.xhr();
jQuery.support.cors=!!xhrSupported&&("withCredentials"in xhrSupported);
xhrSupported=jQuery.support.ajax=!!xhrSupported;


if(xhrSupported){

jQuery.ajaxTransport(function(s){

if(!s.crossDomain||jQuery.support.cors){

var callback;

return{
send:function(headers,complete){


var handle,i,
xhr=s.xhr();



if(s.username){
xhr.open(s.type,s.url,s.async,s.username,s.password);
}else{
xhr.open(s.type,s.url,s.async);
}


if(s.xhrFields){
for(i in s.xhrFields){
xhr[i]=s.xhrFields[i];
}
}


if(s.mimeType&&xhr.overrideMimeType){
xhr.overrideMimeType(s.mimeType);
}






if(!s.crossDomain&&!headers["X-Requested-With"]){
headers["X-Requested-With"]="XMLHttpRequest";
}


try{
for(i in headers){
xhr.setRequestHeader(i,headers[i]);
}
}catch(err){}




xhr.send((s.hasContent&&s.data)||null);


callback=function(_,isAbort){
var status,responseHeaders,statusText,responses;




try{


if(callback&&(isAbort||xhr.readyState===4)){


callback=undefined;


if(handle){
xhr.onreadystatechange=jQuery.noop;
if(xhrOnUnloadAbort){
delete xhrCallbacks[handle];
}
}


if(isAbort){

if(xhr.readyState!==4){
xhr.abort();
}
}else{
responses={};
status=xhr.status;
responseHeaders=xhr.getAllResponseHeaders();



if(typeof xhr.responseText==="string"){
responses.text=xhr.responseText;
}



try{
statusText=xhr.statusText;
}catch(e){

statusText="";
}






if(!status&&s.isLocal&&!s.crossDomain){
status=responses.text?200:404;

}else if(status===1223){
status=204;
}
}
}
}catch(firefoxAccessException){
if(!isAbort){
complete(-1,firefoxAccessException);
}
}


if(responses){
complete(status,statusText,responses,responseHeaders);
}
};

if(!s.async){

callback();
}else if(xhr.readyState===4){


setTimeout(callback);
}else{
handle=++xhrId;
if(xhrOnUnloadAbort){


if(!xhrCallbacks){
xhrCallbacks={};
jQuery(window).unload(xhrOnUnloadAbort);
}

xhrCallbacks[handle]=callback;
}
xhr.onreadystatechange=callback;
}
},

abort:function(){
if(callback){
callback(undefined,true);
}
}
};
}
});
}
var fxNow,timerId,
rfxtypes=/^(?:toggle|show|hide)$/,
rfxnum=new RegExp("^(?:([+-])=|)("+core_pnum+")([a-z%]*)$","i"),
rrun=/queueHooks$/,
animationPrefilters=[defaultPrefilter],
tweeners={
"*":[function(prop,value){
var tween=this.createTween(prop,value),
target=tween.cur(),
parts=rfxnum.exec(value),
unit=parts&&parts[3]||(jQuery.cssNumber[prop]?"":"px"),


start=(jQuery.cssNumber[prop]||unit!=="px"&&+target)&&
rfxnum.exec(jQuery.css(tween.elem,prop)),
scale=1,
maxIterations=20;

if(start&&start[3]!==unit){

unit=unit||start[3];


parts=parts||[];


start=+target||1;

do{


scale=scale||".5";


start=start/scale;
jQuery.style(tween.elem,prop,start+unit);



}while(scale!==(scale=tween.cur()/target)&&scale!==1&&--maxIterations);
}


if(parts){
start=tween.start=+start||+target||0;
tween.unit=unit;

tween.end=parts[1]?
start+(parts[1]+1)*parts[2]:
+parts[2];
}

return tween;
}]
};


function createFxNow(){
setTimeout(function(){
fxNow=undefined;
});
return(fxNow=jQuery.now());
}

function createTween(value,prop,animation){
var tween,
collection=(tweeners[prop]||[]).concat(tweeners["*"]),
index=0,
length=collection.length;
for(;index<length;index++){
if((tween=collection[index].call(animation,prop,value))){


return tween;
}
}
}

function Animation(elem,properties,options){
var result,
stopped,
index=0,
length=animationPrefilters.length,
deferred=jQuery.Deferred().always(function(){

delete tick.elem;
}),
tick=function(){
if(stopped){
return false;
}
var currentTime=fxNow||createFxNow(),
remaining=Math.max(0,animation.startTime+animation.duration-currentTime),

temp=remaining/animation.duration||0,
percent=1-temp,
index=0,
length=animation.tweens.length;

for(;index<length;index++){
animation.tweens[index].run(percent);
}

deferred.notifyWith(elem,[animation,percent,remaining]);

if(percent<1&&length){
return remaining;
}else{
deferred.resolveWith(elem,[animation]);
return false;
}
},
animation=deferred.promise({
elem:elem,
props:jQuery.extend({},properties),
opts:jQuery.extend(true,{specialEasing:{}},options),
originalProperties:properties,
originalOptions:options,
startTime:fxNow||createFxNow(),
duration:options.duration,
tweens:[],
createTween:function(prop,end){
var tween=jQuery.Tween(elem,animation.opts,prop,end,
animation.opts.specialEasing[prop]||animation.opts.easing);
animation.tweens.push(tween);
return tween;
},
stop:function(gotoEnd){
var index=0,


length=gotoEnd?animation.tweens.length:0;
if(stopped){
return this;
}
stopped=true;
for(;index<length;index++){
animation.tweens[index].run(1);
}



if(gotoEnd){
deferred.resolveWith(elem,[animation,gotoEnd]);
}else{
deferred.rejectWith(elem,[animation,gotoEnd]);
}
return this;
}
}),
props=animation.props;

propFilter(props,animation.opts.specialEasing);

for(;index<length;index++){
result=animationPrefilters[index].call(animation,elem,props,animation.opts);
if(result){
return result;
}
}

jQuery.map(props,createTween,animation);

if(jQuery.isFunction(animation.opts.start)){
animation.opts.start.call(elem,animation);
}

jQuery.fx.timer(
jQuery.extend(tick,{
elem:elem,
anim:animation,
queue:animation.opts.queue
})
);


return animation.progress(animation.opts.progress)
.done(animation.opts.done,animation.opts.complete)
.fail(animation.opts.fail)
.always(animation.opts.always);
}

function propFilter(props,specialEasing){
var index,name,easing,value,hooks;


for(index in props){
name=jQuery.camelCase(index);
easing=specialEasing[name];
value=props[index];
if(jQuery.isArray(value)){
easing=value[1];
value=props[index]=value[0];
}

if(index!==name){
props[name]=value;
delete props[index];
}

hooks=jQuery.cssHooks[name];
if(hooks&&"expand"in hooks){
value=hooks.expand(value);
delete props[name];



for(index in value){
if(!(index in props)){
props[index]=value[index];
specialEasing[index]=easing;
}
}
}else{
specialEasing[name]=easing;
}
}
}

jQuery.Animation=jQuery.extend(Animation,{

tweener:function(props,callback){
if(jQuery.isFunction(props)){
callback=props;
props=["*"];
}else{
props=props.split(" ");
}

var prop,
index=0,
length=props.length;

for(;index<length;index++){
prop=props[index];
tweeners[prop]=tweeners[prop]||[];
tweeners[prop].unshift(callback);
}
},

prefilter:function(callback,prepend){
if(prepend){
animationPrefilters.unshift(callback);
}else{
animationPrefilters.push(callback);
}
}
});

function defaultPrefilter(elem,props,opts){

var prop,value,toggle,tween,hooks,oldfire,
anim=this,
orig={},
style=elem.style,
hidden=elem.nodeType&&isHidden(elem),
dataShow=jQuery._data(elem,"fxshow");


if(!opts.queue){
hooks=jQuery._queueHooks(elem,"fx");
if(hooks.unqueued==null){
hooks.unqueued=0;
oldfire=hooks.empty.fire;
hooks.empty.fire=function(){
if(!hooks.unqueued){
oldfire();
}
};
}
hooks.unqueued++;

anim.always(function(){


anim.always(function(){
hooks.unqueued--;
if(!jQuery.queue(elem,"fx").length){
hooks.empty.fire();
}
});
});
}


if(elem.nodeType===1&&("height"in props||"width"in props)){




opts.overflow=[style.overflow,style.overflowX,style.overflowY];



if(jQuery.css(elem,"display")==="inline"&&
jQuery.css(elem,"float")==="none"){



if(!jQuery.support.inlineBlockNeedsLayout||css_defaultDisplay(elem.nodeName)==="inline"){
style.display="inline-block";

}else{
style.zoom=1;
}
}
}

if(opts.overflow){
style.overflow="hidden";
if(!jQuery.support.shrinkWrapBlocks){
anim.always(function(){
style.overflow=opts.overflow[0];
style.overflowX=opts.overflow[1];
style.overflowY=opts.overflow[2];
});
}
}



for(prop in props){
value=props[prop];
if(rfxtypes.exec(value)){
delete props[prop];
toggle=toggle||value==="toggle";
if(value===(hidden?"hide":"show")){
continue;
}
orig[prop]=dataShow&&dataShow[prop]||jQuery.style(elem,prop);
}
}

if(!jQuery.isEmptyObject(orig)){
if(dataShow){
if("hidden"in dataShow){
hidden=dataShow.hidden;
}
}else{
dataShow=jQuery._data(elem,"fxshow",{});
}


if(toggle){
dataShow.hidden=!hidden;
}
if(hidden){
jQuery(elem).show();
}else{
anim.done(function(){
jQuery(elem).hide();
});
}
anim.done(function(){
var prop;
jQuery._removeData(elem,"fxshow");
for(prop in orig){
jQuery.style(elem,prop,orig[prop]);
}
});
for(prop in orig){
tween=createTween(hidden?dataShow[prop]:0,prop,anim);

if(!(prop in dataShow)){
dataShow[prop]=tween.start;
if(hidden){
tween.end=tween.start;
tween.start=prop==="width"||prop==="height"?1:0;
}
}
}
}
}

function Tween(elem,options,prop,end,easing){
return new Tween.prototype.init(elem,options,prop,end,easing);
}
jQuery.Tween=Tween;

Tween.prototype={
constructor:Tween,
init:function(elem,options,prop,end,easing,unit){
this.elem=elem;
this.prop=prop;
this.easing=easing||"swing";
this.options=options;
this.start=this.now=this.cur();
this.end=end;
this.unit=unit||(jQuery.cssNumber[prop]?"":"px");
},
cur:function(){
var hooks=Tween.propHooks[this.prop];

return hooks&&hooks.get?
hooks.get(this):
Tween.propHooks._default.get(this);
},
run:function(percent){
var eased,
hooks=Tween.propHooks[this.prop];

if(this.options.duration){
this.pos=eased=jQuery.easing[this.easing](
percent,this.options.duration*percent,0,1,this.options.duration
);
}else{
this.pos=eased=percent;
}
this.now=(this.end-this.start)*eased+this.start;

if(this.options.step){
this.options.step.call(this.elem,this.now,this);
}

if(hooks&&hooks.set){
hooks.set(this);
}else{
Tween.propHooks._default.set(this);
}
return this;
}
};

Tween.prototype.init.prototype=Tween.prototype;

Tween.propHooks={
_default:{
get:function(tween){
var result;

if(tween.elem[tween.prop]!=null&&
(!tween.elem.style||tween.elem.style[tween.prop]==null)){
return tween.elem[tween.prop];
}





result=jQuery.css(tween.elem,tween.prop,"");

return!result||result==="auto"?0:result;
},
set:function(tween){


if(jQuery.fx.step[tween.prop]){
jQuery.fx.step[tween.prop](tween);
}else if(tween.elem.style&&(tween.elem.style[jQuery.cssProps[tween.prop]]!=null||jQuery.cssHooks[tween.prop])){
jQuery.style(tween.elem,tween.prop,tween.now+tween.unit);
}else{
tween.elem[tween.prop]=tween.now;
}
}
}
};




Tween.propHooks.scrollTop=Tween.propHooks.scrollLeft={
set:function(tween){
if(tween.elem.nodeType&&tween.elem.parentNode){
tween.elem[tween.prop]=tween.now;
}
}
};

jQuery.each(["toggle","show","hide"],function(i,name){
var cssFn=jQuery.fn[name];
jQuery.fn[name]=function(speed,easing,callback){
return speed==null||typeof speed==="boolean"?
cssFn.apply(this,arguments):
this.animate(genFx(name,true),speed,easing,callback);
};
});

jQuery.fn.extend({
fadeTo:function(speed,to,easing,callback){


return this.filter(isHidden).css("opacity",0).show()


.end().animate({opacity:to},speed,easing,callback);
},
animate:function(prop,speed,easing,callback){
var empty=jQuery.isEmptyObject(prop),
optall=jQuery.speed(speed,easing,callback),
doAnimation=function(){

var anim=Animation(this,jQuery.extend({},prop),optall);


if(empty||jQuery._data(this,"finish")){
anim.stop(true);
}
};
doAnimation.finish=doAnimation;

return empty||optall.queue===false?
this.each(doAnimation):
this.queue(optall.queue,doAnimation);
},
stop:function(type,clearQueue,gotoEnd){
var stopQueue=function(hooks){
var stop=hooks.stop;
delete hooks.stop;
stop(gotoEnd);
};

if(typeof type!=="string"){
gotoEnd=clearQueue;
clearQueue=type;
type=undefined;
}
if(clearQueue&&type!==false){
this.queue(type||"fx",[]);
}

return this.each(function(){
var dequeue=true,
index=type!=null&&type+"queueHooks",
timers=jQuery.timers,
data=jQuery._data(this);

if(index){
if(data[index]&&data[index].stop){
stopQueue(data[index]);
}
}else{
for(index in data){
if(data[index]&&data[index].stop&&rrun.test(index)){
stopQueue(data[index]);
}
}
}

for(index=timers.length;index--;){
if(timers[index].elem===this&&(type==null||timers[index].queue===type)){
timers[index].anim.stop(gotoEnd);
dequeue=false;
timers.splice(index,1);
}
}




if(dequeue||!gotoEnd){
jQuery.dequeue(this,type);
}
});
},
finish:function(type){
if(type!==false){
type=type||"fx";
}
return this.each(function(){
var index,
data=jQuery._data(this),
queue=data[type+"queue"],
hooks=data[type+"queueHooks"],
timers=jQuery.timers,
length=queue?queue.length:0;


data.finish=true;


jQuery.queue(this,type,[]);

if(hooks&&hooks.stop){
hooks.stop.call(this,true);
}


for(index=timers.length;index--;){
if(timers[index].elem===this&&timers[index].queue===type){
timers[index].anim.stop(true);
timers.splice(index,1);
}
}


for(index=0;index<length;index++){
if(queue[index]&&queue[index].finish){
queue[index].finish.call(this);
}
}


delete data.finish;
});
}
});


function genFx(type,includeWidth){
var which,
attrs={height:type},
i=0;



includeWidth=includeWidth?1:0;
for(;i<4;i+=2-includeWidth){
which=cssExpand[i];
attrs["margin"+which]=attrs["padding"+which]=type;
}

if(includeWidth){
attrs.opacity=attrs.width=type;
}

return attrs;
}


jQuery.each({
slideDown:genFx("show"),
slideUp:genFx("hide"),
slideToggle:genFx("toggle"),
fadeIn:{opacity:"show"},
fadeOut:{opacity:"hide"},
fadeToggle:{opacity:"toggle"}
},function(name,props){
jQuery.fn[name]=function(speed,easing,callback){
return this.animate(props,speed,easing,callback);
};
});

jQuery.speed=function(speed,easing,fn){
var opt=speed&&typeof speed==="object"?jQuery.extend({},speed):{
complete:fn||!fn&&easing||
jQuery.isFunction(speed)&&speed,
duration:speed,
easing:fn&&easing||easing&&!jQuery.isFunction(easing)&&easing
};

opt.duration=jQuery.fx.off?0:typeof opt.duration==="number"?opt.duration:
opt.duration in jQuery.fx.speeds?jQuery.fx.speeds[opt.duration]:jQuery.fx.speeds._default;


if(opt.queue==null||opt.queue===true){
opt.queue="fx";
}


opt.old=opt.complete;

opt.complete=function(){
if(jQuery.isFunction(opt.old)){
opt.old.call(this);
}

if(opt.queue){
jQuery.dequeue(this,opt.queue);
}
};

return opt;
};

jQuery.easing={
linear:function(p){
return p;
},
swing:function(p){
return 0.5-Math.cos(p*Math.PI)/2;
}
};

jQuery.timers=[];
jQuery.fx=Tween.prototype.init;
jQuery.fx.tick=function(){
var timer,
timers=jQuery.timers,
i=0;

fxNow=jQuery.now();

for(;i<timers.length;i++){
timer=timers[i];

if(!timer()&&timers[i]===timer){
timers.splice(i--,1);
}
}

if(!timers.length){
jQuery.fx.stop();
}
fxNow=undefined;
};

jQuery.fx.timer=function(timer){
if(timer()&&jQuery.timers.push(timer)){
jQuery.fx.start();
}
};

jQuery.fx.interval=13;

jQuery.fx.start=function(){
if(!timerId){
timerId=setInterval(jQuery.fx.tick,jQuery.fx.interval);
}
};

jQuery.fx.stop=function(){
clearInterval(timerId);
timerId=null;
};

jQuery.fx.speeds={
slow:600,
fast:200,

_default:400
};


jQuery.fx.step={};

if(jQuery.expr&&jQuery.expr.filters){
jQuery.expr.filters.animated=function(elem){
return jQuery.grep(jQuery.timers,function(fn){
return elem===fn.elem;
}).length;
};
}
jQuery.fn.offset=function(options){
if(arguments.length){
return options===undefined?
this:
this.each(function(i){
jQuery.offset.setOffset(this,options,i);
});
}

var docElem,win,
box={top:0,left:0},
elem=this[0],
doc=elem&&elem.ownerDocument;

if(!doc){
return;
}

docElem=doc.documentElement;


if(!jQuery.contains(docElem,elem)){
return box;
}



if(typeof elem.getBoundingClientRect!==core_strundefined){
box=elem.getBoundingClientRect();
}
win=getWindow(doc);
return{
top:box.top+(win.pageYOffset||docElem.scrollTop)-(docElem.clientTop||0),
left:box.left+(win.pageXOffset||docElem.scrollLeft)-(docElem.clientLeft||0)
};
};

jQuery.offset={

setOffset:function(elem,options,i){
var position=jQuery.css(elem,"position");


if(position==="static"){
elem.style.position="relative";
}

var curElem=jQuery(elem),
curOffset=curElem.offset(),
curCSSTop=jQuery.css(elem,"top"),
curCSSLeft=jQuery.css(elem,"left"),
calculatePosition=(position==="absolute"||position==="fixed")&&jQuery.inArray("auto",[curCSSTop,curCSSLeft])>-1,
props={},curPosition={},curTop,curLeft;


if(calculatePosition){
curPosition=curElem.position();
curTop=curPosition.top;
curLeft=curPosition.left;
}else{
curTop=parseFloat(curCSSTop)||0;
curLeft=parseFloat(curCSSLeft)||0;
}

if(jQuery.isFunction(options)){
options=options.call(elem,i,curOffset);
}

if(options.top!=null){
props.top=(options.top-curOffset.top)+curTop;
}
if(options.left!=null){
props.left=(options.left-curOffset.left)+curLeft;
}

if("using"in options){
options.using.call(elem,props);
}else{
curElem.css(props);
}
}
};


jQuery.fn.extend({

position:function(){
if(!this[0]){
return;
}

var offsetParent,offset,
parentOffset={top:0,left:0},
elem=this[0];


if(jQuery.css(elem,"position")==="fixed"){

offset=elem.getBoundingClientRect();
}else{

offsetParent=this.offsetParent();


offset=this.offset();
if(!jQuery.nodeName(offsetParent[0],"html")){
parentOffset=offsetParent.offset();
}


parentOffset.top+=jQuery.css(offsetParent[0],"borderTopWidth",true);
parentOffset.left+=jQuery.css(offsetParent[0],"borderLeftWidth",true);
}




return{
top:offset.top-parentOffset.top-jQuery.css(elem,"marginTop",true),
left:offset.left-parentOffset.left-jQuery.css(elem,"marginLeft",true)
};
},

offsetParent:function(){
return this.map(function(){
var offsetParent=this.offsetParent||docElem;
while(offsetParent&&(!jQuery.nodeName(offsetParent,"html")&&jQuery.css(offsetParent,"position")==="static")){
offsetParent=offsetParent.offsetParent;
}
return offsetParent||docElem;
});
}
});



jQuery.each({scrollLeft:"pageXOffset",scrollTop:"pageYOffset"},function(method,prop){
var top=/Y/.test(prop);

jQuery.fn[method]=function(val){
return jQuery.access(this,function(elem,method,val){
var win=getWindow(elem);

if(val===undefined){
return win?(prop in win)?win[prop]:
win.document.documentElement[method]:
elem[method];
}

if(win){
win.scrollTo(
!top?val:jQuery(win).scrollLeft(),
top?val:jQuery(win).scrollTop()
);

}else{
elem[method]=val;
}
},method,val,arguments.length,null);
};
});

function getWindow(elem){
return jQuery.isWindow(elem)?
elem:
elem.nodeType===9?
elem.defaultView||elem.parentWindow:
false;
}

jQuery.each({Height:"height",Width:"width"},function(name,type){
jQuery.each({padding:"inner"+name,content:type,"":"outer"+name},function(defaultExtra,funcName){

jQuery.fn[funcName]=function(margin,value){
var chainable=arguments.length&&(defaultExtra||typeof margin!=="boolean"),
extra=defaultExtra||(margin===true||value===true?"margin":"border");

return jQuery.access(this,function(elem,type,value){
var doc;

if(jQuery.isWindow(elem)){



return elem.document.documentElement["client"+name];
}


if(elem.nodeType===9){
doc=elem.documentElement;



return Math.max(
elem.body["scroll"+name],doc["scroll"+name],
elem.body["offset"+name],doc["offset"+name],
doc["client"+name]
);
}

return value===undefined?

jQuery.css(elem,type,extra):


jQuery.style(elem,type,value,extra);
},type,chainable?margin:undefined,chainable,null);
};
});
});




jQuery.fn.size=function(){
return this.length;
};

jQuery.fn.andSelf=jQuery.fn.addBack;


if(typeof module==="object"&&module&&typeof module.exports==="object"){




module.exports=jQuery;
}else{

window.jQuery=window.$=jQuery;








if(typeof define==="function"&&define.amd){
define("jquery",[],function(){return jQuery;});
}
}

})(window);




(function(window,$){
var cacheBuster=1;

var browserSupportsPostMessage=!!window.postMessage;


function getDomainFromUrl(url){
return url.replace(/([^:]+:\/\/[^\/]+).*/,"$1");
}





function isOriginMatch(originPatternOrFunction,sourceOrigin){
if(typeof(originPatternOrFunction)=="string"&&
sourceOrigin!==originPatternOrFunction&&
originPatternOrFunction!=="*"){
return false;
}else if($.isFunction(originPatternOrFunction)&&!originPatternOrFunction(sourceOrigin)){
return false;
}

return true;
}









function transverseLevel(window,target,level){
var i;

if(typeof level=="undefined"){
level=0;
}


if(window.frames){
try{
for(i=0;i<window.frames.length;i++){
try{
if(window.frames[i]===target){
return"f,"+i;
}
}catch(e){
if(e.number!==-2147024891)
{
throw e;
}
}
}
}catch(ex){
if(ex.number!==-2146823279)
{
throw ex;
}
}
}


if(window.parent&&window.parent===target){
return"p";
}


if(window.opener&&window.opener===target){
return"o";
}



if(level>=4){
return false;
}

var ref;


if(window.frames&&window.frames.length>0){
for(i=0;i<window.frames.length;i++){
ref=transverseLevel(window.frames[i],target,level+1);
if(ref){
return"f,"+i+"."+ref;
}
}
}


if(window.parent&&window.parent!==window){
ref=transverseLevel(window.parent,target,level+1);
if(ref){
return"p."+ref;
}
}


if(window.opener&&window.opener!==window){
ref=transverseLevel(window.opener,target,level+1);
if(ref){
return"o"+ref;
}
}

return false;
}








function serializeWindowReference(currentWindow,targetWindow){


if(typeof(targetWindow)=="string"){
return":"+targetWindow;
}


if(currentWindow===targetWindow){
throw new Error("Trying to postMessage to self. Pointlessly useless.");
}


if(currentWindow.parent&&currentWindow.parent!==currentWindow&&currentWindow.parent===targetWindow){
return"p";
}


if(currentWindow.opener&&currentWindow.opener!==currentWindow&&currentWindow.opener===targetWindow){
return"o";
}


var ref=transverseLevel(currentWindow,targetWindow);
if(ref){
return ref;
}else{
throw new Error("Couldn't serialize window reference");
}
}








$.postMessage=function(message,targetHost,targetWindow,targetWindowName){
if(!targetHost){
throw new Error("targetHost argument was not supplied to jQuery.postMessage");
}

if(!targetWindow){
throw new Error("No targetWindow specified");
}

targetHost=getDomainFromUrl(targetHost);






if(browserSupportsPostMessage){
try{
targetWindow.postMessage(message,targetHost);
return;
}catch(ex){







if(ex.number!=-2147467262){
throw ex;
}
}
}




try{
var postMessageDirect=targetWindow.__receiveMessageHook;
if(postMessageDirect){
postMessageDirect(message,targetHost);
return;
}
}catch(ex){}





var serializedWindowRef=serializeWindowReference(window,targetWindowName||targetWindow),
thisDomain=getDomainFromUrl(document.location.href),
iframe=document.createElement("iframe");

if(!targetHost||targetHost=="*"){
throw new Error("$.postMessage(): Must specify targetHost on browsers that don't support postMessage natively (cannot be '*').");
}

$("body").append(
$(iframe)
.hide()
.attr("src",targetHost+getPolyfillPath()+"#"+

(+new Date())+cacheBuster+"&"+
serializedWindowRef+"&"+thisDomain+"&"+encodeURIComponent(message)
)
.load(function(){

$(iframe).remove();
})
);

cacheBuster++;
};







$.receiveMessage=function(callback,allowedOriginOrFunction){
if(!callback){
throw new Error("No callback function specified");
}

if(!allowedOriginOrFunction){
allowedOriginOrFunction="*";
}

$(window).on("message",function(event,data,origin){
if(!data){
data=event.originalEvent?event.originalEvent.data:event.data;
}

if(!origin){
origin=event.originalEvent?event.originalEvent.origin:event.origin;
}

return isOriginMatch(allowedOriginOrFunction,event.originalEvent?event.originalEvent.origin:origin)?
callback({
"data":data,
"origin":origin
}):
false;
});
};




window.__receiveMessageHook=function(message,origin){
var $evt=new $.Event("message");
$evt.data=message;
$evt.origin=origin;

$(window).trigger($evt,[$evt.data,$evt.origin]);
};


$.fn.postMessage=function(message,targetHost,targetWindowName){
this.each(function(i,el){
if(!(el instanceof Window)){
throw new Error("postMessage can only be sent to a window");
}

$.postMessage(message,targetHost,el,targetWindowName);
});

return this;
};

$.event.special.message={
add:function(handlerData){
var origHandler=handlerData.handler;

handlerData.handler=function(e,message,origin){
e.data=e.originalEvent?e.originalEvent.data:message;
e.origin=e.originalEvent?e.originalEvent.origin:origin;

return origHandler.call(this,e,e.data,e.origin);
};
}
};

var getPolyfillPath=function(){
if(!window._jqueryPostMessagePolyfillPath){
throw new Error("Must configure jquery.postMessage() with window._jqueryPostMessagePolyfillPath for IE7 support. Should be '/root-relative-path-on-my-server/postmessage.htm'");
}

return window._jqueryPostMessagePolyfillPath;
};

})(window,jQuery);

window._jqueryPostMessagePolyfillPath="/vp/JS-Lib/ThirdParty/skinnyjs/postmessage.htm";


(function($){



$.encodeDelimitedString=function(data,itemDelimiter,pairDelimiter,keyEncoder,valueEncoder){
if(!data){
return"";
}

keyEncoder=keyEncoder||function(s){
return s;
};
valueEncoder=valueEncoder||keyEncoder;

var sb=[];

for(var key in data){
if(data.hasOwnProperty(key)){
sb.push(keyEncoder(key)+pairDelimiter+valueEncoder(data[key]));
}
}

return sb.join(itemDelimiter);
};



$.parseDelimitedString=function(delimitedString,itemDelimiter,pairDelimiter,keyDecoder,valueDecoder){
keyDecoder=keyDecoder||function(s){
return s;
};
valueDecoder=valueDecoder||keyDecoder;

var ret={};

if(delimitedString){
var pairs=delimitedString.split(itemDelimiter);
var len=pairs.length;
for(var i=0;i<len;i++){
var pair=pairs[i];

if(pair.length>0){
var delimIndex=pair.indexOf(pairDelimiter);
var key,value;

if(delimIndex>0&&delimIndex<=pair.length-1){
key=pair.substring(0,delimIndex);
value=pair.substring(delimIndex+1);
}else{
key=pair;
}

ret[keyDecoder(key)]=valueDecoder(value);
}
}
}

return ret;
};

})(jQuery);




(function($){
var PLUS_RE=/\+/gi;

var urlDecode=function(s){

if(s==null){
return"";
}



return decodeURIComponent(s.replace(PLUS_RE," "));
};


$.deparam=function(queryString){
if(typeof queryString!="string"){
throw new Error("$.deparam() expects a string for 'queryString' argument.");
}


if(queryString&&queryString.charAt(0)=="?"){
queryString=queryString.substring(1,queryString.length);
}

return $.parseDelimitedString(queryString,"&","=",urlDecode);
};


$.parseQueryString=$.deparam;


$.currentQueryString=function(){
return $.deparam(window.location.search);
};


$.appendQueryString=function(url,parsedQueryString){
var qs=$.param(parsedQueryString);
if(qs.length>0){
qs="?"+qs;
}

return url+qs;
};

})(jQuery);




(function($){


$.Url=function(url){
var me=this;

var _normalize=function(input){
if(input==null||input===""){
return"";
}

return input.toString();
};


var _protocol="";

this.protocol=function(value){
if(typeof value!="undefined"){
_protocol=_normalize(value);

if(_protocol){
if(_protocol.charAt(_protocol.length-1)!=":"){
_protocol+=":";
}
}
}else{
return _protocol;
}
};


var _hostname="";

this.hostname=function(value){
if(typeof value!="undefined"){
_hostname=_normalize(value);
}else{
return _hostname;
}
};

var _port="";


this.port=function(value){
if(typeof value!="undefined"){
_port=_normalize(value);
}else{
return _port;
}
};



this.host=function(value){
if(typeof value!="undefined"){
value=_normalize(value);


if(value){
var colonPos=value.indexOf(":");
if(colonPos!=-1){
_hostname=value.substr(0,colonPos);
_port=value.substr(colonPos+1,value.length);
}else{
_hostname=_normalize(value);
_port="";
}
}else{
_hostname="";
_port="";
}
}else{
var out=_hostname;
if(_port){
out+=":"+_port;
}
return out;
}
};

var _pathname="";


this.pathname=function(value){
if(typeof value!="undefined"){
_pathname=_normalize(value);
}else{
return _pathname;
}
};


this.queryString={};


this.search=function(value){
if(typeof value!="undefined"){
value=_normalize(value);
me.queryString=$.deparam(value);
}else{
var qs=$.param(me.queryString);
return qs?"?"+qs:qs;
}
};


var _hash="";

this.hash=function(value){
if(typeof value!="undefined"){
value=_normalize(value);


if(value.length>0){
if(value.charAt(0)!="#"){
value="#"+value;
}
}
_hash=value;
}else{
return _hash;
}
};

var load=function(url){
var nextPartPos;
var temp=url;


if(temp.search(/https\:\/\/+/i)===0)
{
_protocol="https:";
temp=url.substr(8);
}else if(temp.search(/http\:\/\/+/i)===0)
{
_protocol="http:";
temp=url.substr(7);
}

if(temp.length===0){
return;
}


if(_protocol!==""){

nextPartPos=temp.search(/[\/\?\#]/i);
if(nextPartPos==-1){
me.host(temp);
return;
}

me.host(temp.substring(0,nextPartPos));
temp=temp.substr(nextPartPos);
}

if(temp.length===0){
return;
}

nextPartPos=temp.search(/[\?\#]/i);


if(nextPartPos!==0){
if(nextPartPos==-1){
_pathname=temp;
return;
}

_pathname=temp.substr(0,nextPartPos);
temp=temp.substr(nextPartPos);
}

if(temp.length===0){
return;
}



if(temp.indexOf("?")===0){
nextPartPos=temp.indexOf("#");

if(nextPartPos==-1){
me.queryString=$.deparam(temp.substr(1));
temp="";
}else{
me.queryString=$.deparam(temp.substring(1,nextPartPos));
temp=temp.substr(nextPartPos);
}
}

if(temp.length===0){
return;
}


if(temp.indexOf("#")===0){
_hash=temp;
}
};


this.toString=function(){
var url="";
var host=me.host();
if(host){
url=(_protocol||"http:")+"//"+me.host();
}
return url+me.pathname()+me.search()+me.hash();
};


this.get=function(key,defaultValue){
if(!me.queryString.hasOwnProperty(key)){
return defaultValue;
}

return _normalize(me.queryString[key]);
};


this.set=function(key,value){
if(key==null||key===""){
throw new Error("Invalid key: "+key);
}

me.queryString[key]=value;
};


this.remove=function(key){
delete me.queryString[key];
};


this.getItemOrDefault=this.get;
this.getOrDefault=this.get;
this.getItem=this.get;
this.setItem=this.set;
this.removeItem=this.remove;

load(url?url.toString():"");
};

})(jQuery);




(function($){
var _mapCamelToDash={};



$.camelToDashCase=function(prop){

var value=_mapCamelToDash[prop];
if(!value){
value=prop.replace(/([A-Z])/g,"-$1").toLowerCase();
_mapCamelToDash[prop]=value;
}

return value;
};

var _mapDashToCamel={};


$.dashToCamelCase=function(sProperty){
var value=_mapDashToCamel[sProperty];


if(!value){
if(sProperty.indexOf("-")!=-1){

var aOut=[];
for(var i=0,len=sProperty.length;i<len;++i){
var sChar=sProperty.charAt(i);
if(sChar=="-"){
i++;
sChar=sProperty.charAt(i).toUpperCase();
aOut.push(sChar);
}else{
aOut.push(sChar);
}
}

value=aOut.join("");
}else{
value=sProperty;
}

_mapDashToCamel[sProperty]=value;
}

return value;
};

var cssKeyEncoder=function(s){
return $.trim($.camelToDashCase(s));
};

var cssKeyDecoder=function(s){
return $.trim($.dashToCamelCase(s));
};

$.encodeCssString=function(data){
return $.encodeDelimitedString(data,";",":",cssKeyEncoder,$.trim);
};

$.parseCssString=function(cssString){
return $.parseDelimitedString(cssString,";",":",cssKeyDecoder,$.trim);
};

})(jQuery);


(function($){






$.fn.fillClosest=function(src,closestSelector,callback){
this.each(function(){
var img=this;

var callbackWrapper=function(size){
var css=fillClosest.call(img,size,closestSelector);
$(img).css(css);

if(callback){
callback.call(img,size);
}
};

$.naturalSize(src,callbackWrapper);
});

this.attr("src",src);

return this;
};

var fillClosest=function(rect,closestSelector){
var aspectRatio=rect.width/rect.height;
var $container=$(this).closest(closestSelector);
var containerHeight=$container.height();
var containerWidth=$container.width();
var containerAspectRatio=containerWidth/containerHeight;
var scale;
var margin=0;


if(containerAspectRatio<aspectRatio){
scale=Math.round(aspectRatio/containerAspectRatio*100);

if(scale>100){
margin=Math.round((scale-100)/2);
}

return{
"margin-top":0,
"margin-left":-margin+"%",
"width":scale+"%"
};
}

else{
scale=Math.round(containerAspectRatio/aspectRatio*100);

if(scale>100){
margin=Math.round((scale-100)/2);
}

return{
"margin-left":0,
"margin-top":-margin+"%",
"width":"100%"
};
}
};






$.fn.fitToBoundingBox=function(src,boundingBox,callback,error){
this.each(function(){
var img=this;

var callbackWrapper=function(size){
var boundedSize=$.fitToBoundingBox(size,boundingBox);
$(img).css(boundedSize);

if(callback){
callback.call(img,boundedSize);
}
};

$.naturalSize(src,callbackWrapper,error);
});

this.attr("src",src);

return this;
};

$.fitToBoundingBox=function(rect,boundingBox){
var aspectRatio=rect.width/rect.height;
return $.rectWithAspectRatio(boundingBox,aspectRatio);
};






$.naturalSize=function(src,success,error){
var deferred=new $.Deferred();

var img=new Image();

var successWrapper=function(){





window.setTimeout(
function(){
var size={
width:img.width,
height:img.height
};

deferred.resolveWith(this,[size]);

if(success){
success(size);
}
},
0);
};

img.onload=successWrapper;
img.onerror=function(e){
deferred.reject(e);

if(error){
error(e);
}
};

img.src=src;

return deferred.promise();
};



$.rectWithAspectRatio=function(containerRect,aspectRatio){
var rect={
top:0,
left:0,
width:containerRect.width,
height:containerRect.height
};

var containerAspectRatio=containerRect.width/containerRect.height;

if(containerAspectRatio<aspectRatio){
rect.height=Math.round(rect.width/aspectRatio);
}else{
rect.width=Math.round(rect.height*aspectRatio);
}

rect.left=(containerRect.width-rect.width)/2;
rect.top=(containerRect.height-rect.height)/2;
rect.right=rect.left+rect.width;
rect.bottom=rect.top+rect.height;

return rect;
};

})(jQuery);


(function($){


$.support.getBoundingClientRect="getBoundingClientRect"in document.documentElement;


function getWindow(elem){
return $.isWindow(elem)?
elem:
elem.nodeType===9?
elem.defaultView||elem.parentWindow:
false;
}


$.fn.clientRect=function(){
var rect={
top:0,
left:0,
width:0,
height:0,
bottom:0,
right:0
};

if(this.length===0){
return rect;
}

var elem=this[0];
var doc=elem.ownerDocument;
var docElem=doc.documentElement;
var box;


if(!$.contains(docElem,elem)){
return rect;
}


if($.support.getBoundingClientRect){

try{
box=elem.getBoundingClientRect();
}catch(e){



}

if(!box){
return rect;
}



if(box.right===box.left&&
box.top===box.bottom){
return rect;
}


var win=getWindow(doc);

rect.top=box.top+(win.pageYOffset||docElem.scrollTop)-(docElem.clientTop||0);
rect.left=box.left+(win.pageXOffset||docElem.scrollLeft)-(docElem.clientLeft||0);

rect.width=box.right-box.left;
rect.height=box.bottom-box.top;
}else{

if(this.css("display")=="none"){
return rect;
}

rect=this.offset();
rect.width=this.outerWidth();
rect.height=this.outerHeight();
}

rect.bottom=rect.top+rect.height;
rect.right=rect.left+rect.width;

return rect;
};

})(jQuery);




(function($){

var addMargin=function(node,styleProp,rectProp,rect){
var margin=parseInt($(node).css(styleProp),10);
if(margin){
rect[rectProp]+=margin;
}
};


var gatherSize=function(size,node,includeChildrenOnly,includeWidth,includeHeight){
var rect;


if(node.nodeType!=1){
return;
}

if(!includeChildrenOnly){
try{
rect=$(node).clientRect();
}catch(ex){

return;
}


if(rect.height===0&&rect.width===0){
return;
}

if(node.tagName=="BODY"){
addMargin(node,"marginRight","right",rect);
addMargin(node,"marginBottom","bottom",rect);
}

if(includeHeight){
size.height=Math.max(rect.bottom,size.height);
}

if(includeWidth){
size.width=Math.max(rect.right,size.width);
}


if($(node).css("overflowX")!="visible"&&
($(node).css("height")!="auto"||$(node).css("maxHeight")!="none")){
includeHeight=false;
}


if($(node).css("overflowY")!="visible"&&
($(node).css("width")!="auto"||$(node).css("maxWidth")!="none")){
includeWidth=false;
}


if(!includeHeight&&!includeWidth){
return;
}
}


if(node.tagName!=="OBJECT"){
var len=node.childNodes.length;
for(var i=0;i<len;i++){
gatherSize(size,node.childNodes[i],false,includeWidth,includeHeight);
}
}
};


$.fn.contentSize=function(excludeScrollbars){
var el=this[0];

if(!el){
throw new Error("Element required");
}



var doc=el.document||(el.documentElement?el:(el.tagName=="BODY"?el.ownerDocument:null));




var currentOverflow;
if(excludeScrollbars&&doc){
currentOverflow=doc.documentElement.style.overflow;
doc.documentElement.style.overflow="hidden";
}

var size={
width:0,
height:0
};
var startingNode=doc?doc.body:el;
var includeChildrenOnly=false;

if(startingNode.tagName=="BODY"){
includeChildrenOnly=true;
}

gatherSize(size,doc?doc.body:el,includeChildrenOnly,true,true);

if(excludeScrollbars&&doc){
doc.documentElement.style.overflow=currentOverflow;
}

return size;
};

})(jQuery);


(function($){

$.cookies={};






var _cookieEncode=function(sText){
if(!sText){
return"";
}else{
sText=sText.toString();
}


sText=encodeURIComponent(sText);


sText=sText.replace(/\+/gi,"%2B").replace(/\%20/gi,"+");


return sText;
};





var _cookieDecode=function(sText){
if(!sText){
return"";
}else{
sText=sText.toString();
}


sText=sText.replace(/\+/gi,"%20").replace(/\%2B/gi,"+");


try{
return decodeURIComponent(sText);
}catch(ex){


return sText;
}

};

var _defaultPermanentDate=function(){
var d=new Date();
d.setFullYear(d.getFullYear()+1);
return d.toUTCString();
};

var _defaults={
domain:null,
path:"/",
permanentDate:_defaultPermanentDate(),
watcher:$.noop
};

var _settings=_defaults;

$.cookies.setDefaults=function(settings){
_settings=$.extend({},_defaults,settings);
};

var _getDefault=function(key,overrideValue){
if(overrideValue){
return overrideValue;
}

return _settings[key];
};



$.cookies.enabled=function(){
$.cookies.set("cookietest","value");
if($.cookies.get("cookietest")=="value"){
$.cookies.remove("cookietest");
return true;
}else{
return false;
}
};





$.cookies.get=function(name,subCookie){
var cookies=new Cookies();
var cookie=cookies[name];
if(cookie){
if(subCookie){
if(cookie.subCookies){
return cookie.subCookies[subCookie]||null;
}

return null;
}

if(cookie.subCookies){
return cookie.subCookies;
}else{
return cookie.value||"";
}
}

return null;
};







$.cookies.set=function(nameOrData,value,domain,permanent,clearExistingSubCookies){
var name=nameOrData;
var path;

if(typeof(nameOrData)=="object"){
name=nameOrData.name;
value=nameOrData.value;
domain=nameOrData.domain;
permanent=nameOrData.permanent;
path=nameOrData.path;
clearExistingSubCookies=nameOrData.clearExistingSubCookies||nameOrData.clearExisting;
}


var subCookies;
if(typeof(value)=="object"&&value!==null){
subCookies=value;
value=null;
}


var cookie=(new Cookies())[name];
if(!cookie){
cookie=new Cookie();
cookie.name=name;
}

cookie.value=value;

if(subCookies){
if(clearExistingSubCookies||!cookie.subCookies){
cookie.subCookies=subCookies;
}else{

for(var subCookie in subCookies){
if(subCookies.hasOwnProperty(subCookie)){
cookie.subCookies[subCookie]=subCookies[subCookie];
}
}
}
}

cookie.domain=_getDefault("domain",domain);
cookie.path=_getDefault("path",path);
cookie.isPermanent=!!permanent;

cookie.save();
};



$.cookies.remove=function(name,domain,path){
var cookie=_cookieEncode(name)+"=a; path="+_getDefault("path",path)+"; expires=Wed, 17 Jan 1979 07:01:00 GMT";

domain=_getDefault("domain",domain);
if(domain){
cookie+="; domain="+domain;
}

_settings.watcher(cookie);

document.cookie=cookie;
};



var Cookies=function(){
var me=this;
var cookie=document.cookie.toString();
var cookieArray=cookie.split(";");

var iLen=cookieArray.length;
for(var i=0;i<iLen;i++){
var oCookie=new Cookie();
oCookie.parse(cookieArray[i]);
if(oCookie.name){
me[oCookie.name]=oCookie;
}
}
};



var Cookie=function(){
var me=this;


this.name=null;


this.subCookies=null;



this.value=null;



this.domain=null;


this.path=null;


this.isPermanent=false;

var _validateName=function(){
if(!me.name){
throw new Error("Cookie: Cookie name is null.");
}
};




this.serialize=function(){
_validateName();

var cookie=_cookieEncode(me.name)+"="+_getEncodedValue();

cookie+="; path="+_getDefault("path",this.path);

var domain=_getDefault("domain",me.domain);
if(domain){
cookie+="; domain="+domain;
}

if(me.isPermanent){
cookie+="; expires="+_getDefault("permanentDate");
}

return cookie;
};



this.save=function(){
_validateName();

var cookie=me.serialize();
_settings.watcher(cookie);

document.cookie=cookie;
};




this.parse=function(sUnparsedValue){
if(!sUnparsedValue){
return;
}


sUnparsedValue=sUnparsedValue.replace(/^\s*(.*?)\s*$/,"$1");


var iPosEquals=sUnparsedValue.indexOf("=");
if(iPosEquals<=0){
return;
}

me.name=_cookieDecode(sUnparsedValue.substr(0,iPosEquals));

var sValue=sUnparsedValue.substr(iPosEquals+1);
if(sValue.indexOf("=")==-1){
me.value=_cookieDecode(sValue);
return;
}

me.subCookies={};

var aSubCookies=sValue.split("&");
var iLen=aSubCookies.length;
for(var i=0;i<iLen;i++){
var aSubCookie=aSubCookies[i].split("=");
if(aSubCookie.length!=2){
me.subCookies=null;
return;
}else{
me.subCookies[_cookieDecode(aSubCookie[0])]=_cookieDecode(aSubCookie[1]);
}
}
};



var _getEncodedValue=function(){
if(me.subCookies){
var aOut=[];
for(var sSub in me.subCookies){
aOut.push(_cookieEncode(sSub)+"="+_cookieEncode(me.subCookies[sSub]));
}
return aOut.join("&");
}else{
return _cookieEncode(me.value);
}
};

};

})(jQuery);

jQuery.cookies.setDefaults({domain:window._cookieDomain});

var BROWSER_CLASS_Other='Other';
var BROWSER_CLASS_InternetExplorer='InternetExplorer';
var BROWSER_CLASS_Gecko='Gecko';
var BROWSER_CLASS_Webkit='Webkit';
var BROWSER_CLASS_Opera='Opera';

var BROWSER_NAME_Other='Other';
var BROWSER_NAME_InternetExplorer='InternetExplorer';
var BROWSER_NAME_Firefox='Firefox';
var BROWSER_NAME_Mozilla='Mozilla';
var BROWSER_NAME_Safari='Safari';
var BROWSER_NAME_GoogleChrome='GoogleChrome';
var BROWSER_NAME_Opera='Opera';
var BROWSER_NAME_MobileSafari='MobileSafari';
var BROWSER_NAME_Android='Android';
var BROWSER_NAME_Blackberry='Blackberry';
var BROWSER_NAME_Camino='Camino';
var BROWSER_NAME_Dolfin='Dolfin';
var BROWSER_NAME_KindleSilk='KindleSilk';
var BROWSER_NAME_MobileChrome='MobileChrome';
var BROWSER_NAME_Blackberry10='Blackberry10';
var BROWSER_NAME_Playstation='Playstation';
var BROWSER_NAME_SymantecStealthMode='SymantecStealthMode';
var BROWSER_NAME_Waterfox='Waterfox';
var BROWSER_NAME_WOSBrowser='WOSBrowser';
var BROWSER_NAME_Nintendo='Nintendo';
var BROWSER_NAME_UCBrowser='UCBrowser';
var BROWSER_NAME_NokiaBrowser='NokiaBrowser';
var BROWSER_NAME_Edge='Edge';
var BROWSER_NAME_MobileEdge='MobileEdge';
var BROWSER_NAME_PlaystationVita='PlaystationVita';

var BROWSER_OS_DeprecatedOther='DeprecatedOther';
var BROWSER_OS_Windows='Windows';
var BROWSER_OS_Macintosh='Macintosh';
var BROWSER_OS_Linux='Linux';
var BROWSER_OS_Other='Other';
var BROWSER_OS_IOS='IOS';
var BROWSER_OS_Android='Android';
var BROWSER_OS_Blackberry='Blackberry';
var BROWSER_OS_WindowsPhone='WindowsPhone';
var BROWSER_OS_WebOS='WebOS';
var BROWSER_OS_Symbian='Symbian';
var BROWSER_OS_Bada='Bada';
var BROWSER_OS_BlackberryTabletOS='BlackberryTabletOS';
var BROWSER_OS_Blackberry10OS='Blackberry10OS';
var BROWSER_OS_ChromeOS='ChromeOS';
var BROWSER_OS_Playstation='Playstation';
var BROWSER_OS_SymantecStealthMode='SymantecStealthMode';
var BROWSER_OS_OpenBSD='OpenBSD';
var BROWSER_OS_Nintendo='Nintendo';
var BROWSER_OS_NokiaOS='NokiaOS';
var BROWSER_OS_FreeBSD='FreeBSD';
var BROWSER_OS_PlaystationVita='PlaystationVita';


window._browserDD={};
window._browserDD.types=[
['mobile.*OPR/','OPR/([0-9\\.]+)',4,BROWSER_NAME_Opera],
['OPR/','OPR/([0-9\\.]+)',4,BROWSER_NAME_Opera],
['opera mobi','(?:Opera.*Version/([0-9\\.]+))|(?:Opera[/\\ ]{1}(\\S+))',4,BROWSER_NAME_Opera],
['opera mini','(?:Opera.*Version/([0-9\\.]+))|(?:Opera[/\\ ]{1}(\\S+))',4,BROWSER_NAME_Opera],
['opera','(?:Opera.*Version/([0-9\\.]+))|(?:Opera[/\\ ]{1}(\\S+))',4,BROWSER_NAME_Opera],
['msie.*iemobile','MSIE\\ (\\S+);',1,BROWSER_NAME_InternetExplorer],
['IEMobile','IEMobile/(\\S+);',1,BROWSER_NAME_InternetExplorer],
['ARM;.*Trident/.*rv:11','Trident/.*rv:([0-9\\.]{1,})[;) ]',1,BROWSER_NAME_InternetExplorer],
['Trident/.*rv:11','Trident/.*rv:([0-9\\.]{1,})[;) ]',1,BROWSER_NAME_InternetExplorer],
['msie 10[.]0.*ARM;','MSIE\\ (\\S+);',1,BROWSER_NAME_InternetExplorer],
['msie 10[.]0|msie 10\\.6','MSIE\\ (\\S+);',1,BROWSER_NAME_InternetExplorer],
['msie 9[.]0|msie 9\\.10','MSIE\\ (\\S+);',1,BROWSER_NAME_InternetExplorer],
['msie 8[.]0','MSIE\\ (\\S+);',1,BROWSER_NAME_InternetExplorer],
['msie 7[.]0','MSIE\\ (\\S+);',1,BROWSER_NAME_InternetExplorer],
['msie 6[.]0','MSIE\\ (\\S+);',1,BROWSER_NAME_InternetExplorer],
['msie 5[.]5','MSIE\\ (\\S+);',1,BROWSER_NAME_InternetExplorer],
['msie 5[.]','MSIE\\ (\\S+);',1,BROWSER_NAME_InternetExplorer],
['msie 4[.]0','MSIE\\ (\\S+);',1,BROWSER_NAME_InternetExplorer],
['Mobile.*Edge/([0-9\\.]+)','Edge/(((?\u003cmajor\u003e[0-9]+))\\.(?\u003cminor\u003e\\S+))',3,BROWSER_NAME_MobileEdge],
['Edge/([0-9\\.]+)','Edge/(((?\u003cmajor\u003e[0-9]+))\\.(?\u003cminor\u003e\\S+))',3,BROWSER_NAME_Edge],
['Minefield','Minefield/(\\S+)',2,BROWSER_NAME_Firefox],
['Waterfox','Waterfox/(\\S+)',2,BROWSER_NAME_Waterfox],
['Camino/.*Firefox',null,2,BROWSER_NAME_Camino],
['firefox.*fennec','Firefox/(\\S+)',2,BROWSER_NAME_Firefox],
['Android.*Tablet.*firefox/(2[1-9]|[3-9][0-9]|[1-9][0-9]{2,})\\.','Firefox/(\\S+)',2,BROWSER_NAME_Firefox],
['Android.*Mobile.*Firefox/','Firefox/(\\S+)',2,BROWSER_NAME_Firefox],
['firefox/(2[1-9]|[3-9][0-9]|[1-9][0-9]{2,})\\.','Firefox/(\\S+)',2,BROWSER_NAME_Firefox],
['firefox/20[.]','Firefox/(\\S+)',2,BROWSER_NAME_Firefox],
['firefox/19[.]','Firefox/(\\S+)',2,BROWSER_NAME_Firefox],
['firefox/18[.]','Firefox/(\\S+)',2,BROWSER_NAME_Firefox],
['firefox/17[.]','Firefox/(\\S+)',2,BROWSER_NAME_Firefox],
['firefox/16[.]','Firefox/(\\S+)',2,BROWSER_NAME_Firefox],
['firefox/15[.]','Firefox/(\\S+)',2,BROWSER_NAME_Firefox],
['firefox/14[.]','Firefox/(\\S+)',2,BROWSER_NAME_Firefox],
['firefox/13[.]','Firefox/(\\S+)',2,BROWSER_NAME_Firefox],
['firefox/12[.]','Firefox/(\\S+)',2,BROWSER_NAME_Firefox],
['firefox/11[.]','Firefox/(\\S+)',2,BROWSER_NAME_Firefox],
['firefox/10[.]','Firefox/(\\S+)',2,BROWSER_NAME_Firefox],
['firefox/9[.]','Firefox/(\\S+)',2,BROWSER_NAME_Firefox],
['firefox/8[.]','Firefox/(\\S+)',2,BROWSER_NAME_Firefox],
['firefox/7[.]','Firefox/(\\S+)',2,BROWSER_NAME_Firefox],
['firefox/6[.]','Firefox/(\\S+)',2,BROWSER_NAME_Firefox],
['firefox/5[.]','Firefox/(\\S+)',2,BROWSER_NAME_Firefox],
['firefox/4[.]0','Firefox/(\\S+)',2,BROWSER_NAME_Firefox],
['firefox/3[.]8','Firefox/(\\S+)',2,BROWSER_NAME_Firefox],
['firefox/3[.]6','Firefox/(\\S+)',2,BROWSER_NAME_Firefox],
['firefox/3[.]5','Firefox/(\\S+)',2,BROWSER_NAME_Firefox],
['firefox/3[.]0','Firefox/(\\S+)',2,BROWSER_NAME_Firefox],
['firefox/3[.]','Firefox/(\\S+)',2,BROWSER_NAME_Firefox],
['firefox/2[.]0','Firefox/(\\S+)',2,BROWSER_NAME_Firefox],
['firefox/1[.]5','Firefox/(\\S+)',2,BROWSER_NAME_Firefox],
['firefox/1[.]0','Firefox/(\\S+)',2,BROWSER_NAME_Firefox],
['firefox','Firefox/(\\S+)',2,BROWSER_NAME_Firefox],
['PlayStation Vita','PlayStation Vita (\\S+)[;)]',3,BROWSER_NAME_PlaystationVita],
['Silk/','Silk/(\\S+)',3,BROWSER_NAME_KindleSilk],
['BlackBerry.*AppleWebKit','Version/(\\S+).*Safari',3,BROWSER_NAME_Blackberry],
['^blackberry',null,0,BROWSER_NAME_Blackberry],
['BB10','Version/(\\S+)',3,BROWSER_NAME_Blackberry10],
['Dolfin','Dolfin/(\\S+)',3,BROWSER_NAME_Dolfin],
['RIM Tablet OS','Version/(\\S+)',3,BROWSER_NAME_Blackberry],
['android.*chrome.*mobile','Chrome/(\\S+)',3,BROWSER_NAME_MobileChrome],
['android.*chrome','Chrome/(\\S+)',3,BROWSER_NAME_MobileChrome],
['android.*mobile','Version/(\\S+).*Safari',3,BROWSER_NAME_Android],
['android','Version/(\\S+).*Safari',3,BROWSER_NAME_Android],
['ipad.*crios','CriOS/(\\S+)',3,BROWSER_NAME_MobileChrome],
['ipad','Version/(\\S+).*Safari',3,BROWSER_NAME_MobileSafari],
['ipod.*crios','CriOS/(\\S+)',3,BROWSER_NAME_MobileChrome],
['ipod','Version/(\\S+).*Safari',3,BROWSER_NAME_MobileSafari],
['iphone.*crios','CriOS/(\\S+)',3,BROWSER_NAME_MobileChrome],
['iphone','Version/(\\S+).*Safari',3,BROWSER_NAME_MobileSafari],
['playstation','(?i)playstation(?i) \\S+ (\\S+)',3,BROWSER_NAME_Playstation],
['applewebkit.*chrome','Chrome/(\\S+)',3,BROWSER_NAME_GoogleChrome],
['version/6[^ ].* safari/','Version/(\\S+).*Safari',3,BROWSER_NAME_Safari],
['version/5[^ ].* safari/','Version/(\\S+).*Safari',3,BROWSER_NAME_Safari],
['version/4[^ ].* safari/','Version/(\\S+).*Safari',3,BROWSER_NAME_Safari],
['version/([7-9]+|[0-9]{2,}).* safari/','Version/(\\S+).*Safari',3,BROWSER_NAME_Safari],
['safari/(52|41|31|12|85)','Version/(\\S+).*Safari',3,BROWSER_NAME_Safari],
['netscape','Netscape/(\\S+)',2,BROWSER_NAME_Other],
['NintendoBrowser','NintendoBrowser/(\\S+)',3,BROWSER_NAME_Nintendo],
['wOSBrowser','wOSBrowser/(\\S+)',3,BROWSER_NAME_WOSBrowser],
['AppleWebKit.*like Gecko\\)\\sNokiaBrowser/.*Mobile','NokiaBrowser/([0-9\\.]+)',3,BROWSER_NAME_NokiaBrowser],
['AppleWebKit/','AppleWebKit/(\\S+)',3,BROWSER_NAME_Other],
['gecko',null,2,BROWSER_NAME_Other],
['UCWEB.*Mobile','UCBrowser/([0-9\\.]+)',0,BROWSER_NAME_UCBrowser],
['brew [0-9][.][0-9]',null,0,BROWSER_NAME_Other],
['mmp\\/[0-9][.][0-9]',null,0,BROWSER_NAME_Other],
['[/ ]midp-[0-9][.][0-9]',null,0,BROWSER_NAME_Other],
['compatible; msie 999.1','MSIE\\ (\\S+);',0,BROWSER_NAME_SymantecStealthMode],
['.*',null,0,BROWSER_NAME_Other],
['safari/not-used',null,3,BROWSER_NAME_Safari],
['othermobile/not-used',null,0,BROWSER_NAME_Other],
['robot/not-used',null,0,BROWSER_NAME_Other]];
window._browserDD.classes={
"0":[BROWSER_CLASS_Other,null],
"1":[BROWSER_CLASS_InternetExplorer,'(?:MSIE\\ (\\S+);)|(?:rv:([0-9\\.]{1,}))'],
"2":[BROWSER_CLASS_Gecko,'Gecko/(\\S+)'],
"3":[BROWSER_CLASS_Webkit,'AppleWebKit/(\\S+)'],
"4":[BROWSER_CLASS_Opera,'(?:OPR/([0-9\\.]+))|(?:Opera.*Version/([0-9\\.]+))|(?:Opera[/\\ ]{1}(\\S+))']};
window._browserDD.oses=[
[BROWSER_OS_WindowsPhone,'Windows Phone','Windows Phone (?:OS ){0,1}(\\S+);'],
[BROWSER_OS_Windows,'Windows','Windows\\ (?:NT\\ ){0,1}(\\S+)[;\\)]'],
[BROWSER_OS_IOS,'iPhone|iPad|iPod','CPU (?:(?:iPhone|iPad|iPod) ){0,1}OS (\\S+) like Mac'],
[BROWSER_OS_Android,'Android','Android\\ (\\S+)[;)]'],
[BROWSER_OS_Macintosh,'Macintosh','Mac OS X (\\S+)[;\\)]'],
[BROWSER_OS_WebOS,'webOS|hpwOS','(?:webOS|hpwOS)/(\\S+);'],
[BROWSER_OS_Linux,'Linux',null],
[BROWSER_OS_Blackberry,'Blackberry','Version/(\\S+).*Safari|BlackBerry[0-9]+/(\\S+)'],
[BROWSER_OS_Symbian,'Symbian','Symbian(?:OS){0,1}/([^\\s;]+)'],
[BROWSER_OS_Bada,'bada','(?i)bada/(\\S+);'],
[BROWSER_OS_BlackberryTabletOS,'RIM Tablet OS','RIM Tablet OS (\\S+);'],
[BROWSER_OS_Blackberry10OS,'BB10','BB(\\S+);'],
[BROWSER_OS_ChromeOS,'CrOS\\b','CrOS (?:armv7l|x86_64) (\\S+)[;)]'],
[BROWSER_OS_PlaystationVita,'PlayStation Vita','PlayStation Vita (\\S+)[;)]'],
[BROWSER_OS_Playstation,'playstation','playstation (\\S+) '],
[BROWSER_OS_SymantecStealthMode,'compatible; MSIE 999.1',null],
[BROWSER_OS_OpenBSD,'OpenBSD',null],
[BROWSER_OS_Nintendo,'Nintendo','NX/(\\S+)'],
[BROWSER_OS_NokiaOS,'Nokia','Nokia(\\S+)[/]'],
[BROWSER_OS_FreeBSD,'FreeBSD',null],
[BROWSER_OS_Other,'.*',null],
[BROWSER_OS_DeprecatedOther,'.*',null]];

if(!window.__td){window.__MT=100;window.__ti=0;window.__td=[];window.__td.length=window.__MT;window.__noTrace=false;

}




(function $vpfn_Hg4fhxRd7MTNeTc_LVGMqw8$1()
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
function parseVersion(versionString)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
var version={major:0,minor:0};

try
{
var scrubbedVersion=versionString.replace(/"[^0-9\.].*$"/,"");
var parts=scrubbedVersion.split('.');

if(parts.length>=4)
{
version.minor=parseFloat(parts[2]+"."+parts[3]);
}
else if(parts.length>=3)
{
version.minor=parseFloat(parts[2]);
}

if(parts.length>=2)
{
version.major=parseFloat(parts[0]+"."+parts[1]);
}
else if(parts.length>=1)
{
version.major=parseFloat(parts[0]);
}
}
catch(ex)
{

}

return version;
}parseVersion._vpfn='$vpfn_cicoOVlOWwz1mfCz3sWTnw10$4';

var data={};



var browserType;
for(var i=0;i<window._browserDD.types.length;i++)
{
if((new RegExp(window._browserDD.types[i][0],"i")).test(navigator.userAgent))
{
browserType=window._browserDD.types[i];
break;
}
}

if(!browserType)
{

return;
}



data.version={major:0,minor:0};
if(browserType[1])
{
var specificVersionMatch=navigator.userAgent.match(new RegExp(browserType[1],"i"));
if(specificVersionMatch&&specificVersionMatch.length>=2)
{
data.version=parseVersion(specificVersionMatch[1]);
}
}

data.name=browserType[3];



var browserClass=window._browserDD.classes[browserType[2]];
data.className=browserClass[0];



data.classVersion={major:0,minor:0};
var match=navigator.userAgent.match(new RegExp(browserClass[1],"i"));
if(match&&match.length>=2)
{
data.classVersion=parseVersion(match[1]);
}



var os=BROWSER_OS_Other;
var osVersion={major:0,minor:0};

for(i=0;i<window._browserDD.oses.length;i++)
{
var osRow=window._browserDD.oses[i];
if((new RegExp(osRow[1],"i")).test(navigator.userAgent))
{
os=osRow[0];

if(osRow[2])
{
var osVersionMatch=navigator.userAgent.match(new RegExp(osRow[2],"i"));
if(osVersionMatch&&osVersionMatch.length>=2)
{
osVersion=parseVersion(osVersionMatch[1]);
}
}
break;
}
}

data.operatingSystem=os;
data.operatingSystemVersion=osVersion;

data.supportsPng=data.className!=BROWSER_CLASS_InternetExplorer||data.version.major>6;



window._browserData=data;

})();

if(!window.__td){window.__MT=100;window.__ti=0;window.__td=[];window.__td.length=window.__MT;window.__noTrace=false;

}




if(typeof vp=="undefined"){
var vp={};
}





vp.instrumentation={};

var LOGGING_MAX_LEN=65535;












if(!window.__MT)
{
var __MT=100;


var __ti=0;


var __td=[];
__td.length=__MT;
}



(function $vpfn_zphtohCKsH0LMBoPRVeViw45$1()
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}






vp.instrumentation.getTrace=function $vpfn_0IGZnGrOEn2PV0cnfKSCQA53$34()
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
var MAX_SIZE=__MT;


var iFirstSlot=__ti+1;
if(iFirstSlot>=MAX_SIZE||!__td[iFirstSlot])
{
iFirstSlot=0;
}

var aOut=[];
aOut.push("<trace>");
var i=iFirstSlot;
var bLoopFinished=false;
var sLastFnName=null;


while(__td[i]&&(i<iFirstSlot||!bLoopFinished))
{
var args=__td[i];
var fn=__td[i].callee;
var sFnName=vp.instrumentation.getFunctionName(fn);

if(!fn.isVpEventsWrapper)
{
aOut.push("<f n=\"");
aOut.push(sFnName);
aOut.push("\"");

if(typeof(fn._eventHandlerId)!="undefined"&&sLastFnName=="vpEventHandlerWrapper")
{
var sEventType="unknown";
if(args&&args[0]&&args[0].type)
{
sEventType=args[0].type;
}
aOut.push(" eventhandler=\""+sEventType+"\" ");
}




if(fn._isErrorHandler)
{
aOut.push(" errorhandler=\"1\" ");
}

if(fn._isInstrumentationMethod)
{
aOut.push(" instrumentationmethod=\"1\" ");
}

sLastFnName=sFnName;

if(__td[i].length===0)
{
aOut.push("/>");
}
else
{
aOut.push(">");

for(var j=0;j<__td[i].length;j++)
{
aOut.push("<a>");
aOut.push(vp.instrumentation._basicXmlEncode(vp.instrumentation.objToString(__td[i][j],0).substr(0,255)));
aOut.push("</a>");
}

aOut.push("</f>");
}
}

sLastFnName=sFnName;

i++;
if(i>=MAX_SIZE)
{
i=0;
bLoopFinished=true;
}
}

aOut.push("</trace>");
return aOut.join("");
};





vp.instrumentation.objToString=function $vpfn_jARcZ714$IkyzyWerhj8Vw145$37(oObj,iRecurseLevel)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
if(typeof(iRecurseLevel)=="undefined")
{
iRecurseLevel=2;
}

if(typeof(oObj)=="object")
{
if(oObj===null)
{
return"{null}";
}
else if(iRecurseLevel===0)
{
return"{obj}";
}
else
{
var aValues=[];
for(var sProp in oObj)
{
var sValue=sProp+":";

try
{
sValue+=arguments.callee(oObj[sProp],iRecurseLevel-1);
}
catch(ex)
{
}

aValues.push(sValue);
}
return"{"+aValues.join(",")+"}";
}
}
if(typeof(oObj)=="function")
{
return vp.instrumentation.getFunctionName(oObj);
}
else if(typeof(oObj)=="string")
{
return'"'+oObj.replace(/\"/gi,"\\\"")+'"';
}
else if(typeof(oObj)=="undefined")
{
return"{undefined}";
}
else
{
return oObj+"";
}
};






vp.instrumentation.getFunctionName=function $vpfn_q6oRuQ0U0JzjBjSac3ou2Q205$41(fn)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
if(fn._vpfn)
{
return fn._vpfn;
}

var sName=fn.toString();
sName=sName.substr("function ".length);
sName=sName.substr(0,sName.indexOf('('));
return sName;
};

vp.instrumentation._basicXmlEncode=function $vpfn_Kbm6EtlgMb1T6THqIp$Kmw218$41(sStr)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
if(typeof(sStr)=="undefined"||sStr===null)
{
return"";
}
else
{
return sStr.replace(/\</gi,"&lt;").replace(/\>/gi,"&gt;").replace(/\&/gi,"&amp;");
}
};






vp.instrumentation.logError=function $vpfn_cfSgoyLWHAea6u3XRW8eUg235$34(sMessage,iLineNum)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
if(vp.instrumentation._currentErrorHandler)
{
vp.instrumentation._currentErrorHandler(sMessage,document.location.href,iLineNum||0);
}
};

vp.instrumentation.logError._isInstrumentationMethod=true;





vp.instrumentation.wrapFunctionWithInstrumentation=function $vpfn_miA8TbMj4$crDe6xOsC1Mw249$57(fn)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}

if(typeof(fn)!="function")
{
return fn;
}


if(fn._isVpInstrumentedFunction===true)
{
return fn;
}

var fnWrapped=function $vpfn_zLcsYGn1RTxwfdyNH$7Yvw263$24()
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
try
{
fn.apply(this,arguments);
}
catch(ex)
{
vp.instrumentation.logException(ex);


throw new Error(ex.message+" "+VP_INSTRUMENTATION_ALREADY_LOGGED_MESSAGE,ex.fileName,ex.lineNumber);
}
};

fnWrapped._isVpInstrumentedFunction=true;

return fnWrapped;
};





vp.instrumentation.logException=function $vpfn_ChbJuXWHxjwb_FTCjMB$Bg287$38(oException)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
if(oException._wasLogged)
{
return;
}

oException._wasLogged=true;

if(vp.instrumentation._currentErrorHandler)
{

if(!oException.fileName)
{
var oFileInfo=vp.instrumentation._extractLineAndFileFromStack(oException);
oException.fileName=oFileInfo.fileName;
oException.lineNumber=oFileInfo.lineNumber;
}


if(!oException.fileName)
{
oException.fileName=oException.sourceURL;
}


if(!oException.lineNumber)
{
oException.lineNumber=oException.line;
}

vp.instrumentation._currentErrorHandler(oException.message,oException.fileName,oException.lineNumber);
}
};





vp.instrumentation._extractLineAndFileFromStack=function $vpfn_yIrN39i3R4yqDtooocjvsg326$54(oException)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
var oFileInfo={};

if(oException&&oException.stack)
{
try
{
var urlRegex=/((?:https?\:)?\/\/.*?):([0-9]*)/i;
var matches=urlRegex.exec(oException.stack);
if(matches&&matches.length>2)
{
oFileInfo.fileName=matches[1];
oFileInfo.lineNumber=matches[2];
}
}
catch(ex)
{
}
}
return oFileInfo;
};

vp.instrumentation.logException._isInstrumentationMethod=true;

vp.instrumentation.numberOfErrors=0;
vp.instrumentation.lastLoggedError=null;









vp.instrumentation.errorHandler=function $vpfn_j_0P3CC2G$jEQ3ozgbgTrQ362$38(sMsg,sErrorUrl,iLineNum)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}

window.__noTrace=true;

try
{
var oErrData=vp.instrumentation.getErrorDataQueryString(sMsg,sErrorUrl,iLineNum);


if(oErrData)
{

if($!==jQuery)
{
oErrData.form.trace="<trace><f n='jQueryBonk3' /><f n='jQueryBonk2'><a>"
+vp.instrumentation.tagInspector('script')
+vp.instrumentation.objInspector($)
+"</a></f><f n='jQueryBonk1' errorhandler='true'/></trace>";
}

var sTrackingUrl="//"+window.location.host+"/vp/tracking/client-event-logger.aspx?"+jQuery.param(oErrData.queryString);
var sPostData=vp.instrumentation.serializeLogData(oErrData.form);

jQuery.ajax({
url:sTrackingUrl,
type:"post",
data:sPostData,
error:function(){}
});
}
}
catch(ex)
{
}

window.__noTrace=false;
return true;
};

vp.instrumentation.serializeLogData=function $vpfn_2UnvXOKEJJcbY7bhgwnc3A402$42(oPostData)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
var sPostData=jQuery.param(oPostData);

if(sPostData.length>LOGGING_MAX_LEN)
{
oPostData.trace="<trace><fn n=\"Trace too long\" /></trace>";
sPostData=jQuery.param(oPostData);
}

return sPostData;
};

var VP_INSTRUMENTATION_ALREADY_LOGGED_MESSAGE="7389BF32-F154-444B-9FDA-8A6C61D10041";

vp.instrumentation.getErrorDataQueryString=function $vpfn_h7Kjk5F2OvglQNA4dhoCng417$49(sMsg,sErrorUrl,iLineNum)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}



var iNow=new Date().valueOf();
var lastErr=vp.instrumentation.lastLoggedError;

if(lastErr)
{




var isMeaninglessError=!sErrorUrl&&iLineNum===0;



var isRethrown=sMsg&&sMsg.indexOf(VP_INSTRUMENTATION_ALREADY_LOGGED_MESSAGE)>0;

if(isMeaninglessError||isRethrown||(sMsg==lastErr.message&&sErrorUrl==lastErr.errorUrl))
{
vp.instrumentation.lastLoggedError=null;
return null;
}
}

vp.instrumentation.lastLoggedError=
{
dateTime:iNow,
message:sMsg,
errorUrl:sErrorUrl,
lineNumber:iLineNum
};

var LOGGING_NUM_ERRORS_MAX=50;

vp.instrumentation.numberOfErrors++;
if(vp.instrumentation.numberOfErrors>LOGGING_NUM_ERRORS_MAX)
{
return null;
}

var oPostData={};
oPostData.message=sMsg;
oPostData.line=iLineNum;


if(!vp.instrumentation._populateErrorLogData(sMsg,sErrorUrl,iLineNum,oPostData))
{
return null;
}

var sQs=document.location.search;
if(sQs.length>1)
{
sQs=sQs.substring(1);
}

var oGetData={
d:new Date().toUTCString().replace("UTC","GMT"),
g:window._vp_page_guid,
s:window._vp_session_id,
e:window.VP_CLIENT_EVENT_TYPE_Error,
p:document.location.pathname,
b:navigator.userAgent,
q:sQs,
err:true,
u:sErrorUrl||""
};

if(window._vp_logical_page)
{
oGetData.lp=window._vp_logical_page;
}

return{
queryString:oGetData,
form:oPostData
};
};






vp.instrumentation.setErrorHandler=function $vpfn_Sd_$FWEPjpHoFplCi8cCRA504$41(fnHandler)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
fnHandler._isErrorHandler=true;
vp.instrumentation._currentErrorHandler=fnHandler;
vp.instrumentation.addOnError(fnHandler);
};









vp.instrumentation._populateErrorLogData=function $vpfn_mc$ptyRi9WrIoDXQsLhpMQ519$47(sMessage,sErrorUrl,iLineNum,oData)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
oData.trace=vp.instrumentation.getTrace();
return true;
};





vp.instrumentation.testError=function $vpfn_TbB_7crxE3QJQTd3Y2UL9w529$35(sMethodName)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
if(!sMethodName)
{
sMethodName="testErrorUndefinedMethod";
}

var fn=vp.instrumentation.wrapFunctionWithInstrumentation(function $vpfn_zphtohCKsH0LMBoPRVeViw536$68()
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
eval(sMethodName+"();");
});

fn();
};






vp.instrumentation.objInspector=function $vpfn_vibzhG0FiIyRzHzJN7YdGQ549$38(obj)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
var details="vp.instrumentation.objToString: "+vp.instrumentation.objToString(obj,10)+";";

try
{
details+=" JSON.stringify:";
details+=JSON.stringify(obj);
}
catch(ex)
{
details+=" JSON.stringify failed:"+ex;
}


try
{
details+=" Class inspection:";
if(obj&&obj.constructor&&obj.constructor.toString)
{
var arr=obj.constructor.toString().match(/function\s*(\w+)/);
for(var i=0;i<arr.length;i++)
{
details+=i+"="+arr[i];
}
}
}
catch(ex)
{
details+=" Class inspection failed:"+ex;
}

try
{

if(vp.instrumentation.determineObj(obj))
{
details+=" Detailed inspection:";
if(obj!=undefined&&obj instanceof Object)
{
details+=" Detailed func inspection:";
for(var prop in obj)
{
if(obj[prop]instanceof Function)
{
details+=vp.instrumentation.detailedObjInspector(prop,obj[prop]);
}
}
}
}
}
catch(ex)
{
details+=" Detailed inspection failed:"+ex;
}

return details;
};






vp.instrumentation.determineObj=function $vpfn_58SZbnZk9BtPfsX1yPsdEg613$38(obj)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
if(obj==undefined)
{
return false;
}
else
{
if(obj instanceof Object)
{

if((obj instanceof Boolean)||(obj instanceof Number)||(obj instanceof String)||
(obj instanceof Array)||(obj instanceof Date)||(obj instanceof Function))
{
return false;
}
else if(obj instanceof Object)
{
return true;
}
}
return false;
}
};






vp.instrumentation.tagInspector=function $vpfn_r_zZMuLGLfv39KAoWCllXg643$38(tag)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
var tags=document.getElementsByTagName(tag);
var scripts="Loaded Scripts: ";
for(var i=0;i<tags.length;i++)
{
scripts+=i+":"+tags[i].src+" ";
}
return scripts;
};






vp.instrumentation.detailedObjInspector=function $vpfn_njDEA9A5$QIcfeawdChc$g659$46(prop,obj)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
var details='';
if(obj==undefined)
{
details+="undefined";
}
else
{
details+=" type:"+(typeof obj).toString()+";Name:"+prop;

if(obj instanceof Object)
{

if(obj instanceof Boolean)
{
details+="boolean";
}
else if(obj instanceof Number)
{
details+="number";
}
else if(obj instanceof String)
{
details+="string";
}

else if(obj instanceof Array)
{
details+="array:interals:";
for(var j=0;j<obj.length;j++)
{
details+="cell["+j+"]="+obj[j];
}
}
else if(obj instanceof Date)
{
details+="date:"+obj;
}
else if(obj instanceof Function)
{
details+=" function-internals:"+obj.toString(0);
}
else if(obj instanceof Object)
{
details+="object";
}
}

else if(typeof obj)
{

if(typeof obj=="object")
{
if(typeof obj=="object"&&!obj)
{
details+="null";
}
}
else
{

if(typeof obj=="boolean")
{
details+="boolean:"+obj;
}
else if(typeof obj=="number")
{
details+="number:"+obj;
}
else if(typeof obj=="string")
{
details+="string:"+obj;
}
}
}
else
{
details+="undectectable"+obj;
}
}
return details;
};





vp.instrumentation.addOnError=function $vpfn_QK6Dwmw_tdRTRZEe5lE8MA747$36(func)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
var oldonerror=window.onerror;
if(typeof window.onerror!='function')
{
window.onerror=func;
}
else
{
window.onerror=function $vpfn_$n_O3oCWbBxrCgKgtM8dVg756$29(sMsg,sErrorUrl,iLineNum,col,obj)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
if(oldonerror)
{
oldonerror(sMsg,sErrorUrl,iLineNum,col,obj);
}
func(sMsg,sErrorUrl,iLineNum,col,obj);
};
}
};

if(!window.isDebug&&window._vp_log_client_errors)
{
vp.instrumentation.setErrorHandler(window._overrideInstrumentationErrorHandler||vp.instrumentation.errorHandler);
}


if(window._vp_log_client_errors&&vp.bootstrap)
{
vp.bootstrap.setExceptionLogger(vp.instrumentation.logException);
}

})(jQuery);


function showTrace()
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
window.__noTrace=true;
alert(vp.instrumentation.getTrace());
window.__noTrace=false;
}showTrace._vpfn='$vpfn_YcRATQ$Ku7D_yxkEGkta1w781$0';


if(!window.__td){window.__MT=100;window.__ti=0;window.__td=[];window.__td.length=window.__MT;window.__noTrace=false;

}




if(typeof vp=="undefined"){
var vp={};
}






vp.define=function $vpfn_2Tai2SeBQRe0hYi42Dgnpg17$12(namespace)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
var parts=namespace.split(".");

var last=window;
for(var i=0;i<parts.length;i++)
{
var obj=last[parts[i]];
if(!obj)
{
obj={};
last[parts[i]]=obj;
}
last=obj;
}
};






vp.define("vp.core");







vp.core.isArray=function $vpfn_nDaAASQ_QznXzpOurgK3Aw47$18(v)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
return v&&typeof v=="object"&&v.constructor==Array;
};











vp.core.applyProperties=function $vpfn_aeBI0B3js0WZCOFW$emckA62$26(oObj1,oObj2,aProps,bIgnoreNulls)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
if(aProps)
{
for(var i=0;i<aProps.length;i++)
{
var oOriginalValue=oObj1[aProps[i]];
if(!bIgnoreNulls||oOriginalValue!==null)
{
oObj2[aProps[i]]=oOriginalValue;
}
}
}
else
{
for(var sProp in oObj1)
{
oObj2[sProp]=oObj1[sProp];
}
}

return oObj2;
};









vp.core.getNestedProperty=function $vpfn_3owS5ixrVa5f$iO4nka$rA94$28(oObj,sProp)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
var sNestedProp=sProp;
var oNestedTarget=oObj;
var iDotPos=sNestedProp.indexOf(".");

while(iDotPos>=0)
{
var sCurrentProp=sNestedProp.substr(0,iDotPos);
sNestedProp=sNestedProp.substr(iDotPos+1);

if(!oNestedTarget[sCurrentProp])
{
return undefined;
}
oNestedTarget=oNestedTarget[sCurrentProp];

iDotPos=sNestedProp.indexOf(".");
}

return oNestedTarget[sNestedProp];
};










vp.core.setNestedProperty=function $vpfn_Ob9WtSOglD4Ja4HV6C5KqQ126$28(oObj,sProp,vValue)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
var sNestedProp=sProp;
var oNestedTarget=oObj;
var iDotPos=sNestedProp.indexOf(".");

while(iDotPos>=0)
{
var sCurrentProp=sNestedProp.substr(0,iDotPos);
sNestedProp=sNestedProp.substr(iDotPos+1);

if(!oNestedTarget[sCurrentProp])
{
throw new Error("The property "+sCurrentProp+" could not be found in "+sProp);
}

oNestedTarget=oNestedTarget[sCurrentProp];

iDotPos=sNestedProp.indexOf(".");
}

oNestedTarget[sNestedProp]=vValue;
};









vp.core.applyPropertyMap=function $vpfn_E8cc2Vg9yaI2tC_tTqE7Vw158$27(oTarget,oMap)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
for(var sProp in oMap)
{
vp.core.setNestedProperty(oTarget,sProp,oMap[sProp]);
}
};







vp.core.shallowCopy=function $vpfn_na53atwyVABP0SDPfduJDg172$22(oObj)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
var oNew={};
for(var sProp in oObj)
{
oNew[sProp]=oObj[sProp];
}
return oNew;
};








vp.core.shallowIsEqual=function $vpfn_NC_u$68aj0F0gVa3Sfkrmw189$25(oObj1,oObj2)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
var sProp;
var iObj2PropCount=0;
var iObj1PropCount=0;
for(sProp in oObj2)
{
iObj2PropCount++;
}

for(sProp in oObj1)
{
iObj1PropCount++;
if(typeof(oObj2[sProp])=="undefined")
{
return false;
}
else if(oObj2[sProp]!==oObj1[sProp])
{
return false;
}
}

if(iObj1PropCount!=iObj2PropCount)
{
return false;
}

return true;
};








vp.core.initProperty=function $vpfn_q1L$9miAHWZz$ysxzdcvqA227$23(oObject,sPropertyName,vValue)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
if(typeof(oObject[sPropertyName])=="undefined")
{
oObject[sPropertyName]=vValue;
}
};







vp.core.requireArg=function $vpfn_ffai1lhQ64aF$agFhVFh5g241$21(sName,vValue)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
if(typeof(vValue)=="undefined")
{
throw new Error("The argument '"+sName+"' is required.");
}

return vValue;
};








vp.core.getBoolean=function $vpfn_57KBDCwnz4_LxKcH_1f1Xg258$21(v,bDefault)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
if(typeof(bDefault)=="undefined")
{
bDefault=false;
}

if(typeof(v)=="boolean")
{
return v;
}

if(!v)
{
return bDefault;
}

switch(v.toString().toLowerCase())
{
case"yes":
case"true":
case"ok":
case"1":
return true;
default:
return false;
}
};








vp.core.getNumber=function $vpfn_BKb7u6LGvnbr$MQwc_D4QA294$20(v,nDefault)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
if(typeof(nDefault)=="undefined")
{
nDefault=0;
}

if(typeof(v)=="boolean")
{
return v?1:0;
}
else if(typeof(v)=="undefined"||v===null||v==="")
{
return nDefault;
}

var nNum=new Number(v);

if(!isNaN(nNum.valueOf()))
{
return nNum.valueOf();
}
else
{
return nDefault;
}
};








vp.core.setObjectReference=function $vpfn_cC9xHv5TmgOjA$7eDnJKSg329$29(oObj,oRef,sName)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}

if(!window.__ObjRefs)
{
window.__ObjRefs=[];
}

var iRef=parseInt(vp.core.getAttribute(oObj,"__objrefid",-1));


if(iRef<=-1)
{
iRef=window.__ObjRefs.length;
oObj.setAttribute("__objrefid",iRef.toString());
window.__ObjRefs[iRef]={};
}

window.__ObjRefs[iRef][sName]=oRef;
};









vp.core.getObjectReference=function $vpfn_zPlnj$DbDzjRKq78evasfA358$29(oObj,sName,oWindow)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
var oTargetWindow=oWindow||window;

if(!oTargetWindow.__ObjRefs)
{
return null;
}

var iRef=parseInt(vp.core.getAttribute(oObj,"__objrefid",-1));
if(iRef<=-1)
{
return null;
}

if(!oTargetWindow.__ObjRefs[iRef])
{
return null;
}

return oTargetWindow.__ObjRefs[iRef][sName];
};








vp.core.removeObjectReferenceAttribute=function $vpfn_YpePt1ySOCQbIFOPTF78HQ388$41(oObj,oWindow)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
var oTargetWindow=oWindow||window;

if(!oTargetWindow.__ObjRefs)
{
return;
}

oObj.removeAttribute("__objrefid");
};





vp.core.clearClosures=function $vpfn_GGO6gMy3NRy$iTvWTWWdGw404$24()
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
for(var i=0;i<window.__objs.length;i++)
{
window.__objs[i]=null;
window.__funs[i]=null;
}
};









Function.prototype.getClosure=function $vpfn_e8fIIhosPST2_gOwv24Gpg421$32(oScope)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}

if(!window.__objs)
{
window.__objs=[];
window.__funs=[];
}


var oFunction=this;


var objId=oScope.__objId;
if(!objId)
{
window.__objs[objId=oScope.__objId=window.__objs.length]=oScope;
}


var funId=oFunction.__funId;
if(!funId)
{
window.__funs[funId=oFunction.__funId=window.__funs.length]=oFunction;
}


if(!oScope.__closures)
{
oScope.__closures=[];
}


var closure=oScope.__closures["f"+funId];
if(!closure)
{

oScope=null;
oFunction=null;


closure=window.__objs[objId].__closures["f"+funId]=function $vpfn_3diauXzpCKnT4GhpCcUO_A462$65()
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
return window.__funs[funId].apply(window.__objs[objId],arguments);
};

closure.__isClosure=true;
closure.__funId=funId;
closure.__objId=objId;
}

return closure;
};














vp.core.getDelayedFunction=function $vpfn_4eDOnkK_bmDMso6QEtUgzQ488$29(fnFunction,iMinTimeBetweenCalls)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}

var bCanCallFunction=true;



var bWaitingToBeCalled=false;




var aWaitingArguments=arguments;

return function $vpfn_EbpfGNwJUF1T6d1WoFl52g502$11()
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
if(bCanCallFunction&&!bWaitingToBeCalled)
{


fnFunction.apply(this,arguments);
bCanCallFunction=false;

window.setTimeout(function $vpfn_EbpfGNwJUF1T6d1WoFl52g511$30()
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
bCanCallFunction=true;
},
iMinTimeBetweenCalls);
}

if(!bCanCallFunction&&!bWaitingToBeCalled)
{


bWaitingToBeCalled=true;

window.setTimeout(function $vpfn_EbpfGNwJUF1T6d1WoFl52g524$30()
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
bWaitingToBeCalled=false;
fnFunction.apply(this,aWaitingArguments);
},
iMinTimeBetweenCalls);
}
};
};


vp.core.markAsClosure=function $vpfn_f6iF6DAn4PUei5iK8S$ncA535$24(fnFunction)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
fnFunction.__isClosure=true;
};










vp.core.getAttribute=function $vpfn_jUGXAyB1ZX_OvqfwU794Ig549$23(oNode,sAttrName,vDefaultValue)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
if(!oNode.parsed&&!oNode.getAttribute)
{
return vDefaultValue;
}

var vValue=oNode.getAttribute(sAttrName);

if(vValue===null||typeof(vValue)=="undefined")
{
vValue=oNode[sAttrName];
}

if(vValue===null||typeof(vValue)=="undefined")
{
return vDefaultValue;
}
else
{
return vValue;
}
};










vp.core.getElement=function $vpfn_egyH4HNytGr2uKqmwmLkjg582$21(vElement,sFunc)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}

if(typeof vElement=="string")
{
var oElement=vp.ui.get(vElement);

if(!oElement)
{
throw new Error(sFunc+": No element with the ID '"+vElement+"' exists.");
}

vElement=oElement;
}


if(!vElement)
{
throw new Error("Call to "+sFunc+"() with a null element reference.");
}


return vElement;
};









vp.core.filterListByProperties=function $vpfn_C1p76_6TE1qEq_cKt$Opgw615$33(aList,oFilterProperties)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
var aMatchedItems=[];
for(var i=0,l=aList.length;i<l;i++)
{
var oItem=aList[i];
var bIsMatch=true;
for(var sKey in oFilterProperties)
{
if(oItem[sKey]!==oFilterProperties[sKey])
{
bIsMatch=false;
break;
}
}
if(bIsMatch)
{
aMatchedItems.push(oItem);
}
}

return aMatchedItems;
};

if(!window.__td){window.__MT=100;window.__ti=0;window.__td=[];window.__td.length=window.__MT;window.__noTrace=false;

}






if(!vp)
{
var vp={};
}

if(!vp.browser)
{
vp.browser={};
}





vp.browser.hasSpyware=false;





vp.browser.supportsPng=true;

(function $vpfn_3AcUOjqMK3SaPWYQT2WSNw32$1()
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
var BROWSER_SPYWARE_TOKENS={
"funwebproducts":{
name:"FunWebProducts",
url:"http://www.adwarealert.com/glossary_details.php?ID=133616"
},
"simbar":{
name:"Simbar",
url:"http://spywaredetector.net/spyware_encyclopedia/ToolBar.Simbar.htm"
}
};


if(window._browserData)
{
for(var prop in window._browserData)
{
this[prop]=window._browserData[prop];
}
}

this.ver=this.version.major;

this.OS={
isMac:this.operatingSystem==BROWSER_OS_Macintosh,
isWin:this.operatingSystem==BROWSER_OS_Windows,
isLinux:this.operatingSystem==BROWSER_OS_Linux,
isIOs:this.operatingSystem==BROWSER_OS_IOS,
isAndroid:this.operatingSystem==BROWSER_OS_Android,
isBlackberry:this.operatingSystem==BROWSER_OS_Blackberry,
isWindowsPhone:this.operatingSystem==BROWSER_OS_WindowsPhone,
name:this.operatingSystem,
version:this.operatingSystemVersion.major
};

this.isIE=this.className==BROWSER_CLASS_InternetExplorer;
this.isGecko=this.className==BROWSER_CLASS_Gecko;
this.isWebKit=this.className==BROWSER_CLASS_Webkit;
this.isFirefox=this.name==BROWSER_NAME_Firefox;
this.isSafari=this.name==BROWSER_NAME_Safari;

this.isMobileSafari=this.name==BROWSER_NAME_MobileSafari||(this.OS.isIOs&&this.name==BROWSER_NAME_MobileChrome);
this.isAndroid=this.name==BROWSER_NAME_Android;
this.isGoogleChrome=this.name==BROWSER_NAME_GoogleChrome;
this.isOpera=this.name==BROWSER_NAME_Opera;

delete this.operatingSystem;

var sUA=navigator.userAgent.toLowerCase();
for(var sToken in BROWSER_SPYWARE_TOKENS)
{
if(sUA.indexOf(sToken)!=-1)
{
this.hasSpyware=true;
if(!this.spyware)
{
this.spyware=[];
}

this.spyware.push(BROWSER_SPYWARE_TOKENS[sToken]);
}
}
}).call(vp.browser);

if(!window.__td){window.__MT=100;window.__ti=0;window.__td=[];window.__td.length=window.__MT;window.__noTrace=false;

}







if(typeof(vp)=="undefined"){
var vp={};
}





vp.comparer={};







vp.comparer.caseSensitive=function $vpfn_ICupwaaOu7WvXZHkfoF7DA27$28(o1,o2)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
if(o1>o2)
{
return 1;
}
else if(o1<o2)
{
return-1;
}
else
{
return 0;
}
};







vp.comparer.caseInsensitive=function $vpfn_MD7DGi2q15OyUoTkL1kbxg49$30(o1,o2)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
return vp.comparer.caseSensitive(String(o1).toLowerCase(),String(o2).toLowerCase());
};







vp.comparer.prefixSearchComparer=function $vpfn_VW5n8vlvjhRottasdU4dPg60$35(o1,o2)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
var sCompareTo=o1.toLowerCase();
var sSubject=o2.toLowerCase();
if(sSubject.startsWith&&sSubject.startsWith(sCompareTo,true))
{
return 0;
}
return vp.comparer.caseInsensitive(sCompareTo,sSubject);
};






vp.comparer.__getComparer=function $vpfn_Cmq1A_RKPSEIwE4ryNrq4A76$28(bCaseSensitiveOrCompareFunction)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
if(typeof(bCaseSensitiveOrCompareFunction)=="undefined"||bCaseSensitiveOrCompareFunction===null)
{
return vp.comparer.caseSensitive;
}
else if(typeof(bCaseSensitiveOrCompareFunction)=="function")
{
return bCaseSensitiveOrCompareFunction;
}
else if(!bCaseSensitiveOrCompareFunction)
{
return vp.comparer.caseInsensitive;
}
else if(bCaseSensitiveOrCompareFunction)
{
return vp.comparer.caseSensitive;
}
};







Array.prototype.clone=function $vpfn_K4ynVAlp5kUmtOFXlpQFLA102$24(){if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
return this.slice(0);
};


var _nativeIndexOf=Array.prototype.indexOf;














Array.prototype.indexOf=function $vpfn_YOrqrpXljlWNvWbo$Uo3ag122$26(vValue,bCaseSensitiveOrCompareFunction)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}




if(bCaseSensitiveOrCompareFunction===undefined||bCaseSensitiveOrCompareFunction===true||typeof bCaseSensitiveOrCompareFunction==="number"){
return _nativeIndexOf.apply(this,arguments);
}

var fnCompare=vp.comparer.__getComparer(bCaseSensitiveOrCompareFunction);
var iLen=this.length;

for(var i=0;i<iLen;i++)
{
if(fnCompare(this[i],vValue)===0)
{
return i;
}
}
return-1;
};















Array.prototype.contains=function $vpfn_PCAbLyw4AOFrQJEAsGoBAg159$27(vValue,bCaseSensitiveOrCompareFunction)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
return this.indexOf(vValue,bCaseSensitiveOrCompareFunction)!=-1;
};







Array.prototype.add=Array.prototype.push;







Array.prototype.append=function $vpfn_8geFUU_oAjY_oaCmP7lJxw178$25(aArr)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
var iLen=aArr.length;
for(var i=0;i<iLen;i++)
{
this.push(aArr[i]);
}
};








Array.prototype.insert=function $vpfn_4OWLGV7OUkVhgi3JD3s7UQ194$25(vValue,iIndex)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
for(var i=this.length;i>iIndex;i--)
{
this[i]=this[i-1];
}

this[iIndex]=vValue;
};







Array.prototype.remove=function $vpfn_hcvFyb3o9m$XzoQtv9f0SA210$25(iIndex)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
if(typeof(iIndex)!="number")
{
throw new Error("Array.remove requires an integer argument");
}

this.splice(iIndex,1);
};






Array.prototype.removeAll=function $vpfn_YRf48erdyyn8peCZmKKCLA225$28()
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
this.length=0;
};







Array.prototype.removeValue=function $vpfn_rMm9OZEgE$r9pGsCrOmFrA236$30(vValue)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
var iIndex=this.indexOf(vValue);
if(iIndex!==-1)
{
this.splice(iIndex,1);
}
};















Array.prototype.binarySearch=function $vpfn_7XL3kVGp1GNPw3LyyPhkeg259$31(vValue,bCaseSensitiveOrCompareFunction)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
var fnCompare=vp.comparer.__getComparer(bCaseSensitiveOrCompareFunction);

var iLow,iHigh,iMid,iRound;
iLow=0;
iHigh=this.length-1;
iRound=0;

while(iLow<=iHigh){
iRound++;
iMid=Math.floor((iLow+iHigh)/2);

var iCompare=fnCompare(vValue,this[iMid]);

if(iCompare<0)
{
iHigh=iMid-1;
}
else if(iCompare>0)
{
iLow=iMid+1;
}
else
{
return iMid;
}
}

return-1;
};












Array.prototype.insertSorted=function $vpfn_bz$CD1H_QAwnr4gri4pgcA302$31(vValue,bCaseSensitiveOrCompareFunction)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}


if(this.length===0)
{
this.push(vValue);
return;
}

var fnCompare=vp.comparer.__getComparer(bCaseSensitiveOrCompareFunction);

var iLow,iHigh,iMid,iRound;
iLow=0;
iHigh=this.length-1;
iRound=0;

while(iLow<=iHigh){
iRound++;
iMid=Math.floor((iLow+iHigh)/2);

var iCompare=fnCompare(vValue,this[iMid]);

if(iCompare<0)
{
iHigh=iMid-1;
}
else if(iCompare>0)
{
iLow=iMid+1;
}
else
{
break;
}
}

if(fnCompare(vValue,this[iMid])>0){
this.insert(vValue,iMid+1);
}else{
this.insert(vValue,iMid);
}
};








Array.prototype.equals=function $vpfn_6TJwAuU$klFhrNKzHn5i9g353$25(aCompare)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
if(this.length!=aCompare.length){
return false;
}

for(var i=0;i<this.length;i++){
if(this[i]!==aCompare[i]){
return false;
}
}

return true;
};

if(!window.__td){window.__MT=100;window.__ti=0;window.__td=[];window.__td.length=window.__MT;window.__noTrace=false;

}






vp.define("vp.events");







vp.events.cancelEvent=function $vpfn_gcqUaR5FU58JVCZiTC6Gxw18$24(oEvent)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
oEvent=oEvent||window.event;

if(!oEvent)
{
throw new Error("No event argument was passed into vp.events.cancelEvent()");
}

oEvent.returnValue=false;
if(oEvent.preventDefault)
{
oEvent.preventDefault();
}
};







vp.events.cancelBubble=function $vpfn_GqzalFwO4Y7fyE_liCebPg40$25(oEvent)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
oEvent=oEvent||window.event;
if(!oEvent)
{
throw new Error("No event argument was passed into vp.events.cancelBubble()");
}

if(oEvent.stopPropagation)
{
oEvent.stopPropagation();
oEvent.bubbleCanceled=true;
}
else
{
oEvent.cancelBubble=true;
}
};







vp.events.cancel=function $vpfn_FQXFjxubWfAYn3Ft8chCLw65$19(oEvent)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
vp.events.cancelEvent(oEvent);
vp.events.cancelBubble(oEvent);
};







vp.events._callHandlers=function $vpfn_iQRBBRnXhucQJTGSPFSBzQ77$26(oEvent)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}

oEvent=window.event||oEvent;


if(this.handlers[oEvent.type])
{
for(var i=0;i<this.handlers[oEvent.type].length;i++)
{
this.handlers[oEvent.type](oEvent);
}
}
};






vp.events._fireOnDOMLoad=function $vpfn_jLrQr2GTaCj4Enjjaq_QMA97$27()
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
if(vp.events.isDOMLoadComplete)
{
return;
}

vp.events.isDOMLoadComplete=true;








var e;

if(document.createEvent)
{


e=document.createEvent("UIEvents");
e.initEvent("FakeDOMContentReady",false,false);
document.dispatchEvent(e);
}
else if(document.documentElement.attachEvent)
{




e=document.createEventObject();
e.eventType="ondataavailable";
e.eventName="FakeDOMContentReady";

document.fireEvent(e.eventType,e);
}
};









vp.events._getHandlerWrapper=function $vpfn_euCYbxJWVfvqC7H0L$gy$w145$31(fnHandler,sType)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}


if(!fnHandler._eventHandlerId)
{
if(!window._lastEventHandlerId)
{
window._lastEventHandlerId=0;
}

fnHandler._eventHandlerId="eh"+window._lastEventHandlerId.toString();

window._lastEventHandlerId++;
}



if(!window._eventHandlerMap)
{
window._eventHandlerMap={};
}



var fnWrapper=window._eventHandlerMap[fnHandler._eventHandlerId];
if(!fnWrapper)
{
var fnEnsureDOMLoadCalled=sType=="load"?vp.events._fireOnDOMLoad:function(){};






if(document.all||window.isDebug)
{



fnWrapper=function $vpfn_nKl4pUaEqbDeKlhdxbDd0Q185$24(oEvent)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
fnEnsureDOMLoadCalled();
fnHandler(oEvent);
};
}
else
{







fnWrapper=vp.instrumentation.wrapFunctionWithInstrumentation(function $vpfn_0vij3rsKG_z8Eo$BbgQw1A200$75(oEvent)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
fnEnsureDOMLoadCalled();
fnHandler(oEvent);
});

}

fnWrapper.isVpEventsWrapper=true;

window._eventHandlerMap[fnHandler._eventHandlerId]=fnWrapper;
}

return fnWrapper;
};










vp.events.add=function $vpfn_LEczmOrQaQg4JCESMWQDuQ225$16(vTarget,sEvent,fnHandler)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}

var oTarget=vp.core.getElement(vTarget,"vp.events.add");





var fnHandlerWrapper=vp.events._getHandlerWrapper(fnHandler,sEvent);

var oEventMap=vp.events._initializeBoundObject(oTarget,sEvent);

if(!oEventMap.enableInProgress)
{
oEventMap.handlers.push(fnHandlerWrapper);
}

if(oEventMap.enabled)
{

if(oTarget.addEventListener)
{
oTarget.addEventListener(sEvent,fnHandlerWrapper,false);
}
else if(oTarget.attachEvent)
{




oTarget.detachEvent("on"+sEvent,fnHandlerWrapper);
oTarget.attachEvent("on"+sEvent,fnHandlerWrapper);
}
else
{
if(!oTarget.handlers)
{
oTarget.handlers={};
}

if(!oTarget.handlers[sEvent])
{
oTarget.handlers[sEvent]=[];
}

oTarget.handlers[sEvent][oTarget.handlers[sEvent].length]=fnHandlerWrapper;
oTarget["on"+sEvent]=vp.events._callHandlers;
}
}
};









vp.events.remove=function $vpfn_dG68GXRSvWkggUa$K3_pSA285$19(vTarget,sEvent,fnHandler)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}

var oTarget=vp.core.getElement(vTarget,"vp.events.remove");

var fnHandlerWrapper=vp.events._getHandlerWrapper(fnHandler,sEvent);

var bDoRemove=true;

try
{
var oEventMap=vp.events._initializeBoundObject(oTarget,sEvent);

if(!oEventMap.enableInProgress)
{
oEventMap.handlers.removeValue(fnHandlerWrapper);
}

if(!oEventMap.enabled&&!oEventMap.enableInProgress)
{
bDoRemove=false;
}
}
catch(ex)
{

}

if(bDoRemove)
{
try
{
if(oTarget.closed)
{
return;
}
}
catch(ex)
{
return;
}


if(oTarget.removeEventListener)
{
oTarget.removeEventListener(sEvent,fnHandlerWrapper,false);
}
else if(oTarget.detachEvent)
{
oTarget.detachEvent("on"+sEvent,fnHandlerWrapper);
}
else
{
if(!oTarget.handlers)
{
oTarget.handlers={};
}

if(!oTarget.handlers[sEvent])
{
oTarget.handlers[sEvent]=[];
}

var aHandlers=oTarget.handlers[sEvent];
var iLen=aHandlers.length;


for(var i=0;i<iLen;i++)
{
if(aHandlers[i]==fnHandlerWrapper)
{
aHandlers[i]=new Function();
}
}

aHandlers[aHandlers.length]=fnHandlerWrapper;
oTarget["on"+sEvent]=vp.events._callHandlers;
}
}
};





vp.events.removeAll=function $vpfn_OvTQryjDYtIRoANTUny$JA370$22()
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
for(var sElemId in vp.events._boundObjects)
{
try
{
var sTemp=vp.events._boundObjects[sElemId].target._eventId;
}
catch(ex)
{
continue;
}

for(var sEvent in vp.events._boundObjects[sElemId].events)
{
var aHandlers=vp.events._boundObjects[sElemId].events[sEvent].handlers;
if(aHandlers)
{

var iLen=aHandlers.length;
for(var i=iLen-1;i>=0;i--)
{
var fnAction=function $vpfn_zVVe6FcwLQMx4qWE3O2GZQ392$35()
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
vp.events.remove(
vp.events._boundObjects[sElemId].target,
sEvent,
aHandlers[i]);
};

if(window.isDebug)
{
fnAction();
}
else
{
try
{
fnAction();
}
catch(ex)
{
}
}
}
}
}
}
};








vp.events._boundObjects={};







vp.events._eventIdCounter=0;








vp.events._initializeBoundObject=function $vpfn_4pepP8QXqMKbxbn8ynwhwQ444$35(oElement,sEvent)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
if(!oElement._eventId)
{
oElement._eventId="evt"+vp.events._eventIdCounter;
vp.events._eventIdCounter++;
}

var oMap=vp.events._boundObjects[oElement._eventId];
if(!oMap)
{
oMap={
target:oElement,
events:{}
};

vp.events._boundObjects[oElement._eventId]=oMap;
}

if(!oMap.events[sEvent])
{
oMap.events[sEvent]={
handlers:[],
enabled:true
};
}

return oMap.events[sEvent];
};









vp.events.enable=function $vpfn_Z_svU388i6IyzVVVaKjB5w482$19(vElement,sEvent,bEnable)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}

if(typeof(bEnable)=="undefined")
{
bEnable=true;
}

var oElement=vp.core.getElement(vElement,"vp.events.enableEvents");

var oEventMap=vp.events._initializeBoundObject(oElement,sEvent);

if(oEventMap.enabled==bEnable)
{
return;
}

oEventMap.enabled=bEnable;

var sSourceProp="on"+sEvent+(bEnable?"_disabled":"");
var sTargetProp="on"+sEvent+(!bEnable?"_disabled":"");



if(oElement[sSourceProp])
{

oElement[sTargetProp]=oElement[sSourceProp];
oElement[sSourceProp]=null;
}



else
{


oEventMap.enableInProgress=true;

var fnChange=bEnable?vp.events.add:vp.events.remove;

for(var i=0;i<oEventMap.handlers.length;i++)
{
fnChange(oElement,sEvent,oEventMap.handlers[i]);
}

oEventMap.enableInProgress=false;
}
};









vp.events.addRecursive=function $vpfn_E3Gr$FrAqQG6ai_Y9U5Vyw540$25(oElement,sEvent,fnHandler)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
vp.events.add(oElement,sEvent,fnHandler);

for(var i=0;i<oElement.childNodes.length;i++)
{
var oChild=oElement.childNodes[i];
if(oChild.nodeType==1)
{
arguments.callee(oChild,sEvent,fnHandler);
}
}
};







vp.events.addToOnLoad=function $vpfn_18y1gmdXFs1nu72qvPFFXg560$24(fnHandler)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
vp.events.add(window,"load",fnHandler);
};







vp.events.addToOnUnload=function $vpfn_isog3W_U9xrvYEnXUnwmLg571$26(fnHandler)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
vp.events.add(window,"unload",fnHandler);
};

vp.events.addToOnLoad(function $vpfn_0vij3rsKG_z8Eo$BbgQw1A576$22(){if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}vp.events.isLoadComplete=true;});









vp.events.runAfterLoadComplete=function $vpfn_LTV$8KJ$yB7HcxDe8MKZfA586$33(fnHandler,iDelay)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
var fnWrapper=fnHandler;

if(typeof(iDelay)=="number"&&iDelay>=0)
{
fnWrapper=function $vpfn_nKl4pUaEqbDeKlhdxbDd0Q592$20(){if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}setTimeout(fnHandler,iDelay);};
}

if(vp.events.isLoadComplete)
{
fnWrapper();
}
else
{
vp.events.addToOnLoad(fnWrapper);
}
};








vp.events.getEvent=function $vpfn_HwRgN_kuZ0VWSg7V$5gj_w612$21(oEvent)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}

oEvent=oEvent||window.event;


if(typeof oEvent.target!="object"&&oEvent.srcElement)
{
oEvent.target=oEvent.srcElement;
}


oEvent.realTarget=oEvent.target;
if(oEvent.target&&oEvent.target.nodeType==3)
{
oEvent.realTarget=oEvent.target.parentNode;
}


if(typeof oEvent.charCode!="number"&&oEvent.keyCode)
{
oEvent.charCode=oEvent.keyCode;
}


if(typeof oEvent.pageX!="number"&&oEvent.offsetX)
{
oEvent.pageX=oEvent.offsetX;
oEvent.pageY=oEvent.offsetY;
}


if(oEvent.type=="mouseout"&&typeof oEvent.toElement!="undefined"&&!oEvent.relatedTarget)
{
oEvent.relatedTarget=oEvent.toElement;
}
if(oEvent.type=="mouseover"&&typeof oEvent.fromElement!="undefined"&&!oEvent.relatedTarget)
{
oEvent.relatedTarget=oEvent.fromElement;
}


return oEvent;
};







vp.events.isRightClick=function $vpfn_A91OE0I7b8btFYWeQ6bGnQ663$25(e)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
if(e.button==2||e.type=="contextmenu")
{
return true;
}
};








vp.events.isFreedFunction=function $vpfn_GwjpJjtInqi$aMKQCz6fog678$28(fnPointer)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
try
{
var oTemp=fnPointer.valueOf();
}
catch(ex)
{
return true;
}

return false;
};












vp.events.CustomEvent=function $vpfn_tosjteHfKa4K1YE1lIfqoQ703$24(oObj,sEventName)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
var _aHandlers=[];
var _oObj=oObj;
var _sEventName=sEventName;

var me=this;

this.useUnsafeClosures=false;





this.addHandler=function $vpfn_e_iG77sRRXaI4BDZ_Iukig717$22(fnHandler)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
var fn;
if(me.useUnsafeClosures)
{
fn=fnHandler;
}
else
{
fn=fnHandler.__isClosure?fnHandler:fnHandler.getClosure(_oObj);
}

fn.__freedCheck=true;
_aHandlers.push(fn);

};




var removeFreedHandlers=function $vpfn_wDgv78h769TJPKxpRrGo8g737$30()
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
for(var i=0;i<_aHandlers.length;i++)
{
if(vp.events.isFreedFunction(_aHandlers[i]))
{
_aHandlers.splice(i,1);
i--;
}
}
};





this.removeHandler=function $vpfn_YFNFBK2_F$QIzuTEEvdGug753$25(fnHandler)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
removeFreedHandlers();

for(var i=0;i<_aHandlers.length;i++)
{
var bRemove=false;

if(me.useUnsafeClosures&&_aHandlers[i]==fnHandler)
{
bRemove=true;
}
else if(_aHandlers[i].__funId==fnHandler.__funId)
{
bRemove=true;
}

if(bRemove)
{
_aHandlers.splice(i,1);
return;
}
}
};




this.removeAll=function $vpfn_IIlmsSWH7_NqhSxtn0X5jQ781$21()
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
_aHandlers=[];
};





this.fire=function $vpfn_NmXaAzeeVV_uaKiio4ejgA790$16(e)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
if(!e)
{
e={};
}




if(!e.target&&!e.srcElement)
{
e.target=_oObj;
}

if(!e.type)
{
e.type=_sEventName;
}

removeFreedHandlers();

for(var i=0;i<_aHandlers.length;i++)
{


_aHandlers[i](e);
}

return e.cancelCustomEvent?false:true;
};
};






vp.events.addOnDOMLoadHandler=function $vpfn_RpXkwTacAkfP_CAXjwYkbg828$32(fnCallback)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
var fnCallbackWrapperInner=vp.events._getHandlerWrapper(fnCallback,"DOMContentLoaded");

var fnCallbackWrapper=function $vpfn_9bUZlh2AUJZbbPJFBbPQdA832$28()
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}

if(arguments.callee.done)
{
return;
}


arguments.callee.done=true;

fnCallbackWrapperInner({type:"DOMContentLoaded"});
};





if(!vp.events._domReadyEventInitialized)
{
vp.events._domReadyEventInitialized=true;






jQuery(document).ready(vp.events._fireOnDOMLoad);
}




if(document.addEventListener)
{
document.addEventListener("FakeDOMContentReady",fnCallbackWrapper,false);
}
else if(document.documentElement.attachEvent)
{




document.attachEvent(
"ondataavailable",
function $vpfn_0vij3rsKG_z8Eo$BbgQw1A877$12(e)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
if(e.eventName=="FakeDOMContentReady")
{
fnCallbackWrapper();
}
});
}
};


vp.events.addOnDOMLoadHandler(function(){});







vp.events.runAfterDOMLoadComplete=function $vpfn_$y_tx3AzlsxBuswoHFXfxQ896$36(fnHandler)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
if(vp.events.isDOMLoadComplete)
{
fnHandler();
}
else
{
vp.events.addOnDOMLoadHandler(fnHandler);
}
};






vp.events._eventHashProps=[
"type",
"altKey",
"altLeft",
"button",
"clientX",
"clientY",
"ctrlKey",
"ctrlLeft",
"dataFld",
"offsetX",
"offsetY",
"propertyName",
"qualifier",
"reason",
"repeat",
"screenX",
"screenY",
"shiftKey",
"shiftLeft",
"srcUrn",
"x",
"y"];





vp.events._getEventSignature=function $vpfn_QC35Rut3Z$_rx_qzP3i9rA941$31(oEvent)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
var aHash=[];
var iLen=vp.events._eventHashProps.length;

for(var i=0;i<iLen;i++)
{
var sProp=vp.events._eventHashProps[i];
var sVal="o";
switch(typeof(oEvent[sProp]))
{
case"string":
case"number":
sVal=oEvent[sProp];
break;
case"boolean":
sVal=oEvent[sProp]?1:0;
break;
default:
break;
}

aHash.push(sVal);
}

return aHash.join("");
};





vp.events._ieEventsPropertyCache=[];






vp.events._getIEEventsPropertyFromCache=function $vpfn_HBwc49t3wYA84x9zJCvKsw980$42(sID)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
for(var i=vp.events._ieEventsPropertyCache.length-1;i>=0;i--)
{
if(vp.events._ieEventsPropertyCache[i].id==sID)
{
return vp.events._ieEventsPropertyCache[i];
}
}

return null;
};








vp.events.setEventData=function $vpfn_SYUGkMfct7FQMo4Z6tNtSw1000$25(oEvent,sKey,vValue)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
if(document.all)
{

var sID=vp.events._getEventSignature(oEvent);
var oCachedProps=vp.events._getIEEventsPropertyFromCache(sID);

if(!oCachedProps)
{
oCachedProps={
"id":sID,
"customAttributes":{}
};

oCachedProps.customAttributes[sKey]=vValue;

vp.events._ieEventsPropertyCache.push(oCachedProps);
}
else
{
oCachedProps.customAttributes[sKey]=vValue;
}
}
else
{
if(!oEvent.customAttributes)
{
oEvent.customAttributes={};
}

oEvent.customAttributes[sKey]=vValue;
}
};









vp.events.getEventData=function $vpfn_1nLsMlVRKFRYM8g2bDrZNw1043$25(oEvent,sKey)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
if(document.all)
{
var aCache=vp.events._ieEventsPropertyCache;


var iLen=vp.events._ieEventsPropertyCache.length;
if(iLen>100)
{
vp.events._ieEventsPropertyCache=
vp.events._ieEventsPropertyCache.slice(iLen-100);
}

var sID=vp.events._getEventSignature(oEvent);
var oCachedProps=vp.events._getIEEventsPropertyFromCache(sID);

if(oCachedProps)
{
return oCachedProps.customAttributes[sKey];
}
}
else
{
if(oEvent.customAttributes&&typeof(oEvent.customAttributes[sKey])!="undefined")
{
return oEvent.customAttributes[sKey];
}
}

return null;
};










vp.events.fireEvent=function $vpfn_2ys8WgHXvtry9jsDRZPHOw1085$22(oTarget,sEvent,oSrcEvent,oCustomArgs)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
var oEventArgs=
{
bubbles:true,
cancelable:true,
ctrlKey:false,
altKey:false,
shiftKey:false,
metaKey:false,
keyCode:0,
charCode:0,
button:0,
detail:1,
screenX:1,
screenY:1,
clientX:1,
clientY:1,
relatedTarget:oTarget
};

if(oSrcEvent)
{
for(var sProp in oEventArgs)
{
oEventArgs[sProp]=oSrcEvent[sProp];
}
}


if(document.createEvent)
{
var oEvent=null;
if(sEvent.indexOf("key")!=-1)
{
oEvent=document.createEvent("KeyboardEvent");
(oEvent.initKeyEvent||oEvent.initKeyboardEvent).call(oEvent,
sEvent,
oEventArgs.bubbles,
oEventArgs.cancelable,
window,
oEventArgs.ctrlKey,
oEventArgs.altKey,
oEventArgs.shiftKey,
oEventArgs.metaKey,
oEventArgs.keyCode,
oEventArgs.charCode);
}
else
{
oEvent=document.createEvent("MouseEvents");

oEvent.initMouseEvent(
sEvent,
oEventArgs.bubbles,
oEventArgs.cancelable,
window,
oEventArgs.detail,
oEventArgs.screenX,
oEventArgs.screenY,
oEventArgs.clientX,
oEventArgs.clientY,
oEventArgs.ctrlKey,
oEventArgs.altKey,
oEventArgs.shiftKey,
oEventArgs.metaKey,
oEventArgs.button,
oEventArgs.relatedTarget);
}

if(oCustomArgs)
{
for(var sCustomProp in oCustomArgs)
{
oEvent[sCustomProp]=oCustomArgs[sCustomProp];
}
}

oTarget.dispatchEvent(oEvent);
}

else
{
oTarget.fireEvent("on"+sEvent);
}
};






vp.events.isModifierKey=function $vpfn_oShNwR9CZ6GUZYuG401F2Q1177$26(e)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
return vp.browser.OS.isMac?e.metaKey:e.ctrlKey;
};








vp.events.EventManager=function $vpfn_Eo3Ag9GEfJn$S_YP9EeRgQ1189$25()
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
var _aEvents=[];








this.add=function $vpfn_h09qlWV1JOycGuPN$Fz4cQ1200$15(oElement,sEvent,fnHandler)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
vp.events.add(oElement,sEvent,fnHandler);
_aEvents.add([oElement,sEvent,fnHandler]);
};








this.remove=function $vpfn_YTg_qrM1px4WLL6gMvIe7g1213$18(oElement,sEvent,fnHandler)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
for(var i=0;i<_aEvents.length;i++)
{
if(oElement==_aEvents[i][0]&&
sEvent==_aEvents[i][1]&&
fnHandler==_aEvents[i][2])
{
_aEvents.remove(i);
vp.events.remove(oElement,sEvent,fnHandler);
break;
}
}
};




this.removeAll=function $vpfn_IIlmsSWH7_NqhSxtn0X5jQ1231$21()
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
for(var i=0;i<_aEvents.length;i++)
{
vp.events.remove(_aEvents[i][0],_aEvents[i][1],_aEvents[i][2]);
}
_aEvents=[];
};
};

if(!window.__td){window.__MT=100;window.__ti=0;window.__td=[];window.__td.length=window.__MT;window.__noTrace=false;}







if(!vp)
{
var vp={};
}

if(!vp.ui)
{
vp.ui={};
}








vp.ui.imageUrl=function $vpfn_CgzOz$i_usT95$SJBC0PVQ26$17(sUrl,bIsLocalized)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
var IE6_PNG_TOKEN='_ie6.png';



if(!vp.browser.supportsPng&&sUrl.indexOf(IE6_PNG_TOKEN)<0)
{
sUrl=sUrl.replace((/\.png/i),IE6_PNG_TOKEN);
}



if(window.imageHost&&sUrl.indexOf("http")!==0)
{
sUrl=window.imageHost+sUrl;
}



if(bIsLocalized)
{
sUrl=vp.ui.ensureLanguageIdParameter(sUrl);
}

return sUrl;
};







vp.ui.ensureLanguageIdParameter=function $vpfn_9l7aERqkMmJ0K2gsqUGN7A60$34(sSrc)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
if(sSrc.indexOf("langid")<=0)
{
var iLangId=typeof(window.languageId)=="undefined"?1:window.languageId;
var oURL=new $.Url(sSrc);
oURL.setItem("langid",iLangId);
return oURL.toString();
}

return sSrc;
};

if(!window.__td){window.__MT=100;window.__ti=0;window.__td=[];window.__td.length=window.__MT;window.__noTrace=false;}







if(!vp)
{
var vp={};
}

if(!vp.ui)
{
vp.ui={};
}

(function $vpfn_YUX8Iv4k$uVMojy3D6jaLg19$1($)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}

var _loadComplete=false;

var DEPRIORITIZE_DELAY=10;

$(window).on("load",
function $vpfn_YUX8Iv4k$uVMojy3D6jaLg27$4(){if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
_loadComplete=true;
});



$.afterLoad=function $vpfn_P5y2Uvv52cE8Ccc2oiXLCw33$14(callback,delay)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
if(typeof(delay)!="number"||delay<0)
{
delay=0;
}

if(_loadComplete)
{
callback();
}
else
{
$(window).on(
"load",
function $vpfn_YUX8Iv4k$uVMojy3D6jaLg48$12()
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
setTimeout(callback,delay);
_loadComplete=true;
});
}
};

var logPixel=function $vpfn_3h137l95YnSldUZUoXipsw56$15(url)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
if(!!$.currentQueryString()["debugpixels"])
{
if(window.console)
{
window.console.log('debug pixel: '+url);
}
}
};








vp.ui.loadScriptAfterPageLoad=function $vpfn__k5W0AdXyMdudNCFLcZoBQ74$32(url,success,error)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
var successWrapper=_.isFunction(success)?vp.instrumentation.wrapFunctionWithInstrumentation(success):null;
var errorWrapper=_.isFunction(error)?vp.instrumentation.wrapFunctionWithInstrumentation(error):null;

logPixel(url);

$.afterLoad(
function $vpfn_YUX8Iv4k$uVMojy3D6jaLg82$8()
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
$.ajax({
url:url,
dataType:"script",
cache:true,
success:successWrapper,
error:errorWrapper
});
},
DEPRIORITIZE_DELAY);
};








vp.ui.loadImageAfterPageLoad=function $vpfn_5TvITHZe_UzmKBlyR02xEw102$31(url,success,error)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
logPixel(url);

var wrapper=function $vpfn_Zz6LmtFGJzFNT$OF18_Neg106$18()
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
var $img=$("<img />")
.attr("src",url)
.css({display:"none"});

if(success)
{
$img.on("load",success);
}

if(error)
{
$img.on("error",error);
}

$img.appendTo(document.body);
};

$.afterLoad(wrapper,DEPRIORITIZE_DELAY);
};






vp.ui.loadIFrameAfterPageLoad=function $vpfn_$wpSpD_FUsGjwMnioM9MOA133$32(url)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
logPixel(url);

var wrapper=function $vpfn_Zz6LmtFGJzFNT$OF18_Neg137$18()
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
var $iframe=$("<iframe />")
.attr("src",url)
.css({display:"none"})
.appendTo(document.body);
};

$.afterLoad(wrapper,DEPRIORITIZE_DELAY);
};

})(jQuery);

if(!window.__td){window.__MT=100;window.__ti=0;window.__td=[];window.__td.length=window.__MT;window.__noTrace=false;

}










vp.define("vp.ui");







vp.ui.expand=function $vpfn_9ZH6dR6J0I2MePHHqGLsWg22$15(vElement)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}

vElement=vp.core.getElement(vElement,"vp.ui.expand");


vElement.style.display="";
};









vp.ui.expandToBlock=function $vpfn_4nUMo8A_krsu7P6$PT6_iw39$22(vElement)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}

vElement=vp.core.getElement(vElement,"vp.ui.expandToBlock");


vElement.style.display="block";
};







vp.ui.collapse=function $vpfn_1yWFcqRCPeuKgv4tKyrXcg54$17(vElement)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}

vElement=vp.core.getElement(vElement,"vp.ui.collapse");


vElement.style.display="none";
};







vp.ui.toggleDisplay=function $vpfn_Rr4saFGdn9pKJdGtXdnNcg69$22(vElement,bDisplayBlock)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}

var objElem=vp.core.getElement(vElement,"vp.ui.toggleDisplay");
if(objElem)
{
if(objElem.style.display=="none")
{
if(bDisplayBlock)
{
objElem.style.display="block";
}
else
{
objElem.style.display="";
}
}
else
{
objElem.style.display="none";
}
}
};








vp.ui.expandAndCollapse=function $vpfn_WrtVsPAlBDlVylP2UsiQ4g100$26(vElementToExpand,vElementToCollapse)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
vp.ui.collapse(vElementToCollapse);
vp.ui.expand(vElementToExpand);
};








vp.ui.expandToBlockAndCollapse=function $vpfn_ApnK9$XfaF5qY4kj1aPU_g113$33(vElementToExpand,vElementToCollapse)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
vp.ui.collapse(vElementToCollapse);
vp.ui.expandToBlock(vElementToExpand);
};







vp.ui.show=function $vpfn_6YncxKvNQ3gjRi9UtAqZ4Q125$13(vElement)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}

vElement=vp.core.getElement(vElement,"show");


vElement.style.visibility="visible";
vElement.style.display="";
};







vp.ui.hide=function $vpfn_rOKNp3VoMOskSb3whTENYg141$13(vElement)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}


vElement=vp.core.getElement(vElement,"vp.ui.hide");


vElement.style.visibility="hidden";
};








vp.ui.isVisible=function $vpfn_xtOzAOzm40jXcPmK2PEEWg158$18(vElement)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}

vElement=vp.core.getElement(vElement,"vp.ui.isVisible");


return vp.ui.getCurrentStyle(vElement,"visibility")!="hidden";
};








vp.ui.isCollapsed=function $vpfn_piw6bw1$EtNg4Oyx3s8eIg174$20(vElement)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}

vElement=vp.core.getElement(vElement,"vp.ui.isCollapsed");


return vp.ui.getCurrentStyle(vElement,"display")=="none";
};


vp.ui.ensureMaxHeight=function $vpfn_Elhg9loU$cfKixzWdw2_bg184$24(vElement,iMaxHeight)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
vElement=vp.core.getElement(vElement,"vp.ui.ensureMaxHeight");

if(typeof(vElement.style.maxHeight)!="undefined")
{
return;
}

if(typeof(iMaxHeight)=="undefined")
{
iMaxHeight=parseInt(new vp.web.CssString(vElement.style.cssText).getItem("max-height"));
}
else
{
vElement.style.maxHeight=iMaxHeight+"px";
}

if(vElement.offsetHeight>iMaxHeight)
{
vElement.style.height=iMaxHeight+"px";
}
};









vp.ui.get=function $vpfn_J6V0iuyaxPutPRd9pHFs7w216$12(sId)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}

if(typeof sId!="string")
{
throw new Error("Call to vp.ui.get() with a non-string identifier.");
}


var oElem=document.getElementById?document.getElementById(sId):document.all[sId];


if(!oElem&&sId.indexOf(".")===0)
{
var aItems=vp.ui.getChildrenBySelector(document,sId);
if(aItems.length>0)
{
oElem=aItems[0];
}
}

return oElem;
};









vp.ui.getChildrenBySelector=function $vpfn_2NF9twd9U9p88Gx0cUTZ8g248$30(vElement,sSelector)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}

vElement=vp.core.getElement(vElement,"vp.ui.getChildrenBySelector");

var aFound=[];
var iFoundCount=0;


var aTokens=sSelector.split(' ');
var aCurrentContext=new Array(vElement);
var iCurrentContextIndex=0;
for(var i=0;i<aTokens.length;i++)
{
var oToken=aTokens[i].replace(/^\s+/,'').replace(/\s+$/,'');;
if(oToken.indexOf('#')>-1)
{

var aIdBits=oToken.split('#');
var sTagName=aIdBits[0];
var sId=aIdBits[1];
var oElement=vp.ui.get(sId);
if(sTagName&&oElement.nodeName.toLowerCase()!=sTagName)
{

return[];
}

aCurrentContext=new Array(oElement);
continue;
}
if(oToken.indexOf('.')>-1)
{

var aClassBits=oToken.split('.');
var sClassTagName=aClassBits[0];
var sClassName=aClassBits[1];
if(!sClassTagName)
{
sClassTagName='*';
}

aFound=[];
iFoundCount=0;
for(var h=0;h<aCurrentContext.length;h++)
{
var aTagElements;
if(sClassTagName=='*')
{
aTagElements=vp.ui.getAllChildren(aCurrentContext[h]);
}
else
{
aTagElements=aCurrentContext[h].getElementsByTagName(sClassTagName);
}
for(var j=0;j<aTagElements.length;j++)
{
aFound[iFoundCount]=aTagElements[j];
iFoundCount++;
}
}
aCurrentContext=[];
iCurrentContextIndex=0;
for(var k=0;k<aFound.length;k++)
{



var oClassName=aFound[k].className;

if(oClassName)
{
if(typeof oClassName.baseVal!="undefined")
{
oClassName=oClassName.baseVal;
}

if(oClassName.match(new RegExp('(?:^|\\s)'+sClassName+'(?:\\s|$)')))
{
aCurrentContext[iCurrentContextIndex]=aFound[k];
iCurrentContextIndex++;
}
}
}
continue;
}

if(oToken.match(/^(\w*)\[(\w+)([=~\|\^\$\*]?)=?"?([^\]"]*)"?\]$/))
{
var sAttrSelectorTagName=RegExp.$1;
var sAttrName=RegExp.$2;
var sAttrOperator=RegExp.$3;
var sAttrValue=RegExp.$4;
if(!sAttrSelectorTagName)
{
sAttrSelectorTagName='*';
}

aFound=[];
iFoundCount=0;
for(var q=0;q<aCurrentContext.length;q++)
{
var aElements;
if(sAttrSelectorTagName=='*')
{
aElements=vp.ui.getAllChildren(aCurrentContext[q]);
}
else
{
aElements=aCurrentContext[q].getElementsByTagName(sAttrSelectorTagName);
}
for(var p=0;p<aElements.length;p++)
{
aFound[iFoundCount]=aElements[p];
iFoundCount++;
}
}
aCurrentContext=[];
iCurrentContextIndex=0;
var fCheckFunction;
switch(sAttrOperator)
{
case'=':
fCheckFunction=function $vpfn_h8HFWf1hlF5LUT1bXE6UTg371$37(e){if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}return(e.getAttribute(sAttrName)==sAttrValue);};
break;
case'~':
fCheckFunction=function $vpfn_h8HFWf1hlF5LUT1bXE6UTg374$37(e){if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}return(e.getAttribute(sAttrName).match(new RegExp('\\b'+sAttrValue+'\\b')));};
break;
case'|':
fCheckFunction=function $vpfn_h8HFWf1hlF5LUT1bXE6UTg377$37(e){if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}return(e.getAttribute(sAttrName).match(new RegExp('^'+sAttrValue+'-?')));};
break;
case'^':
fCheckFunction=function $vpfn_h8HFWf1hlF5LUT1bXE6UTg380$37(e){if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}return(e.getAttribute(sAttrName).indexOf(sAttrValue)===0);};
break;
case'$':
fCheckFunction=function $vpfn_h8HFWf1hlF5LUT1bXE6UTg383$37(e){if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}return(e.getAttribute(sAttrName).lastIndexOf(sAttrValue)===e.getAttribute(sAttrName).length-sAttrValue.length);};
break;
case'*':
fCheckFunction=function $vpfn_h8HFWf1hlF5LUT1bXE6UTg386$37(e){if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}return(e.getAttribute(sAttrName).indexOf(sAttrValue)>-1);};
break;
default:

fCheckFunction=function $vpfn_h8HFWf1hlF5LUT1bXE6UTg390$37(e){if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}return e.getAttribute(sAttrName);};
break;
}
aCurrentContext=[];
iCurrentContextIndex=0;
for(var l=0;l<aFound.length;l++)
{
if(fCheckFunction(aFound[l]))
{
aCurrentContext[iCurrentContextIndex]=aFound[l];
iCurrentContextIndex++;
}
}
continue;
}

if(!aCurrentContext[0])
{
return[];
}


sTagName=oToken;
aFound=[];
iFoundCount=0;
for(var m=0;m<aCurrentContext.length;m++)
{
var aTagOnlyElements=aCurrentContext[m].getElementsByTagName(sTagName);
for(var n=0;n<aTagOnlyElements.length;n++)
{
aFound[iFoundCount]=aTagOnlyElements[n];
iFoundCount++;
}
}
aCurrentContext=aFound;
}
return aCurrentContext;
};







vp.ui.getBySelector=function $vpfn_EunNm$DNSf83oJo39WAeOw435$22(sSelector)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
if(document.querySelectorAll)
{
return document.querySelectorAll(sSelector);
}


if(!document.getElementsByTagName)
{
return[];
}

return vp.ui.getChildrenBySelector(document,sSelector);
};











vp.ui.createElement=function $vpfn_hb20yq8VtBQoGBoPcMp95A461$22(sTagName,oAttributes,vCssStringOrPropertyMap,oDocument)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
oDocument=oDocument||document;

var oElem=oDocument.createElement(sTagName);

if(oAttributes)
{
for(var sAttr in oAttributes)
{



if(typeof(oElem[sAttr])=="undefined")
{
oElem.setAttribute(sAttr,oAttributes[sAttr]);
}
else if(sAttr=="style"&&!vCssStringOrPropertyMap)
{
vCssStringOrPropertyMap=oAttributes[sAttr];
}
else if(sAttr=="class")
{
oElem.className=oAttributes[sAttr];
}
else
{
oElem[sAttr]=oAttributes[sAttr];
}
}
}

if(vCssStringOrPropertyMap)
{
vp.ui.setStyle(oElem,vCssStringOrPropertyMap);
}

return oElem;
};










vp.ui.createNamedElement=function $vpfn_n3xinF3CmvdSxmCon3N3YQ510$27(sTagName,sName)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
var oElement;
try{

oElement=document.createElement('<'+sTagName+' name="'+sName+'"/>');

if(!oElement||oElement.tagName!=sTagName.toUpperCase()||oElement.name!=sName)
{
throw new Error("not IE, bomb out and use W3C standard");
}
}
catch(ex)
{

oElement=document.createElement(sTagName);
oElement.name=sName;
}

return oElement;
};







vp.ui.createElementFromHTML=function $vpfn_DFwwkSDOWBwhV6Ue7RGVxQ538$30(sHTML)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
var oTemp=document.createElement("DIV");
oTemp.innerHTML=sHTML;
var oInner=oTemp.firstChild;
vp.ui.removeFromDOM(oInner);
return oInner;
};










vp.ui.getElementByAttribute=function $vpfn_wA0X8wRmYWX2H4DvCUQGOg556$30(sAttribute,sValue,oRootNode)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
if(!oRootNode)
{
oRootNode=vp.ui.getRootElement();
}

if(oRootNode.nodeType==1)
{
if(oRootNode.getAttribute(sAttribute)==sValue)
{
return oRootNode;
}

for(var i=0;i<oRootNode.childNodes.length;i++)
{
var oRet=vp.ui.getElementByAttribute(sAttribute,sValue,oRootNode.childNodes[i]);
if(oRet)
{
return oRet;
}
}
}

return null;
};










vp.ui.collectElementsByAttribute=function $vpfn_rCYgjApwxfHAEzb88aEPeg592$35(oRootElement,sAttribute)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
var oCollection={};

var fnRecurse=function $vpfn_reJ1aX$y610YAQtG8V3dpQ596$20(oElement)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
if(oElement.nodeType==1)
{
var sAttrVal=oElement.getAttribute(sAttribute);
if(sAttrVal)
{
oCollection[sAttrVal]=oElement;
}

for(var i=0;i<oElement.childNodes.length;i++)
{
fnRecurse(oElement.childNodes[i]);
}
}
};

fnRecurse(oRootElement);

return oCollection;
};


vp.ui.forAllChildren=function $vpfn_xjpTjAlj59KnNk02gkTqBg619$23(oNode,fnAction)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
fnAction(oNode);

var iLen=oNode.childNodes.length;
for(var i=0;i<iLen;i++)
{
vp.ui.forAllChildren(oNode.childNodes[i],fnAction);
}
};







vp.ui.getSpecifiedAttributes=function $vpfn_OgnlwbYrnSWow5ycYM4bPA636$31(oNode)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
var aAttributes=[];
for(var i=0;i<oNode.attributes.length;i++)
{
if(oNode.attributes[i].specified)
{
aAttributes.add(oNode.attributes[i]);
}
}

return aAttributes;
};







vp.ui.addClass=function $vpfn_tYwCo2p_Atrfhl1wx5wlew656$17(vElement,sClass){if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}


vElement=vp.core.getElement(vElement,"addClass");


if(!vp.ui.hasClass(vElement,sClass))
{

var aClasses=vElement.className.split(/\s+/g);


aClasses[aClasses.length]=sClass;


vElement.className=aClasses.join(" ");
}
};








vp.ui.hasClass=function $vpfn_k_Ds3rVe5cGxyakLsjkTqg682$17(vElement,sClass){if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}


vElement=vp.core.getElement(vElement,"vp.ui.hasClass");


if(!vElement.className)
{
return false;
}


var aClasses=vElement.className.split(/\s+/g);;


for(var i=0;i<aClasses.length;i++)
{
if(aClasses[i]==sClass)
{
return true;
}
}


return false;
};







vp.ui.removeClass=function $vpfn_Z8cgjzBb0iiFfd1RAtGVgg715$20(vElement,sClass)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}

vElement=vp.core.getElement(vElement,"vp.ui.removeClass");


var aClasses=vElement.className.split(/\s+/g);;


for(var i=0;i<aClasses.length;i++)
{
if(aClasses[i]==sClass)
{
aClasses[i]="";
}
}


vElement.className=aClasses.join(" ");
};









vp.ui.setStyle=function $vpfn_Jk6lZmECr8g$Yu5QMBLejg744$17(vElement,vCssStringOrPropertyMap,bClearExistingStyles)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}

var oElement=vp.core.getElement(vElement,"vp.ui.setStyle");

if(!vCssStringOrPropertyMap)
{
vElement.cssText="";
return;
}

var oPropertyMap;

if(typeof(vCssStringOrPropertyMap)=="string")
{
var oCss=new vp.web.CssString(vCssStringOrPropertyMap);
oPropertyMap=oCss.items;
}
else if(typeof(vCssStringOrPropertyMap)=="object")
{
oPropertyMap=vCssStringOrPropertyMap;
}

if(bClearExistingStyles)
{
oElement.cssText="";
}

for(var sProp in oPropertyMap)
{
vp.ui.setStyleValue(oElement,sProp,oPropertyMap[sProp]);
}
};











vp.ui.setStyleValue=function $vpfn_Nc3HMqzBYXvrXmDU0KqoUQ788$22(vElement,sProperty,sValue)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}

vElement=vp.core.getElement(vElement,"vp.ui.setStyleValue");

sProperty=vp.ui.convertCssPropertyToCssFormat(sProperty);

switch(sProperty.toLowerCase())
{
case"float":
case"cssfloat":
case"stylefloat":
vElement.style.cssFloat=sValue;
vElement.style.styleFloat=sValue;
break;
case"opacity":
vp.ui.setOpacity(vElement,sValue);
break;
case"boxShadow":

vElement.style["box-shadow"]=sValue;
vElement.style["-moz-box-shadow"]=sValue;
vElement.style["-webkit-box-shadow"]=sValue;
break;
case"borderRadius":

vElement.style["border-radius"]=sValue;
vElement.style["-moz-border-radius"]=sValue;
vElement.style["-webkit-border-radius"]=sValue;
break;
case"borderTopRightRadius":

vElement.style["border-top-right-radius"]=sValue;
vElement.style["-moz-border-radius-topright"]=sValue;
vElement.style["-webkit-border-top-right-radius"]=sValue;
break;
case"borderBottomRightRadius":

vElement.style["border-bottom-right-radius"]=sValue;
vElement.style["-moz-border-radius-bottomright"]=sValue;
vElement.style["-webkit-border-bottom-right-radius"]=sValue;
break;
case"borderTopLeftRadius":

vElement.style["border-top-left-radius"]=sValue;
vElement.style["-moz-border-radius-topleft"]=sValue;
vElement.style["-webkit-border-top-left-radius"]=sValue;
break;
case"borderBottomLeftRadius":

vElement.style["border-bottom-left-radius"]=sValue;
vElement.style["-moz-border-radius-bottomleft"]=sValue;
vElement.style["-webkit-border-bottom-left-radius"]=sValue;
break;
case"cursor":
var sParsedValue=sValue?sValue.toLowerCase():"";
if(sParsedValue=="pointer"||sParsedValue=="hand")
{
vElement.style.cursor=document.all?"hand":"pointer";
}
else
{
vElement.style.cursor=sValue;
}
break;
case"width":
case"height":
case"left":
case"top":
case"right":
case"bottom":
case"margin":
case"margintop":
case"marginleft":
case"marginright":
case"marginbottom":
case"padding":
case"paddingtop":
case"paddingleft":
case"paddingright":
case"paddingbottom":
case"border":
case"bordertopwidth":
case"borderleftwidth":
case"borderrightwidth":
case"borderbottomwidth":
if(/^[-]*[\d\.]+$/.test(sValue))
{
sValue+="px";
}
vElement.style[sProperty]=sValue;
break;
default:
vElement.style[sProperty]=sValue;
break;
}
};








vp.ui.removeStyle=function $vpfn_68k7AQ9z9oTCeXn8r0xdmg893$20(vElement,vStyles)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
var oElement=vp.core.getElement(vElement,"vp.ui.removeStyle");

if(vp.core.isArray(vStyles))
{
for(var i=0;i<vStyles.length;i++)
{
vp.ui.removeStyleValue(oElement,vStyles[i]);
}
}
else
{
vp.ui.removeStyleValue(oElement,vStyles);
}
};






vp.ui.clearStyle=function $vpfn_BIIK5KsqoaIlXEigtTu_hw915$19(vElement)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
var oElement=vp.core.getElement(vElement,"vp.ui.removeStyle");
oElement.cssText="";
};








vp.ui.removeStyleValue=function $vpfn_wzLXTFJNa9Nr$0wtvrni0A928$25(vElement,sStyle)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
var oElement=vp.core.getElement(vElement,"vp.ui.removeStyle");

var oCss=new vp.web.CssString(oElement.style.cssText);

var sCssStyle=vp.ui.convertCssPropertyToStringFormat(sStyle);

oCss.removeItem(sCssStyle);
oCss.removeItem(sCssStyle.toUpperCase());

var sVal=oCss.toString();

if(sVal.length===0)
{
oElement.removeAttribute("style");
}
else
{
oElement.style.cssText=oCss.toString();
}
};







vp.ui.removeStyleRecursive=function $vpfn_zaIYfq9T$d9E0YsSBPxHSQ957$29(oNode,sStyle)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
if(oNode.nodeType==1)
{
vp.ui.removeStyleValue(oNode,sStyle);

var oChildren=oNode.childNodes;
var iLen=oChildren.length;
for(var i=0;i<iLen;i++)
{
vp.ui.removeStyleRecursive(oChildren[i],sStyle);
}
}
};











vp.ui.getCurrentStyle=function $vpfn_ZJ7RI38o3veO1vbyaLjnjw982$24(vElement,sProperty)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}

vElement=vp.core.getElement(vElement,"vp.ui.getCurrentStyle");

var oDocument=vElement.ownerDocument;

var value=null;

if(document.all&&sProperty=="opacity"&&vElement.filters)
{
value=1;
try
{
value=vElement.filters.item("DXImageTransform.Microsoft.Alpha").opacity/100;
}
catch(e)
{
try
{
value=vElement.filters.item("alpha").opacity/100;
}
catch(e){}
}
}
else if(vElement.style[sProperty])
{
value=vElement.style[sProperty];
}
else if(vElement.currentStyle&&vElement.currentStyle[sProperty])
{
value=vElement.currentStyle[sProperty];
}
else if(oDocument.defaultView&&oDocument.defaultView.getComputedStyle)
{

var oComputedStyle=oDocument.defaultView.getComputedStyle(vElement,"");
if(oComputedStyle)
{

value=oComputedStyle.getPropertyValue(vp.ui.convertCssPropertyToStringFormat(sProperty))||null;
}
}


if(sProperty=="fontWeight")
{
if(value==400)
{
value="normal";
}
else if(value==700)
{
value="bold";
}
}

if(value&&!document.all&&sProperty=="textAlign")
{
value=value.replace("-moz-","");
}

return value;
};


vp.ui.convertCssPropertyToStringFormat=$.camelToDashCase;


vp.ui.convertCssPropertyToCssFormat=$.dashToCamelCase;







vp.ui.getCssRule=function $vpfn_b2cCERdUjvx3PO_Xk$MguA1059$19(sSelectorText,oDocument)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
if(!oDocument)
{
oDocument=document;
}

if(!oDocument.styleSheets)
{
return null;
}

sSelectorText=sSelectorText.toLowerCase();

for(var i=0;i<oDocument.styleSheets.length;i++)
{


try
{
var aRules=document.all?oDocument.styleSheets[i].rules:oDocument.styleSheets[i].cssRules;
if(aRules&&aRules.length)
{
for(var j=0;j<aRules.length;j++)
{
if(aRules[j]&&aRules[j].selectorText&&aRules[j].selectorText.toLowerCase()==sSelectorText)
{
return aRules[j];
}
}
}
}
catch(ex)
{
}
}

return null;
};












vp.ui.getRect=function $vpfn_wuJ5uIKC26EXrc$Ou2rZ1Q1110$16(vElement)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
vElement=vp.core.getElement(vElement,"vp.ui.getRect");

return $(vElement).clientRect();
};








vp.ui.getTop=function $vpfn_O0AgjrEjAmRWG1OL6eUScw1124$15(vElement)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}

vElement=vp.core.getElement(vElement,"vp.ui.getTop");

return vp.ui.getRect(vElement).top;
};








vp.ui.getLeft=function $vpfn_PTLHnXnjLvtXeUS64yMiXQ1139$16(vElement)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}

vElement=vp.core.getElement(vElement,"vp.ui.getLeft");

return vp.ui.getRect(vElement).left;
};








vp.ui.getHeight=function $vpfn_J4jzmJWW4eeeaU7$jVgiQw1154$18(vElement)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}

vElement=vp.core.getElement(vElement,"vp.ui.getHeight");


return vElement.offsetHeight;
};








vp.ui.getWidth=function $vpfn_HktsGqxE4RcSLWSlgKSwhw1170$17(vElement)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}

vElement=vp.core.getElement(vElement,"vp.ui.getWidth");


return vElement.offsetWidth;
};








vp.ui.getScrollRect=function $vpfn_ZtXxnVLngxyMBkATxTG8wg1186$22(vElement)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
vElement=vp.core.getElement(vElement,"vp.ui.getScrollRect");

var oRet=vp.ui.getRect(vElement);
var oScrollOffset=vp.ui.getScrollOffset();
oRet.width+=oScrollOffset.width;
oRet.height+=oScrollOffset.height;

return oRet;
};










vp.ui.isPointInRect=function $vpfn_JNd8A$RJg1gM5S15FIQSaw1207$22(iX,iY,oRect)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}

if(typeof iX!="number")
{
throw new Error("vp.ui.isPointInRect(): The x-coordinate must be a number.");
}
else if(typeof iY!="number")
{
throw new Error("vp.ui.isPointInRect(): The y-coordinate must be a number.");
}
else if(!oRect||typeof oRect.left!="number"||typeof oRect.top!="number")
{
throw new Error("vp.ui.isPointInRect(): Invalid rectangle passed in.");
}


return((iX>=oRect.left)&&(iX<=oRect.left+oRect.width)&&(iY>=oRect.top)&&(iY<=oRect.top+oRect.height));
};









vp.ui.expandRect=function $vpfn_TAjqAbd2AR4oBVnY$pd0VQ1235$19(oRect,iExpandBy)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
var oNewRect={
left:oRect.left-iExpandBy,
top:oRect.top-iExpandBy,
width:oRect.width+(iExpandBy*2),
height:oRect.height+(iExpandBy*2)
};

oNewRect.right=oNewRect.left+oNewRect.width;
oNewRect.bottom=oNewRect.top+oNewRect.height;

return oNewRect;
};









vp.ui.moveTo=function $vpfn_i87sABWkCq70sxjiEIjHTw1258$15(vElement,iLeft,iTop)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}

vElement=vp.core.getElement(vElement,"vp.ui.moveTo");


if(typeof iLeft!="number")
{
throw new Error("Call to vp.ui.moveTo() with an invalid X coordinate.");
}
else if(typeof iTop!="number")
{
throw new Error("Call to vp.ui.moveTo() with an invalid Y coordinate.");
}


if(vp.ui.getCurrentStyle(vElement,"position")!="absolute"){
throw new Error("vp.ui.moveTo(): Can't move an element that isn't absolutely positioned.");
}


vElement.style.top=iTop+"px";
vElement.style.left=iLeft+"px";
};









vp.ui.resizeTo=function $vpfn_xjhDyAK4dNXXMVseaUIvJw1291$17(vElement,iWidth,iHeight)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}

vElement=vp.core.getElement(vElement,"vp.ui.resizeTo");


if(typeof iWidth!="number")
{
throw new Error("Call to vp.ui.resizeTo() with an invalid width.");
}
else if(typeof iHeight!="number")
{
throw new Error("Call to vp.ui.resizeTo() with an invalid height/");
}


vElement.style.width=iWidth+"px";
vElement.style.height=iHeight+"px";
};








vp.ui.setHeight=function $vpfn_vdjiFVxEdSVfiIvWNeYqcg1318$18(vElement,iHeight)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}

vElement=vp.core.getElement(vElement,"vp.ui.setHeight");


if(typeof iHeight!="number")
{
throw new Error("Call to vp.ui.setHeight() with an invalid height parameter.");
}


vElement.style.height=iHeight+"px";
};








vp.ui.setMinHeight=function $vpfn_RSn$KJKGOS2i47FTaGPumg1340$21(vElement,iHeight)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}

vElement=vp.core.getElement(vElement,"vp.ui.setMinHeight");


if(typeof iHeight!="number")
{
throw new Error("Call to vp.ui.setHeight() with an invalid height parameter.");
}


vElement.style.minHeight=iHeight+"px";
};








vp.ui.setWidth=function $vpfn_ZzavzXaTtdWODNy3hrsEuA1362$17(vElement,iWidth)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}

vElement=vp.core.getElement(vElement,"setWidth");


if(typeof iWidth!="number")
{
throw new Error("Call to vp.ui.setWidth() with an invalid width parameter.");
}


vElement.style.width=iWidth+"px";
};







vp.ui.insertFirstElement=function $vpfn_eTysjCxfjfP0DCTJm_J$yA1383$27(oTarget,oElement)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
var oFirstElement=oTarget.childNodes.length>=1?oTarget.childNodes[0]:null;
oTarget.insertBefore(oElement,oFirstElement);
};







vp.ui.insertAfter=function $vpfn_p0AetRQu17a8$Eg9u0DKvQ1395$20(oNode,oTarget)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
if(oTarget.nextSibling)
{
oTarget.parentNode.insertBefore(oNode,oTarget.nextSibling);
}
else
{
oTarget.parentNode.appendChild(oNode);
}
};










vp.ui.moveToRoot=function $vpfn_O7GBG3m0H0cUdF5MwLS6mg1416$19(vElement,bAddToDocumentStart)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}

vElement=vp.core.getElement(vElement,"vp.ui.moveToRoot");

if(vElement.parentNode!=document.body)
{
var oParent=vElement.parentNode;
oParent.removeChild(vElement);

if(bAddToDocumentStart)
{
vp.ui.insertFirstElement(top.document.body,vElement);
}
else
{
document.body.appendChild(vElement);
}
}
};









vp.ui.scrollTo=function $vpfn_6Z7W96fjl9yeDkRhWr4O$Q1445$18(vElement)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}

vElement=vp.core.getElement(vElement,"vp.ui.scrollTo");

var oRec=vp.ui.getRect(vElement);

var iTopDif=oRec.top-document.body.scrollTop;
if(iTopDif<0)
{
if(window.scrollBy)
{
window.scrollBy(0,iTopDif);
}
else
{
vElement.scrollIntoView();
}
}

var iBottomDif=oRec.bottom-(document.body.scrollTop+vp.ui.getClientHeight());

if(iBottomDif>0)
{
if(window.scrollBy)
{
window.scrollBy(0,iBottomDif);
}
else
{
vElement.scrollIntoView();
}
}
};






vp.ui.scrollToCenterElement=function $vpfn__iGGHimYOIcYwkIsAQxfrw1485$30(vElement)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
vElement=vp.core.getElement(vElement,"vp.ui.scrollToCenterElement");

var oRect=vp.ui.getRect(vElement);
var viewport=vp.ui.getViewportSize();
var scroll=vp.ui.getScrollOffset();

var dy=oRect.top+((oRect.height-viewport.height)/2)-scroll.top;
var dx=oRect.left+((oRect.width-viewport.width)/2)-scroll.left;

window.scrollBy(dx,dy);
};









vp.ui.getCoord=function $vpfn_XEbNuapqRjJRgDnLgNrtnA1507$17(oObj,sCoord)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
oObj=oObj.style?oObj.style:oObj;

if(sCoord=="top"||sCoord=="left")
{
return parseInt(oObj[sCoord]);
}
else if(sCoord=="right")
{
return parseInt(oObj.left)+parseInt(oObj.width);
}
else if(sCoord=="bottom")
{
return parseInt(oObj.top)+parseInt(oObj.height);
}
};







vp.ui.getLocalRect=function $vpfn_VF9gIX5fzLyhDJc5HEa1jA1531$21(oObj)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
var oRect={};
vp.ui.applyPosition(oObj,oRect);
oRect.right=oRect.left+oRect.width;
oRect.bottom=oRect.top+oRect.height;

return oRect;
};








vp.ui.setPositionGlobal=function $vpfn_8TodklDMzyVVC4cg$whanQ1548$26(oElement,oPosition)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
oElement.style.top=oPosition.top+"px";
oElement.style.left=oPosition.left+"px";


var oRect=vp.ui.getRect(oElement);



if(oRect.top!=oPosition.top||oRect.left!=oPosition.left)
{
oElement.style.top=(oPosition.top-(oRect.top-oPosition.top))+"px";
oElement.style.left=(oPosition.left-(oRect.left-oPosition.left))+"px";
}
};








vp.ui.applyPosition=function $vpfn_G$o9Op1hcfqINL9st9Y3Lg1572$22(oObj1,oObj2)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
oObj1=oObj1.style?oObj1.style:oObj1;
oObj2=oObj2.style?oObj2.style:oObj2;

var suffix=0;

if(oObj2.zIndex)
{
suffix="px";
}

oObj2.top=parseInt(oObj1.top)+suffix;
oObj2.left=parseInt(oObj1.left)+suffix;
oObj2.width=parseInt(oObj1.width)+suffix;
oObj2.height=parseInt(oObj1.height)+suffix;
};








vp.ui.getStyleRect=function $vpfn_lnkaKNJo8FGCpX1pnGf68A1597$21(oObj)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
var rect={};
rect.top=(oObj.style)?parseInt(oObj.style.top):oObj.top;
rect.left=(oObj.style)?parseInt(oObj.style.left):oObj.left;
rect.width=(oObj.style)?parseInt(oObj.style.width):oObj.width;
rect.height=(oObj.style)?parseInt(oObj.style.height):oObj.height;
rect.right=rect.left+rect.width;
rect.bottom=rect.top+rect.height;
return rect;
};








vp.ui.applyStyleRect=function $vpfn_Y5MnqlDIsN3rsu0YJE4aCA1616$23(oObj1,oObj2)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
var styleRect=vp.ui.getStyleRect(oObj1);
vp.ui.setStyleValue(oObj2,"top",styleRect.top);
vp.ui.setStyleValue(oObj2,"left",styleRect.left);
vp.ui.setStyleValue(oObj2,"width",styleRect.width);
vp.ui.setStyleValue(oObj2,"height",styleRect.height);
};





vp.ui.disableTextButton=function $vpfn_VU1hC0Led8nFx7mNkAfHpg1629$26(vButton)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
vp.ui._enableTextButton(vButton,false,"vp.ui.disableTextButton");
};





vp.ui.enableTextButton=function $vpfn_oY6iwbsXDPHetaClDiCbgA1638$25(vButton)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
vp.ui._enableTextButton(vButton,true,"vp.ui.enableTextButton");
};




vp.ui._enableTextButton=function $vpfn_4$cU7EArtsabL$ZdSrl5Ug1646$26(vButton,bEnable,sMethodName)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
var oButton=vp.core.getElement(vButton,sMethodName);
var sLinkId=oButton.id+"_link";
var sDisabledId=oButton.id+"_disabled";

document.getElementById(sLinkId).style.display=bEnable?"":"none";
document.getElementById(sDisabledId).style.display=bEnable?"none":"";
};







vp.ui.setOpacity=function $vpfn_aiAZHS_i9q2vgtXBJ4zOaQ1662$19(vElement,fOpacity)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
var oObj=vp.core.getElement(vElement,"vp.ui.setOpacity");

if(typeof oObj.style.opacity!="undefined")
{
if(fOpacity==1)
{
oObj.style.opacity="";
return;
}
oObj.style.opacity=fOpacity;
}
else
{
var oFilter=new vp.ui._IEFilterString(oObj.style.filter);

if(fOpacity==1)
{
oFilter.removeItem("Alpha");
}
else
{
try
{


if(!oObj.currentStyle.hasLayout)
{
if(!oObj.style.zoom)
{
oObj.style.zoom=1;
}
}
}catch(e){}

var iOpacity=fOpacity*100;

oFilter.setItem("Alpha",{enabled:1,opacity:iOpacity});
}

oObj.style.filter=oFilter.toString();
}
};


vp.ui._IEFilterString=function $vpfn_ynQKYecEapiGDzPcExkX2Q1708$24(sFilters)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
var _oFilters={};

var init=function $vpfn_u9iFWTPzlCQSDbtc9lQz0Q1712$15()
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
sFilters=sFilters.replace(/\s/gi,"");
var aFilters=sFilters.split("progid:DXImageTransform.Microsoft.");

for(var i=0;i<aFilters.length;i++)
{
if(aFilters[i].length>1)
{
var iParamListStart=aFilters[i].indexOf("(");
var sFilterName=aFilters[i].substring(0,iParamListStart);
var sSubParams=aFilters[i].substring(iParamListStart+1,aFilters[i].indexOf(")"));
var aSubParams=sSubParams.split(",");
var oFilterObj={};
for(var j=0;j<aSubParams.length;j++)
{
var iEqualsPos=aSubParams[j].indexOf("=");
var aPair=[];
aPair.add(aSubParams[j].substr(0,iEqualsPos));
aPair.add(aSubParams[j].substr(iEqualsPos+1));

oFilterObj[aPair[0]]=aPair[1];
}

_oFilters[sFilterName]=oFilterObj;
}
}
};

this.setItem=function $vpfn_Dz8zST_PlRBSkiOVRwptBg1741$19(sFilterName,oParams)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
_oFilters[sFilterName]=oParams;
};

this.removeItem=function $vpfn_p4n3egn2A4$O06K9qYkYKQ1746$22(sFilterName)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
if(_oFilters[sFilterName])
{
delete _oFilters[sFilterName];
}
};

this.toString=function $vpfn_STuIVemEYvDclkzRKLzvLQ1754$20()
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
var aOut=[];
var sSpace="";
for(var sProp in _oFilters)
{
aOut.add(sSpace+"progid:DXImageTransform.Microsoft."+sProp);
aOut.add("(");

var sComma="";
for(var sSubProp in _oFilters[sProp])
{
aOut.add(sComma+sSubProp+"="+_oFilters[sProp][sSubProp]);
sComma=",";
}
aOut.add(")");

sSpace=" ";
}

return aOut.join("");
};

init();
};






vp.ui.reactivateClickableButton=function $vpfn_kVJi6M0jiY6zni0qUEPxGw1785$34(sElementNamespaceId){if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
vp.ui.expandAndCollapse('imgEnabledButton'+sElementNamespaceId,'imgDisabledButton'+sElementNamespaceId);
};






vp.ui.getClientHeight=function $vpfn_FSXVr7VHAz9LmW3xDgKyaQ1794$24(){if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}


if(typeof window.innerHeight!="undefined"){
return window.innerHeight;


}else if(document.documentElement&&
typeof document.documentElement.clientHeight!="undefined"&&
document.documentElement.clientHeight>0){

return document.documentElement.clientHeight;


}else if(document.body&&typeof document.body.clientHeight!="undefined"){
return document.body.clientHeight;
}else{
return-1;
}
};






vp.ui.getClientWidth=function $vpfn_9xWG59hRNDBJ_EG1iz4MwA1820$23(){if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}


if(typeof window.innerWidth!="undefined"){
return window.innerWidth;


}else if(document.documentElement&&typeof document.documentElement.clientWidth!="undefined"&&document.documentElement.clientWidth!==0){
return document.documentElement.clientWidth;


}else if(document.body&&typeof document.body.clientWidth!="undefined"){
return document.body.clientWidth;
}else{
return-1;
}
};








vp.ui.getViewportSize=function $vpfn_hd7wiTnBRuhF5MzR$TfyHw1845$24(oWindow)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
var oSize={};
oWindow=oWindow||window;

if(self.innerHeight)
{
oSize.width=oWindow.innerWidth;
oSize.height=oWindow.innerHeight;
}
else if(oWindow.document.documentElement&&oWindow.document.documentElement.clientHeight)

{
oSize.width=oWindow.document.documentElement.clientWidth;
oSize.height=oWindow.document.documentElement.clientHeight;
}
else
{
oSize.width=oWindow.document.body.clientWidth;
oSize.height=oWindow.document.body.clientHeight;
}

return oSize;
};






vp.ui.getScrollOffset=function $vpfn_mWRhU_jxmkzUgIMuYMp11Q1875$24(oWindow)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
var oPos={};
oWindow=oWindow||window;

if(oWindow.pageYOffset)
{
oPos.left=oWindow.pageXOffset;
oPos.top=oWindow.pageYOffset;
}
else if(oWindow.document.documentElement&&oWindow.document.documentElement.scrollTop)

{
oPos.left=oWindow.document.documentElement.scrollLeft;
oPos.top=oWindow.document.documentElement.scrollTop;
}
else
{
oPos.left=oWindow.document.body.scrollLeft;
oPos.top=oWindow.document.body.scrollTop;
}

return oPos;
};






vp.ui.getPageSize=function $vpfn_DuFEn9Y1d26MLjJ3t1KHYw1905$20(oWindow)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
oWindow=oWindow||window;
var oRootElement=vp.ui.getRootElement(oWindow.document);

if(!oRootElement||oRootElement.scrollHeight<oWindow.document.body.scrollHeight)
{
oRootElement=oWindow.document.body;
}

var oRet={width:oRootElement.scrollWidth,height:oRootElement.scrollHeight};

if(oRootElement.clientWidth>oRootElement.scrollWidth)
{
oRet.width=oRootElement.clientWidth;
}

if(oRootElement.clientHeight>oRootElement.scrollHeight)
{
oRet.height=oRootElement.clientHeight;
}

return oRet;
};








vp.ui.getContentSize=function $vpfn_GK_Fq2Z3pSswvt5QIbMcZQ1937$23(oWindow,bExcludeScrollbars)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
oWindow=oWindow||window;




var sOverflow;
if(bExcludeScrollbars)
{
sOverflow=oWindow.document.documentElement.style.overflow;
oWindow.document.documentElement.style.overflow="hidden";
}

var oSize={width:0,height:0};

var addMargin=function $vpfn_RFmM0zqqIh3KdVh1FDpNww1953$20(oNode,sStyle,sRectProp,oRect)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
var iMargin=parseInt(vp.ui.getCurrentStyle(oNode,sStyle));
if(iMargin)
{
oRect[sRectProp]+=iMargin;
}
};

var bIsQuirksMode=vp.ui.isQuirksMode();

var gatherSize=function $vpfn_kyFfRuva2XN7gQQ77TP2tA1964$21(oNode,bIncludeWidth,bIncludeHeight)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
if(oNode.nodeType!=1)
{
return;
}

var bIsBody=oNode.tagName=="BODY";




if(!bIsQuirksMode||!bIsBody)
{
try
{
var oRect=vp.ui.getRect(oNode);
}
catch(ex)
{
return;
}


if(oRect.height===0&&oRect.width===0)
{
return;
}

if(bIsBody)
{
addMargin(oNode,"marginRight","right",oRect);
addMargin(oNode,"marginBottom","bottom",oRect);
}

if(bIncludeHeight)
{
oSize.height=Math.max(oRect.bottom,oSize.height);
}

if(bIncludeWidth)
{
oSize.width=Math.max(oRect.right,oSize.width);
}


if(vp.ui.getCurrentStyle(oNode,"overflowX")!="visible"&&
(vp.ui.getCurrentStyle(oNode,"height")!="auto"||vp.ui.getCurrentStyle(oNode,"maxHeight")!="none"))
{
bIncludeHeight=false;
}


if(vp.ui.getCurrentStyle(oNode,"overflowY")!="visible"&&
(vp.ui.getCurrentStyle(oNode,"width")!="auto"||vp.ui.getCurrentStyle(oNode,"maxWidth")!="none"))
{
bIncludeWidth=false;
}


if(!bIncludeHeight&&!bIncludeWidth)
{
return;
}
}


if(oNode.tagName!=="OBJECT")
{
var iLen=oNode.childNodes.length;
for(var i=0;i<iLen;i++)
{
gatherSize(oNode.childNodes[i],bIncludeWidth,bIncludeHeight);
}
}
};

gatherSize(oWindow.document.body,true,true);

if(bExcludeScrollbars)
{
oWindow.document.documentElement.style.overflow=sOverflow;
}

return oSize;
};






vp.ui.centerElement=function $vpfn_jbY6u39TNUlVk$0WCbCoLA2056$22(vElement)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
vElement=vp.core.getElement(vElement,"vp.ui.centerElement");

var viewport=vp.ui.getViewportSize();
var scroll=vp.ui.getScrollOffset();

vp.ui.moveTo(vElement,
(viewport.width-vp.ui.getWidth(vElement))/2+scroll.left,
(viewport.height-vp.ui.getHeight(vElement))/2+scroll.top);
};






vp.ui.preloadImages=function $vpfn_hfeQDV3l7NW$ua5M4PjcdA2073$22(aImages)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
try
{
var iLen=aImages.length;
for(var i=0;i<iLen;i++)
{
var oImg=document.createElement("IMG");

if(window.isDebug)
{
var sSrc=aImages[i];
oImg.onerror=function $vpfn_C6vJsKRXA3OJ$sXY2idvDg2085$31(){if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}throw new Error("Debug only error: An attempt to preload "+sSrc+" was made, but the image couldn't be found.");};
}

oImg.src=aImages[i];
}
}
catch(ex)
{
if(window.isDebug)
{
throw ex;
}
}
};










vp.ui.preloadImageAndGetSize=$.naturalSize;












vp.ui.showAnimated=function $vpfn_ErXtQCTtbZuG9eIqmbUV$Q2122$21(oElement,iStartWidth,iStartHeight,iEndWidth,iEndHeight,bIgnoreOverflow,bBottomUp)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
if(oElement._isBeingAnimated)
{
return;
}

oElement._isBeingAnimated=true;

var sInitialWidthStyle=oElement.style.width;
var sInitialHeightStyle=oElement.style.height;

oElement.style.width=iStartWidth;
oElement.style.height=iStartHeight;
oElement.style.visibility="visible";

if(!bIgnoreOverflow)
{
var sOldOverflow=oElement.style.overflow;
oElement.style.overflow="hidden";
}

var dPercent=0;
var iMaxPercent=100;
var iDelay=10;

if(!vp.browser.isIE)
{
iDelay=20;
}

var iDuration=80;
var dStep=iMaxPercent*iDelay/iDuration;
var initialTop=parseInt(oElement.style.top);

var fnShowAni=function $vpfn_IBUkGP0cnErViR4YNwu5Zw2157$20()
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
var newHeight=iStartHeight+(iEndHeight-iStartHeight)*dPercent/iMaxPercent;
var newWidth=iStartWidth+(iEndWidth-iStartWidth)*dPercent/iMaxPercent;
if(dPercent<=iMaxPercent)
{
oElement.style.height=newHeight+"px";
oElement.style.width=newWidth+"px";
if(bBottomUp)
{
oElement.style.top=(initialTop+iEndHeight-newHeight)+"px";
}
dPercent+=dStep;
setTimeout(fnShowAni,iDelay);
}
else
{
oElement.style.height=iEndHeight+"px";
oElement.style.width=iEndWidth+"px";
if(!bIgnoreOverflow)
{
oElement.style.overflow=sOldOverflow;
}

oElement.style.width=sInitialWidthStyle;
oElement.style.height=sInitialHeightStyle;

oElement._isBeingAnimated=false;
}
};
fnShowAni();
};






vp.ui.getRootElement=function $vpfn_qBbgOpImER2xMdeJmguFJg2195$23(oDoc)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
if(!oDoc)
{
oDoc=document;
}

return oDoc.documentElement?oDoc.documentElement:oDoc.body;
};





vp.ui.getAllChildren=function $vpfn_TLNa1$aTnxvjDuDSluAKkw2209$23(oElement)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
if(!oElement)
{
return[];
}
return oElement.all?oElement.all:oElement.getElementsByTagName('*');
};






vp.ui.isScrollBarClickEvent=function $vpfn_AvPBZ2aEylVOLNKRQ$t2vw2223$30(e)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
e=vp.events.getEvent(e);

if(e.target&&(e.target.tagName.toLowerCase()=="body"||e.target.tagName.toLowerCase()=="html"))
{
var oViewRect=vp.ui.getViewportSize();
var oScrollRect=vp.ui.getPageSize();


if(oScrollRect.height>oViewRect.height)
{

if(e.pageX+20>oViewRect.width)
{
return true;
}
}


if(oScrollRect.width>oViewRect.width)
{

if(e.pageY+20>oViewRect.height)
{
return true;
}
}
}

return false;
};


vp.ui.isHorizontalScrollbarVisible=function $vpfn_J_5XaUZDGHwzionnUwXAXQ2257$37(vElement)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
var oElement=vElement?vp.core.getElement(vElement,"vp.ui.isHorizontalScrollbarVisible"):vp.ui.getRootElement();
return oElement.scrollWidth>oElement.offsetWidth;
};








vp.ui.getMaxProperty=function $vpfn_UF$joP_KQdQKoOaeDGq99g2270$23(objs,propertyString)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
var propertyArray=propertyString.split('.');

var maxValue=0;
for(var i=0;i<objs.length;i++)
{
var iArray=0;
var value=objs[i];
while(value&&propertyArray[iArray])
{
value=value[propertyArray[iArray]];
iArray=iArray+1;
}
value=parseInt(value);
if(value>maxValue)
{
maxValue=value;
}
}
return maxValue;
};










vp.ui.makeUnselectable=function $vpfn_a5VS3FRgySNNaFVkzXd$NQ2302$25(vElement,aUnselectables)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
var unselectables=[];
if(aUnselectables)
{
unselectables=aUnselectables;
}
var oElement=vp.core.getElement(vElement);

if(oElement.nodeType==1&&!(oElement.contentEditable=="true"))
{
oElement.setAttribute("unselectable","on");
vp.ui.preventDragging(oElement);
unselectables.push(oElement);

for(var i=0;i<oElement.childNodes.length;i++)
{
vp.ui.makeUnselectable(oElement.childNodes[i],unselectables);
}
}

return unselectables;
};


vp.ui.makeSelectable=function $vpfn__bE0fqN5VYRH8n2RxZb24g2327$23(unselectables)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
var len=unselectables.length;
for(var i=0;i<len;i++)
{
var oElement=unselectables[i];
oElement.removeAttribute("unselectable");
}
};







vp.ui.preventDragging=function $vpfn_s962i1pr1lH8GwLUVTlcxQ2343$24(oNode,bRecurse)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
if(oNode.nodeType==1)
{
if(oNode.tagName=="IMG")
{
if(document.all)
{
vp.events.add(oNode,"drag",vp.events.cancelEvent);
}
else
{
vp.events.add(oNode,"mousedown",vp.events.cancelEvent);
}
}

if(bRecurse)
{
for(var i=0;i<oNode.childNodes.length;i++)
{
vp.ui.preventDragging(oNode.childNodes[i],bRecurse);
}
}
}
};






vp.ui.browserSupportsPNG=function $vpfn_lFwb9nNIVGGEgyx$gabDyA2374$27()
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
return vp.browser.supportsPng;
};

var VP_UI_BLANK_IMAGE=vp.ui.imageUrl("/vp/JS-Lib/common/spacer.gif");









vp.ui.setSrcPNG=function $vpfn_0u5oS66Zr1htITu6Tsf2_w2389$18(oImg,sSrc,fnCallback)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}

if(vp.core.getBoolean(vp.web.getQueryString("admin")))
{
var oAdminURL=new vp.web.URL(sSrc,"vp.ui.setSrcPNG");
oAdminURL.setItem("admin",1);
sSrc=oAdminURL.toString();
}

vp.ui._traceImageSrc(sSrc);

$(oImg).srcPng(sSrc,fnCallback);
};









vp.ui.setSrcPNGSimple=function $vpfn_Oe0ZJ2fvPts9Wf0w2mFOqQ2412$24(oImg,sSrc)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
vp.ui._traceImageSrc(sSrc,"vp.ui.setSrcPNGSimple");

$(oImg).srcPngSimple(sSrc);
};

vp.ui._traceImageSrc=function $vpfn_5fpIOyxXnfzRR6DCy4sJZQ2419$23(sSrc,sMessage)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}

if(vp.core.getBoolean(vp.web.getQueryString("debugimg")))
{
if(sMessage)
{
sMessage="<font color=red>"+sMessage+"</font>: ";
}

var oDebugURL=new vp.web.URL(sSrc);
oDebugURL.setItem("showerr",1);
var sDebugSrc=oDebugURL.toString();
vp.debug.trace("<a href=\""+vp.web.htmlAttributeEncode(sDebugSrc)+"\" target='png_preview'><IMG border=0 src=\""+vp.web.htmlAttributeEncode(sSrc)+"\"></a>");
sMessage=sMessage||"";
vp.debug.trace(sMessage+sSrc);
vp.debug.trace("");
}
};








vp.ui.pngHackTrackMouseEvents=function $vpfn_wzEkb50sompFyI$rr09G$Q2446$32()
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
if(!vp.browser.supportsPng&&!document._pngHackMouseEventsAdded)
{
vp.events.add(document.body,"mousemove",vp.ui._pngHackMouseMoveHandler);
document._pngHackMouseEventsAdded=true;
}
};






vp.ui._pngHackMouseMoveHandler=function $vpfn_TMLYgB75c2K$4h_SBuvXKw2460$33(e)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
var oElem=document.elementFromPoint(e.clientX,e.clientY);


if(document._pngHackCurrentMouseOverElement&&oElem!=document._pngHackCurrentMouseOverElement)
{
try
{
vp.events.fireEvent(document._pngHackCurrentMouseOverElement,"mouseout");
}
catch(ex){}
}


if(oElem&&oElem.pngSrc&&oElem!=document._pngHackCurrentMouseOverElement)
{
try
{
vp.events.fireEvent(oElem,"mouseover");
}
catch(ex){}

vp.events.add(oElem,"mouseout",vp.ui._pngHackMouseOutHandler);
document._pngHackCurrentMouseOverElement=oElem;
}
};






vp.ui._pngHackMouseOutHandler=function $vpfn_wxpAZT8E1U6OdlB35dU$jg2493$32(e)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
if(e.srcElement==document._pngHackCurrentMouseOverElement)
{
vp.events.remove(document._pngHackCurrentMouseOverElement,"mouseout",vp.ui._pngHackMouseOutHandler);
document._pngHackCurrentMouseOverElement=null;
}
};







vp.ui.getRelativeURL=function $vpfn_441vcoHnr$S_qPzmqtDjiA2508$23(sURL)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
if(sURL.indexOf("http://")===0||
sURL.indexOf("https://")===0)
{
sURL=sURL.substr(8);
sURL=sURL.substr(sURL.indexOf("/"));
}


if(sURL.substr(0,1)!="/")
{
return sURL;
}

var sCurrentURL=document.location.pathname;
var aCurrent=sCurrentURL.substr(1).split("/");

var aTarget=sURL.substr(1).split("/");
var aNew=[];


while(aCurrent.length>0&&aTarget.length>0)
{
if(aCurrent[0].toLowerCase()==aTarget[0].toLowerCase())
{
aCurrent.remove(0);
aTarget.remove(0);
}
else
{
break;
}
}


for(var i=0;i<aCurrent.length-1;i++)
{
aNew.add("..");
}


for(i=0;i<aTarget.length;i++)
{
aNew.add(aTarget[i]);
}

return aNew.join("/");
};








vp.ui.isElementInDOM=function $vpfn_$JvhSYpvoYq4R35RpUdWWQ2565$23(oElement)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}

return oElement.parentNode&&
oElement.parentNode!=oElement.ownerDocument&&
oElement.parentNode.nodeType==1;
};






vp.ui.removeFromDOM=function $vpfn_XT9E0eFmqD8Sh$4E99NnsA2578$23(oElement)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
oElement.parentNode.removeChild(oElement);
};






vp.ui.removeChildren=function $vpfn_71TVkwvD5yR3GtOFi8$xPw2588$23(oContainer)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
if(oContainer&&oContainer.hasChildNodes())
{
while(oContainer.childNodes.length>=1)
{
oContainer.removeChild(oContainer.firstChild);
}
}
};









vp.ui.getFirstElementChild=function $vpfn_7_99K4Km_gVRcBsVxBIbNQ2607$29(oElement)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
for(var i=0;i<oElement.childNodes.length;i++)
{
if(oElement.childNodes[i].nodeType==1)
{
return oElement.childNodes[i];
}
}

return null;
};







vp.ui.getParentByTagName=function $vpfn_PVgWkHCi8h18AskZO0lUnw2626$27(vElement,tagName)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
vElement=vp.core.getElement(vElement).parentNode;

while(vElement&&vElement.tagName!=tagName)
{
vElement=vElement.parentNode;
}

return vElement;
};








vp.ui.isChildOf=function $vpfn_DD2j0f4NlcpsQXRCrgK0wg2645$18(oChild,oParent)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
var oTemp;
if(typeof(oChild.parentNode)!="undefined")
{
oTemp=oChild.parentNode;
}
else if(oChild.parentElement)
{
oTemp=oChild.parentElement();
}
else if(oChild.length)
{
oTemp=oChild[0];
}

while(oTemp)
{
if(oTemp==oParent)
{
return true;
}

if(oTemp.tagName&&oTemp.tagName.toLowerCase()=="body")
{
return false;
}
oTemp=oTemp.parentNode;
}

return false;
};









vp.ui.getRectWithAspectRatio=function $vpfn_auNmqsFkKuznj4fPFBdyiw2686$31(oContainerRect,fAspectRatio)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
var oRect={
top:0,
left:0,
width:oContainerRect.width,
height:oContainerRect.height
};

var fContainerAspectRatio=oContainerRect.width/oContainerRect.height;

if(fContainerAspectRatio<fAspectRatio)
{
oRect.height=Math.round(oRect.width/fAspectRatio);
}
else
{
oRect.width=Math.round(oRect.height*fAspectRatio);
}

oRect.left=(oContainerRect.width-oRect.width)/2;
oRect.top=(oContainerRect.height-oRect.height)/2;
oRect.right=oRect.left+oRect.width;
oRect.bottom=oRect.top+oRect.height;

return oRect;
};








vp.ui.doRectsIntersect=function $vpfn_SuyJl9zaJo$jof$TRKroQw2721$25(oRect1,oRect2)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
return!(oRect1.left>(oRect2.left+oRect2.width)||
(oRect1.left+oRect1.width)<oRect2.left||
oRect1.top>(oRect2.top+oRect2.height)||
(oRect1.top+oRect1.height)<oRect2.top);
};








vp.ui.isPointInsideRect=function $vpfn_CInvodKrukBuq1hI16dz6g2736$26(oPoint,oRect)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
if(oPoint.top>=oRect.top&&oPoint.top<=oRect.top+oRect.height)
{
if(oPoint.left>=oRect.left&&oPoint.left<=oRect.left+oRect.width)
{
return true;
}
}

return false;
};








vp.ui.getDistance=function $vpfn_PKXdETtpF6KAkHLIza$8xg2756$20(oPoint1,oPoint2)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}

return Math.sqrt(Math.pow(oPoint1.top-oPoint2.top,2)+Math.pow(oPoint1.left-oPoint2.left,2));
};










vp.ui.makeElementOpaqueInIE6=function $vpfn_lh57GgZfcXJJRdc88oLChw2771$31(oElement,bEnable,oTarget)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
if(vp.browser.isIE&&vp.browser.ver<7)
{
var sID=oElement.id+"_iframe_block";
var oIFrameLayer=oElement.ownerDocument.getElementById(sID);

if(!oIFrameLayer)
{
oIFrameLayer=oElement.ownerDocument.createElement("IFRAME");


vp.ui.ensureIFrameSrc(oIFrameLayer);
oIFrameLayer.style.position="absolute";
if(!oTarget)
{
oElement.appendChild(oIFrameLayer);
}
else
{
oTarget.appendChild(oIFrameLayer);
oIFrameLayer.style.left=0;
oIFrameLayer.style.top=0;
}
}

oIFrameLayer.style.width="100%";
oIFrameLayer.style.height="100%";

oIFrameLayer.style.display=bEnable?"block":"none";

oIFrameLayer.style.filter="mask()";


}
};

vp.ui.dummyIFrames={};









vp.ui.showIE6IFrame=function $vpfn_QDakt4nQ_f2y4L76$eAa$g2818$22(oElement,bShow)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
if(!vp.browser.isIE||vp.browser.ver>=7)
{

return;
}
var dummyIFrame=vp.ui.dummyIFrames[oElement.id];
if(!dummyIFrame)
{
dummyIFrame=document.createElement("IFRAME");
dummyIFrame.setAttribute("src","");


vp.ui.ensureIFrameSrc(dummyIFrame);
vp.ui.dummyIFrames[oElement.id]=dummyIFrame;
}

if(!bShow)
{
try
{
oElement.parentElement.removeChild(dummyIFrame);
}
catch(e){}
return;
}


dummyIFrame.style.zIndex=oElement.style.zIndex;
oElement.style.zIndex=oElement.style.zIndex+1;


dummyIFrame.style.position="absolute";
dummyIFrame.style.left=oElement.offsetLeft+"px";
dummyIFrame.style.top=oElement.offsetTop+"px";
dummyIFrame.style.width=oElement.offsetWidth+"px";
dummyIFrame.style.height=oElement.offsetHeight+"px";

oElement.parentElement.appendChild(dummyIFrame);
};






vp.ui.preloadScripts=function $vpfn_MDZnPaeKsojti7KOnvsiuA2865$23(preloadList)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
if(preloadList.length>0)
{
setTimeout(function $vpfn_D3kxkFA8aMLDUZJzGUeo1w2869$19()
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
if(typeof(preloadList[0])!=="undefined")
{
if(vp.browser.isIE||vp.browser.isOpera)
{
var img=new Image();
$(img).load(function $vpfn_D3kxkFA8aMLDUZJzGUeo1w2876$36(){if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}vp.ui.preloadScripts(preloadList);});
img.onerror=function $vpfn_xtk7siEpqA6EN0v1MOqRqw2877$38(){if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}vp.ui.preloadScripts(preloadList);};
img.src=preloadList[0];
}
else
{
var o=document.createElement("object");
o.data=preloadList[0];
o.width=o.height=0;
var tempName=preloadList[0];
o.onload=function $vpfn_Z1CikjW7AIzUex2Vz4Lkpw2886$35(){if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}vp.ui.preloadScripts(preloadList);};
if(document.body)
{
document.body.appendChild(o);
}
}
preloadList.remove(0);
}
},1);
}
};







vp.ui.preloadScriptAfterPageLoad=function $vpfn_RaNEG_rgKSexTPgQ_1C9KQ2904$35(preloadList)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
vp.events.runAfterLoadComplete(function $vpfn_D3kxkFA8aMLDUZJzGUeo1w2906$35(){if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}vp.ui.preloadScripts(preloadList);},20);
};







vp.ui.isQuirksMode=function $vpfn_6qYMZqsfgiNAqB4XSSwkzA2915$21()
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
if(!document.all)
{
return false;
}

return document.compatMode!="CSS1Compat";
};







vp.ui.includeCssQuirksMode=function $vpfn_FKeA$TP3waW6pLJwPiWD5w2931$29(sPath)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
if(vp.ui.isQuirksMode())
{
if(!window._quirksModeCssFiles)
{
window._quirksModeCssFiles={};
}

if(!window._quirksModeCssFiles[sPath])
{
vp.events.runAfterDOMLoadComplete(function $vpfn_D3kxkFA8aMLDUZJzGUeo1w2942$46()
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
var oLink=document.createElement("LINK");
oLink.href=sPath;
oLink.rel="stylesheet";
oLink.type="text/css";
var documentElement=document.documentElement?document.documentElement:document.body;
documentElement.appendChild(oLink);
});
}

window._quirksModeCssFiles[sPath]=true;
}
};







vp.ui.getIFrameForDocument=function $vpfn_BGNugddsBl2PT1B48ogeWg2963$29(oIFrameDocument)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
var oWin=oIFrameDocument.defaultView?oIFrameDocument.defaultView:oIFrameDocument.parentWindow;
try
{
if(oWin&&oWin.frameElement)
{
return oWin.frameElement;
}
}
catch(e)
{

}

return null;
};










vp.ui.getRootRect=function $vpfn_Zb7ggtPfs0NhBOPqH_I6bA2990$20(vElement)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}

vElement=vp.core.getElement(vElement,"vp.ui.getRootRect");


var oRect=vp.ui.getRect(vElement);


do
{
try
{

vElement=vp.ui.getIFrameForDocument(vElement.ownerDocument);
}
catch(ex)
{


vElement=null;
}

if(vElement)
{
try
{
var oFrameRect=vp.ui.getRect(vElement);


oRect.top+=oFrameRect.top;
oRect.left+=oFrameRect.left;
oRect.right+=oFrameRect.left;
oRect.bottom+=oFrameRect.top;
}
catch(ex)
{


}
}
}
while(vElement);

return oRect;
};










vp.ui.ensureIFrameSrc=function $vpfn_4MUGWRE8KwD1mTm0s3IWAQ3046$24(oIFrame)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
if(!oIFrame.src&&
vp.browser.isIE&&
window.location.protocol=="https:")
{
oIFrame.src=VP_UI_BLANK_IMAGE;
}
};








vp.ui.stripEmbeddedUrlParameters=function $vpfn_dkLyjbFr8z6Sbx2ZYWKDLw3063$35(sUrl)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
return sUrl.replace(/\/sf\/(.*)?\/\_/,"");
};










vp.ui.setImageSrcSprite=function $vpfn_g$3zJ8U0qTfvyK30y7$cHA3077$26(vImage,sSrc,bFailoverToNonSprite)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
var oImage=vp.core.getElement(vImage,"vp.ui.setImageSrcSprite");

if(!sSrc)
{
throw new Error("The specified image source was null or empty");
}

var fnFallback=function $vpfn_37HwYGHI2MioK2I5klwrJA3086$21()
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}

vp.ui.setSrcPNGSimple(oImage,vp.ui.ensureLanguageIdParameter(sSrc));
oImage.style.backgroundImage="";
};


if(window.cssSpritesDisabled)
{
fnFallback();
return;
}


var oSpriteImage;
var sSpriteSrc;

try
{
if(!window._cssSprites)
{
throw new Error("No sprite data loaded");
}




var oUrl=new vp.web.URL(sSrc.toLowerCase());
var sSpriteKey=vp.ui.stripEmbeddedUrlParameters(oUrl.pathname);




sSpriteKey=vp.text.replace(sSpriteKey,"/","_");


var oSpriteData=window._cssSprites[sSpriteKey];
if(!oSpriteData)
{
throw new Error("Sprite data not found for image: "+sSrc);
}





oSpriteImage=window._cssSpriteImages[oSpriteData[4]];
sSpriteSrc=oSpriteImage.src;
}
catch(ex)
{
if(!bFailoverToNonSprite&&window.isDebug)
{
throw ex;
}

fnFallback();
return;
}


if(!vp.browser.supportsPng)
{
if(oSpriteImage.isSemiTransparent)
{

fnFallback();
return;
}
else if(oSpriteImage.hasGif)
{

sSpriteSrc=sSpriteSrc.replace(".png",".gif");
}
}

oImage.src=vp.ui.imageUrl("/vp/images/clearpixel.gif");
oImage.style.backgroundImage="url("+sSpriteSrc+")";
oImage.style.backgroundPosition="-"+oSpriteData[0]+"px "+"-"+oSpriteData[1]+"px";
oImage.style.width=oSpriteData[2]+"px";
oImage.style.height=oSpriteData[3]+"px";
};










vp.ui.scaleImageToFit=function $vpfn_Alm2ANRyXoAlcxN$xUO76Q3179$24(vImage,iMaxWidth,iMaxHeight)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}

var oImage=vp.core.getElement(vImage,"vp.ui.scaleImageToFit");


var fnCallback=function $vpfn__en78WlPMe8Z9brlv_vosg3185$21(oSize){if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}

var iWidth=oSize.width;
var iHeight=oSize.height;


if(iWidth>iMaxWidth)
{
iHeight=parseInt(iHeight*iMaxWidth/iWidth);
iWidth=iMaxWidth;
}


if(iHeight>iMaxHeight)
{
iWidth=parseInt(iWidth*iMaxHeight/iHeight);
iHeight=iMaxHeight;
}


oImage.style.width=iWidth+"px";
oImage.style.height=iHeight+"px";
};

vp.ui.getNaturalSize(oImage,fnCallback);
};









vp.ui.getNaturalSize=function $vpfn_qVbtB3DfDBRJ88PJnwvPwQ3220$23(vImage,fnCallback)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}

var oImage=vp.core.getElement(vImage,"vp.ui.getNaturalSize");


var iWidth=oImage.naturalWidth;
var iHeight=oImage.naturalHeight;


if(!iWidth||!iHeight)
{
var cachedImage=new Image();


if(fnCallback)
{
var fnCallbackWrapper=function $vpfn_HlcpRXhlkYnjo4OEZ4JYFg3237$36(){if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
fnCallback({
width:cachedImage.width,
height:cachedImage.height
});
};



vp.events.add(cachedImage,"load",fnCallbackWrapper);
cachedImage.src=oImage.src;
if(cachedImage.complete)
{
fnCallbackWrapper();
vp.events.remove(cachedImage,"load",fnCallbackWrapper);
}
}
else
{


cachedImage.src=oImage.src;
iWidth=cachedImage.width;
iHeight=cachedImage.height;
}
}
else
{

if(fnCallback)
{
fnCallback({
width:iWidth,
height:iHeight
});
}
}

return{width:iWidth,height:iHeight};
};







vp.ui.setDelayedImageSrc=function $vpfn_lNCR57SYxbRbW0sjMBzikw3284$27(vImage,sSrc)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
var fnAction=function $vpfn_23VseBDKaRwkb5$OyRPqGw3286$19()
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
var oImage=vp.core.getElement(vImage,"vp.ui.setDelayedImageSrc");

var onLoadHandler=function $vpfn_8XkbyDDEsel3sQyMXVviJA3290$28(e)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
var oNaturalSize=vp.ui.getNaturalSize(oCachedImage);

oImage.style.width=oNaturalSize.width;
oImage.style.height=oNaturalSize.height;
oImage.src=sSrc;
};

var oCachedImage=new Image();
oCachedImage.onload=onLoadHandler;
oCachedImage.src=sSrc;
};

setTimeout(fnAction,1);
};

















vp.ui.isVisuallyAbove=function $vpfn_GDxOIXxhx5rEXKUZs_dpVQ3323$24(vElement1,vElement2)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
vElement1=vp.core.getElement(vElement1,"vp.ui.isVisuallyOnTop");
vElement2=vp.core.getElement(vElement2,"vp.ui.isVisuallyOnTop");


if(vElement1===vElement2)
{
return false;
}




var fnGetStack=function $vpfn_o8WqcJGj3CPz5qkL3rubPA3337$21(vElement,aStack)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
var oParent=vElement;
while(oParent&&oParent.nodeType===1)
{
aStack.unshift(oParent);
oParent=oParent.parentNode;
}
};
var aParentStack1=[];
var aParentStack2=[];
fnGetStack(vElement1,aParentStack1);
fnGetStack(vElement2,aParentStack2);


while(aParentStack1[0]===aParentStack2[0])
{
aParentStack1.shift();
aParentStack2.shift();
}

if(aParentStack1.length===0)
{
return false;
}
if(aParentStack2.length===0)
{
return true;
}



var fnGetZindex=function $vpfn_4hucHBiQ3qCGQecr7WD29g3369$22(aStack)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
var zIndex;
var stackIndex=0;
while(typeof(zIndex)=="undefined"&&aStack[stackIndex])
{



var z=vp.ui.getCurrentStyle(aStack[stackIndex],"zIndex");
var p=vp.ui.getCurrentStyle(aStack[stackIndex],"position");


if(p!="static"&&z!="auto")
{

zIndex=parseInt(z)||0;
}
stackIndex++;
}
return zIndex;
};
var izIndex1=fnGetZindex(aParentStack1);
var izIndex2=fnGetZindex(aParentStack2);

if(izIndex1==izIndex2)
{

var oParent1=aParentStack1[0];
var oParent2=aParentStack2[0];
while(oParent1)
{
if(oParent1.nextSibling===oParent2)
{
return false;
}
oParent1=oParent1.nextSibling;
}
return true;
}
else
{


return(izIndex1||0)>(izIndex2||0);
}
};





$(document).ready(
function $vpfn_D3kxkFA8aMLDUZJzGUeo1w3422$4()
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
if(vp.browser.isIE)
{
var ieVer=vp.browser.ver;

if(!(jQuery("body").hasClass("ie"+ieVer)))
{
jQuery("body").addClass("ie"+ieVer);
}

if(ieVer<9&&ieVer>5)
{
if(!(jQuery("body").hasClass("ie6to8")))
{
jQuery("body").addClass("ie6to8");
}
}
}
});





$(document).ready(
function $vpfn_D3kxkFA8aMLDUZJzGUeo1w3448$4()
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
if(vp.browser.isMobile&&vp.browser.isWebKit)
{



$("body")
.children("div,form,p")
.bind("mouseup mousedown click",function $vpfn_D3kxkFA8aMLDUZJzGUeo1w3457$49(){if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}return;});
}
});







vp.ui.enableDisabledOptions=function $vpfn_WegwCXfFOGu_QTf5VTU_3w3467$30(sSelectId)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
if(!vp.browser.isIE||vp.browser.ver>6)
{

return;
}

var oSelector=vp.ui.get(sSelectId);
var bHasDisabled=false;


for(var j=0;j<oSelector.options.length;j++)
{
if(oSelector.options[j].disabled)
{
oSelector.options[j].style.color='#CCC';
bHasDisabled=true;
}
}

if(!bHasDisabled)
{

return;
}


var fnOldChange=oSelector.onchange;


var fnNewChange=function $vpfn_I5C1UCxCzcexzOgKWltzTw3498$22(bFireRealChangeEvent)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
if(oSelector.options[oSelector.selectedIndex].disabled)
{
if(oSelector.options.length<=1)
{
this.selectedIndex=-1;
}
else
{

var newIndex=oSelector.selectedIndex;
var bFound=false;
for(var i=1;i<oSelector.options.length;i++)
{
if((oSelector.selectedIndex+i<oSelector.options.length-1)
&&!oSelector.options[oSelector.selectedIndex+i].disabled)
{
oSelector.selectedIndex+=i;
bFound=true;
break;
}
else if((oSelector.selectedIndex-i>=0)
&&!oSelector.options[oSelector.selectedIndex-i].disabled)
{
oSelector.selectedIndex-=i;
bFound=true;
break;
}
}
if(!bFound)
{
this.selectedIndex=-1;
}
}
}
else if(bFireRealChangeEvent)
{
fnOldChange();
}
};

oSelector.onchange=function $vpfn_3UFOY1gc1YGHFtuOomF$Zg3540$25()
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
fnNewChange(true);
};

if(oSelector.options[oSelector.selectedIndex].disabled)
{
fnNewChange(false);
}
};

if(!window.__td){window.__MT=100;window.__ti=0;window.__td=[];window.__td.length=window.__MT;window.__noTrace=false;

}








vp.define("vp.web");








vp.web.xmlEncode=function $vpfn_wqDNkjCUBowSVPxZnNHnzQ21$19(sText,aAdditionalEncoders)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
if(sText===null||typeof(sText)=="undefined")
{
return null;
}
else if(typeof(sText)!="string")
{
sText=sText.toString();
}

var aBuilder=[];
var i;
var aEncoders=[vp.web._xmlCharEncoder];

if(aAdditionalEncoders)
{
for(i=0;i<aAdditionalEncoders.length;i++)
{
aEncoders.push(aAdditionalEncoders[i]);
}
}

for(i=0;i<sText.length;i++)
{
var sChar=sText.charAt(i);
var sEntity=null;
for(var j=0;j<aEncoders.length;j++)
{
sEntity=aEncoders[j](sChar);
if(sEntity)
{
break;
}
}

if(sEntity)
{
aBuilder.push(sEntity);
}
else
{
aBuilder.push(sChar);
}
}

return aBuilder.join("");
};







vp.web.xmlDecode=function $vpfn_vUPnasaRxD_N4Kq2xq6Jng76$19(sText,aAdditionalDecoders)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
if(sText===null||typeof(sText)=="undefined")
{
return null;
}
else if(typeof(sText)!="string")
{
sText=sText.toString();
}

var i;
var aDecoders=[vp.web._xmlEntityDecoder];
if(aAdditionalDecoders)
{
for(i=0;i<aAdditionalDecoders.length;i++)
{
aDecoders.push(aAdditionalDecoders[i]);
}
}

var aCurrentEntity=null;
var aBuilder=[];


for(i=0;i<sText.length;i++)
{
var sChar=sText.charAt(i);


if(aCurrentEntity===null)
{
if(sChar=="&")
{
aCurrentEntity=[];
}
else
{
aBuilder.push(sChar);
}
}
else
{
if(sChar==";")
{
var sVal=null;
var sCurrentEntity=aCurrentEntity.join("").toLowerCase();


for(var j=0;j<aDecoders.length;j++)
{
sVal=aDecoders[j](sCurrentEntity);
if(sVal)
{
break;
}
}

if(sVal)
{
aBuilder.push(sVal);
}
else
{

aBuilder.push("&");
aBuilder.push(sCurrentEntity);
aBuilder.push(";");
}

aCurrentEntity=null;
}
else
{
aCurrentEntity.push(sChar);



if(aCurrentEntity.length>7||(!VP_WEB_ENTITY_REGEX.test(sChar))||sChar=="_")
{
aBuilder.push("&");
aBuilder.push(aCurrentEntity.join(""));

aCurrentEntity=null;
}
}
}
}


if(aCurrentEntity!==null)
{
aBuilder.push("&");
aBuilder.push(aCurrentEntity.join(""));
}

return aBuilder.join("");
};








vp.web.xmlAttributeEncode=function $vpfn_lPJNdLnUL2l2Pv3aQUAscw182$28(sText)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
return vp.web.xmlEncode(sText,[vp.web._xmlAttributeCharEncoder]);
};








vp.web.htmlEncode=function $vpfn_1rTw5oOe569SIwga96EPnA194$20(sText)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
return vp.web.xmlEncode(sText,[vp.web._htmlCharEncoder]);
};







vp.web.htmlDecode=function $vpfn_63IJurGxV2g10RlzRu7lPg205$20(sText)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
return vp.web.xmlDecode(sText,[vp.web._htmlEntityDecoder]);
};








vp.web.htmlAttributeEncode=function $vpfn_iGSecnKdBqBv9dFufDqicg217$29(sText)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
return vp.web.xmlEncode(sText,[vp.web._xmlAttributeCharEncoder,vp.web._htmlAttributeCharEncoder]);
};







vp.web.xmlEncodeDoubleByteUnicodeToAscii=function $vpfn_l1MokT4vRmA4cpSrg1dPIQ228$43(sText)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
return vp.web.xmlEncode(sText,[vp.web._xmlDoubleByteUnicodeToAsciiEncoder]);
};





vp.web._xmlCharEncoder=function $vpfn_iMxE3g6dTLIMruDODVXs4w237$25(sChar)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}

if(sChar<=">"&&sChar>="\"")
{
switch(sChar)
{
case"<":
return"&lt;";
case">":
return"&gt;";
case"&":
return"&amp;";
default:
break;
}
}












return null;
};




vp.web._xmlAttributeCharEncoder=function $vpfn_zG$AtXdiZ_vGGWr2n6UrLg272$34(sChar)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}

if(sChar<="\"")
{
switch(sChar)
{
case"\n":
return"&#xA;";
case"\f":
return"&#xC;";
case"\r":
return"&#xD;";
case"\"":
return"&quot;";
default:
break;
}
}

return null;
};




vp.web._htmlAttributeCharEncoder=function $vpfn_lQY7bZWjXX2NvA3ZtfHxkg298$35(sChar)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
if(sChar=="'")
{
return"&#39;";
}

return null;
};




vp.web._htmlCharEncoder=function $vpfn_cFfNCGaEVRBxSslLNyDJBg311$26(sChar)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}

switch(sChar)
{
case"\u00A0":
return"&#160;";
case"\"":
return"&quot;";
default:
return null;
}
};




vp.web._xmlDoubleByteUnicodeToAsciiEncoder=function $vpfn_T8FuudP3mHkxYbJgOnPHvg328$45(sChar)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
var iCharCode=sChar.charCodeAt();
if(iCharCode>255)
{
var sCharCode=iCharCode.toString();
if(sCharCode.length<5)
{
sCharCode="00000".substr(0,5-sCharCode.length)+sCharCode;
}

return"&#"+sCharCode+";";
}
};




vp.web._xmlEntityDecoder=function $vpfn_ELNYlKQ7b4UzAv8GmVXu9A346$27(sEntity)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
switch(sEntity)
{
case"lt":
return"<";
case"gt":
return">";
case"amp":
return"&";
case"quot":
return"\"";
case"apos":
return"'";
default:
if(sEntity.charAt(0)=="#")
{
var iVal=NaN;
if(sEntity.charAt(1)=="x")
{

iVal=parseInt(sEntity.substring(2),16);
}
else
{



iVal=parseInt(sEntity.substring(1),10);
}

if(!isNaN(iVal))
{
return String.fromCharCode(iVal);
}
}
break;
}

return null;
};




vp.web._htmlEntityDecoder=function $vpfn_KEpg5D1RezTqeUhtRmVghg391$28(sEntity)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
var sEntityLower=sEntity.toLowerCase();
if(VP_WEB_HTML_ENTITY_MAP[sEntityLower])
{
return String.fromCharCode(VP_WEB_HTML_ENTITY_MAP[sEntityLower]);
}

return null;
};

var VP_WEB_ENTITY_REGEX=/[\w\&\#]/;

var VP_WEB_HTML_ENTITY_MAP={
"nbsp":160,
"iexcl":161,
"cent":162,
"pound":163,
"curren":164,
"yen":165,
"brvbar":166,
"sect":167,
"uml":168,
"copy":169,
"ordf":170,
"laquo":171,
"not":172,
"shy":173,
"reg":174,
"macr":175,
"deg":176,
"plusmn":177,
"sup2":178,
"sup3":179,
"acute":180,
"micro":181,
"para":182,
"middot":183,
"cedil":184,
"sup1":185,
"ordm":186,
"raquo":187,
"frac14":188,
"frac12":189,
"frac34":190,
"iquest":191,
"times":215,
"divide":247,
"agrave":192,
"aacute":193,
"acirc":194,
"atilde":195,
"auml":196,
"aring":197,
"aelig":198,
"ccedil":199,
"egrave":200,
"eacute":201,
"ecirc":202,
"euml":203,
"igrave":204,
"iacute":205,
"icirc":206,
"iuml":207,
"eth":208,
"ntilde":209,
"ograve":210,
"oacute":211,
"ocirc":212,
"otilde":213,
"ouml":214,
"oslash":216,
"ugrave":217,
"uacute":218,
"ucirc":219,
"uuml":220,
"yacute":221,
"thorn":222,
"szlig":223,
"agrave":224,
"aacute":225,
"acirc":226,
"atilde":227,
"auml":228,
"aring":229,
"aelig":230,
"ccedil":231,
"egrave":232,
"eacute":233,
"ecirc":234,
"euml":235,
"igrave":236,
"iacute":237,
"icirc":238,
"iuml":239,
"eth":240,
"ntilde":241,
"ograve":242,
"oacute":243,
"ocirc":244,
"otilde":245,
"ouml":246,
"oslash":248,
"ugrave":249,
"uacute":250,
"ucirc":251,
"uuml":252,
"yacute":253,
"thorn":254,
"yuml":255
};








vp.web.urlDecode=function $vpfn_RDa3woJNRduvtS5pz_6K5g510$19(sText)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
if(!sText)
{
sText="";
}
else
{
sText=sText.toString();
}

if(typeof decodeURIComponent!="undefined")
{
try
{
return decodeURIComponent(sText);
}
catch(e){}
}

return unescape(sText);
};








vp.web.urlEncode=function $vpfn_JeThDqcIPa5Z_SRSkJe0cA540$19(sText)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
if(!sText)
{
sText="";
}
else
{
sText=sText.toString();
}

if(typeof encodeURIComponent!="undefined")
{
var sOut=encodeURIComponent(sText);
sOut=sOut.replace(/\(/gi,"%28");
sOut=sOut.replace(/\)/gi,"%29");
return sOut.replace(/'/gi,"%27");
}
else
{
return escape(sText);
}
};


(function $vpfn_Vk6_nELnADuZ9xSNKXbpFw565$1($)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}















vp.web.URL=function $vpfn_PMlYCaT$N2jvDQ2Lqprjog582$17(url)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
var me=this;


this.hash="";


this.protocol="";


this.hostname="";



this.host="";


this.port="";


this.queryString="";


this.search="";


this.pathname="";

var load=function $vpfn_mFzhkDZz3BMqkq8yunSu9A611$19(url)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
var nextPartPos;
var temp=url;


if(temp.search(/https\:\/\/+/i)===0)
{
me.protocol="https:";
temp=url.substr(8);
}
else if(temp.search(/http\:\/\/+/i)===0)
{
me.protocol="http:";
temp=url.substr(7);
}

if(temp.length===0)
{
return;
}


if(me.protocol!=="")
{

nextPartPos=temp.search(/[\/\?\#]/i);
if(nextPartPos==-1)
{
me.host=temp;
return;
}

me.host=temp.substring(0,nextPartPos);
temp=temp.substr(nextPartPos);
}


if(me.host&&me.host!=="")
{
var colorPos=me.host.indexOf(":");
if(colorPos!=-1)
{
me.hostname=me.host.substr(0,colorPos);
me.port=me.host.substr(colorPos+1,me.host.length);
}
else
{
me.hostname=me.host;
}
}

if(temp.length===0)
{
return;
}

nextPartPos=temp.search(/[\?\#]/i);


if(nextPartPos!==0)
{
if(nextPartPos==-1)
{
me.pathname=temp;
return;
}

me.pathname=temp.substr(0,nextPartPos);
temp=temp.substr(nextPartPos);
}

if(temp.length===0)
{
return;
}



if(temp.indexOf("?")===0)
{
nextPartPos=temp.indexOf("#");

if(nextPartPos==-1)
{
me.queryString=temp.substr(1);
temp="";
}
else
{
me.queryString=temp.substring(1,nextPartPos);
temp=temp.substr(nextPartPos);
}

updateSearch();
}

if(temp.length===0)
{
return;
}


if(temp.indexOf("#")===0)
{
me.hash=temp;
}
};

var updateSearch=function $vpfn_apnareGGp1FpeoZ8JwxmCw720$27()
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
me.search="";
if(me.queryString&&me.queryString!=="")
{
me.search="?"+me.queryString;
}
};


this.toString=function $vpfn_ZB60O7jjn$qotoOhZvSJFw730$24()
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
var sPort=me.port;
var sProtocol=me.protocol;

if(sPort&&sPort!=="")
{
sPort=":"+sPort;
}
if(sProtocol&&sProtocol!=="")
{
sProtocol=sProtocol+"//";
}
return sProtocol+me.hostname+sPort+me.pathname+me.search+me.hash;
};


this.getItem=function $vpfn_Fn9YIdi1tEkRJ99rZNvl7A747$23(key,defaultValue)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
var qs=$.deparam(me.queryString);

var value=qs[key];
if(typeof value=="undefined")
{
return defaultValue;
}

return value;
};

this.getItemOrDefault=this.getItem;


this.setItem=function $vpfn_sJZNPFkNCgEyIrkauyRWww763$23(key,value)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
var qs=$.deparam(me.queryString);

if(value===null||typeof value=="undefined")
{
value="";
}
else if(typeof value!="string")
{
value=value.toString();
}

qs[key]=value;
me.queryString=$.param(qs);

updateSearch();
};


this.removeItem=function $vpfn_RsrctSLeFoQ82YVe1IYLpQ783$26(key)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
var qs=$.deparam(me.queryString);
delete qs[key];
me.queryString=$.param(qs);

me.search="";
if(me.queryString!=="")
{
me.search="?"+me.queryString;
}
};

load(url.toString());
};

})(jQuery);















vp.web.DelimitedString=function $vpfn_XYNiakCK0KSJxIrVA4RF7w815$25(vData,sItemDelimiter,sPairDelimiter,fnEncoder,fnDecoder,bCaseInsensitiveKeys)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}




this.items={};

var _oCaseInsensitiveItems={};





this.count=0;






this.itemDelimiter=sItemDelimiter;






this.pairDelimiter=sPairDelimiter;

this.caseSensitiveKeys=bCaseInsensitiveKeys?false:true;





this.fnEncoder=fnEncoder?fnEncoder:function $vpfn_Vk6_nELnADuZ9xSNKXbpFw851$45(sStr){if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}return sStr;};





this.fnDecoder=fnDecoder?fnDecoder:function $vpfn_Vk6_nELnADuZ9xSNKXbpFw857$45(sStr){if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}return sStr;};

var me=this;






this.setItem=function $vpfn_sJZNPFkNCgEyIrkauyRWww866$19(sKey,sValue)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
if(typeof(sKey)!="string")
{
sKey=sKey.toString();
}

if(typeof(me.getItem(sKey))=="undefined")
{
me.count++;
}

me.items[sKey]=sValue;

if(!me.caseSensitiveKeys)
{
_oCaseInsensitiveItems[sKey.toLowerCase()]=sValue;
}
};






this.getItem=function $vpfn_Fn9YIdi1tEkRJ99rZNvl7A891$19(sKey,defaultValue)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
if(!sKey&&sKey!==0)
{
throw new Error("DelimitedString.getItem(): sKey must be supplied");
}

if(typeof(sKey)!="string")
{
sKey=sKey.toString();
}

var type=typeof(defaultValue);

var value=me.caseSensitiveKeys?me.items[sKey]:_oCaseInsensitiveItems[sKey.toLowerCase()];

switch(type)
{
case"undefined":
return value||defaultValue;
case"boolean":
return vp.core.getBoolean(value,defaultValue);
case"number":
return vp.core.getNumber(value,defaultValue);
default:
return value||defaultValue;
}

return value;
};







this.getItemOrDefault=this.getItem;





this.removeItem=function $vpfn_RsrctSLeFoQ82YVe1IYLpQ934$22(sKey)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
if(typeof(me.getItem(sKey))!="undefined")
{
me.count--;
}

var oHash=me.items;
delete oHash[sKey];

if(!me.caseSensitiveKeys)
{
var oHashCI=_oCaseInsensitiveItems;
delete oHashCI[sKey.toLowerCase()];
}
};






this.load=function $vpfn_O13ttvTZvJXmpFavXnm2Cw956$16(vData)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
me.items={};
me.append(vData);
};






this.append=function $vpfn_Svd4$JoVyW9Wdl8R71vHNA967$18(vData)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
if(typeof(vData)=="string")
{
if(vData&&vData!=="")
{
var arrPairs=vData.split(me.itemDelimiter);
var iLen=arrPairs.length;
for(var i=0;i<iLen;i++)
{
if(arrPairs[i].length>0)
{
var arrPair=arrPairs[i];
var delimIndex=arrPair.indexOf(me.pairDelimiter);

if(delimIndex>0&&delimIndex<arrPair.length-1){
var key=arrPair.substring(0,delimIndex);
var value=arrPair.substring(delimIndex+1);
me.setItem(fnDecoder(key),fnDecoder(value));
}
}
}
}
}
else if(typeof(vData)=="object")
{
for(var sProp in vData)
{
me.items[sProp]=vData[sProp];
}
}
else
{
throw new Error("vData must be a delimited string or a dictionary of key/value pairs");
}
};





this.toString=function $vpfn_ZB60O7jjn$qotoOhZvSJFw1008$20()
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
var arrTemp=[];
for(var sKey in me.items)
{
arrTemp.push(me.fnEncoder(sKey)+me.pairDelimiter+me.fnEncoder(me.items[sKey]));
}
return arrTemp.join(me.itemDelimiter);
};

if(vData)
{
this.load(vData);
}
};










vp.web.CssString=function $vpfn_p$7SVvtPnZmHcvTyTnuRnQ1033$19(vCss)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
var fnDecoder=vp.text.trim;




this.inheritFrom=vp.web.DelimitedString;
this.inheritFrom(vCss,";",":",null,fnDecoder);

var me=this;

var base_getItem=this.getItem;






this.getItem=function $vpfn_Fn9YIdi1tEkRJ99rZNvl7A1052$19(sKey)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
var sRet=base_getItem(sKey);
if(typeof(sRet)!="undefined"&&sRet!==null)
{
return sRet;
}

var sNewKey=vp.ui.convertCssPropertyToStringFormat(sKey);

return base_getItem(sKey);
};





this.getPropertyMap=function $vpfn__wb0$_DZYbJ2e7AlTE3gvg1069$26()
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
var oMap={};

for(var sProp in me.items)
{
oMap[vp.ui.convertCssPropertyToCssFormat(sProp)]=me.items[sProp];
}

return oMap;
};
};












vp.web.QueryString=function $vpfn_$ocA4UHvXdNlzVxB$SZFgw1093$21(vQueryString)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}

if(vQueryString&&vQueryString.indexOf&&vQueryString.indexOf("?")===0)
{
vQueryString=vQueryString.substr(1);
}




this.inheritFrom=vp.web.DelimitedString;
this.inheritFrom(vQueryString,"&","=",encodeURIComponent,vp.web.urlDecode,true);
};



vp.web.ResponseHeader=function $vpfn_lOUJhri8KWo_LLgrmffF3Q1110$24(sResponseHeader)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
var fnDecoder=vp.text.trim;



this.inheritFrom=vp.web.DelimitedString;
this.inheritFrom(sResponseHeader,"\n",":",null,fnDecoder,true);

};







vp.web.createQueryString=function $vpfn_6LabJjZmIsyqymw2i0GMpQ1127$27(oData)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
var sQueryString="";

for(var sParam in oData)
{
if(sQueryString)
{
sQueryString+="&";
}

sQueryString+=vp.web.urlEncode(sParam)+"="+vp.web.urlEncode(oData[sParam]);
}

return sQueryString;
};








vp.web.getQueryString=function $vpfn_XnnIK20skejtMHRVLP93sg1151$24(sKey,oDoc,defaultValue)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
if(typeof(oDoc)!="object")
{
defaultValue=oDoc;
oDoc=null;
}

oDoc=oDoc||document;


if(!oDoc._CachedQueryString)
{
oDoc._CachedQueryString=new vp.web.QueryString(oDoc.location.search);
}

var sRet=oDoc._CachedQueryString.getItem(sKey,defaultValue);

return typeof(sRet)=="undefined"?"":sRet;
};






vp.web.refreshImage=function $vpfn_fIdqo0tvm7Qb9AveSj0EVg1177$22(vImage)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
var oImage=vp.core.getElement(vImage,"vp.web.refreshImage");

var oUrl=new vp.web.URL(oImage.src);
oUrl.setItem("imgversion",(new Date()).valueOf());

oImage.src=oUrl.toString();
};










vp.web.setUrlHashData=function $vpfn_7Xi05h8cJq2bZ7xWCR98tA1196$24(sKey,sValue,oDoc)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
var oQS=vp.web.getUrlHash(oDoc);
oQS.setItem(sKey,sValue);
vp.web.setUrlHash(oQS,oDoc);
};










vp.web.getUrlHashData=function $vpfn_5896CGodoNx2HwPJy$TBwQ1212$24(sKey,oDoc)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
var oQS=vp.web.getUrlHash(oDoc);
return oQS.getItem(sKey);
};









vp.web.setUrlHash=function $vpfn_jDjKp107phczDoCU3VrYLA1226$20(oHash,oDoc)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
oDoc=oDoc||document;
oDoc.location.hash="#"+oHash.toString();
};









vp.web.getUrlHash=function $vpfn_cDwJ4fRxy402cv8jE5OriA1240$20(oDoc)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
oDoc=oDoc||document;
var sHash=document.location.hash;

if(sHash.indexOf("#")===0)
{
sHash=sHash.substr(1);
}

return new vp.web.QueryString(sHash);
};







vp.web.getInnerText=function $vpfn_4erxV1Yt$vrpRBBWPnxJhQ1259$22(oElem)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
try
{
if(typeof(oElem.innerText)!="undefined")
{
return oElem.innerText;
}
else if(oElem.textContent)
{
return(oElem.textContent);
}
}
catch(ex){}

var r=oElem.ownerDocument.createRange();
r.selectNodeContents(oElem);
return r.toString();
};







vp.web.getOuterHTML=function $vpfn_pj2tW0FE9GgOsphXuqO1cw1285$22(oElem)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
if(oElem.outerHTML)
{
return oElem.outerHTML;
}

var aTag=[];

aTag.push("<"+oElem.tagName);
var oAttr=oElem.attributes;
var iLen=oAttr.length;
for(var i=0;i<iLen;i++)
{
aTag.push(" "+oAttr[i].nodeName+"=\""+vp.web.xmlAttributeEncode(oAttr[i].nodeValue)+"\"");
}
aTag.push(">"+oElem.innerHTML+"</"+oElem.tagName+">");

return aTag.join("");
};

var XML_ACTIVE_X_IDS=[
"MSXML2.DOMDocument.6.0",
"MSXML2.DOMDocument.3.0",
"MSXML2.DOMDocument",
"Microsoft.XMLDOM"
];







vp.web.getXMLDocument=function $vpfn_AcPIQKWmKVPH8I_MsvPU0g1319$24(sXML)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
var oXMLDoc;

if(typeof(ActiveXObject)!="undefined")
{
var oObj;
for(var i=0;i<XML_ACTIVE_X_IDS.length;i++)
{
try
{




oObj=new ActiveXObject(XML_ACTIVE_X_IDS[i]);

if(oObj)
{
oXMLDoc=oObj;
break;
}
}
catch(ex){}
}

if(!oXMLDoc)
{
throw new Error("Could not create XML DOM document.");
}

if(sXML)
{
oXMLDoc.async=false;
oXMLDoc.loadXML(sXML);
}
}
else if(document.implementation&&document.implementation.createDocument)
{
if(sXML)
{
var oParser=new window.DOMParser();
oXMLDoc=oParser.parseFromString(sXML,"text/xml");
}
else
{
oXMLDoc=document.implementation.createDocument("","",null);
}
}

return oXMLDoc;
};







vp.web.getInnerXML=function $vpfn_AS_6EqQX2EflUnF22aPHQQ1378$21(oXmlNode)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
if(oXmlNode.nodeType==1)
{
var aStringBuilder=[];

var oChildNodes=oXmlNode.childNodes;
var iLen=oChildNodes.length;
for(var i=0;i<iLen;i++)
{
aStringBuilder.push(vp.web.getOuterXML(oChildNodes[i]));
}

return aStringBuilder.join("");
}
else
{
return vp.web.xmlEncode(oXmlNode.nodeValue);
}
};







vp.web.getOuterXML=function $vpfn_jjQZivDAp_vwP79gLelXgQ1405$21(oXmlNode)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}



if(oXmlNode.nodeType==1)
{

if(vp.browser.isIE&&oXmlNode.xml)
{
return oXmlNode.xml;
}
else if(window.XMLSerializer)
{
if(!window._XMLSerializerInstance)
{
window._XMLSerializerInstance=new window.XMLSerializer();
}
return window._XMLSerializerInstance.serializeToString(oXmlNode);
}
}
else
{
return vp.web.xmlEncode(oXmlNode.nodeValue);
}
};






vp.web.getOwnerDocument=function $vpfn_SVZvw9pGdy0JEgWhZPY7TA1437$26(oNode)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}

return oNode.ownerDocument||oNode;
};





if(!vp.cookies)
{
vp.cookies=$.cookies;
}







vp.cookies.getValue=function $vpfn_U70pu00ArqFes7hYsCm1YA1458$22(name)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
var value=$.cookies.get(name);



if(typeof(value)=="object")
{
return"";
}

return value||"";
};








vp.cookies.getSubValue=function $vpfn_U7dx5kO9T1YQDBLncrvXLg1479$25(name,subCookie)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}


var undefined;
if(!subCookie)
{
return undefined;
}

return $.cookies.get(name,subCookie)||"";
};









vp.cookies.setValue=function $vpfn_Cj1GSDMXBkID4fdQn38GUg1500$22(name,value,domain,permanent)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
$.cookies.set({
name:name,
value:value,
domain:domain,
permanent:permanent
});
};










vp.cookies.setSubValue=function $vpfn_TpRWtlU3pboNrl5TqYgoCw1519$25(name,subCookie,value,domain,permanent)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
var subvalues={};
subvalues[subCookie]=value;

$.cookies.set({
name:name,
value:subvalues,
domain:domain,
permanent:permanent
});
};


vp.web.forceIE8=function $vpfn_6nrp2ZTN$WR6c2BkHtbYYA1533$18(bForceIE8)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
vp.cookies.setValue("forceIE8",bForceIE8.toString());
};

if(!window.__td){window.__MT=100;window.__ti=0;window.__td=[];window.__td.length=window.__MT;window.__noTrace=false;


}




if(typeof vp=="undefined"){
var vp={};
}





vp.win=function(){};





vp.win.childWindows=[];








vp.win._checkForWindow=function $vpfn_guggC0pYd8$ZXf0bJnvnYw32$25(oWindow,sFunc){if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}

if(!oWindow){
throw new Error("Call to vp.win."+sFunc+"() with a null window reference.");
}

if(!oWindow.resizeTo||!oWindow.moveTo){
throw new Error("Call to vp.win."+sFunc+"() with a non-window argument.");
}
};







vp.win.verifyWindow=function $vpfn_$VuzvTTOfWH62ohHb57JGg49$22(oWindow)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
if(!oWindow)
{
return false;
}
try
{
if(oWindow.closed)
{
return false;
}

if(!oWindow.resizeTo||!oWindow.moveTo)
{
return false;
}

var sUrl=oWindow.document.location.href;

return true;

}
catch(ex)
{
return false;
}
};







vp.win.center=function $vpfn_R3vUXFKCaje16RrjmSamgg84$16(oWindow){if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}

oWindow=oWindow||window;


this._checkForWindow(oWindow);


var iWidth=0,iHeight=0;

if(oWindow.dialogWidth){
iWidth=parseInt(oWindow.dialogWidth);
iHeight=parseInt(oWindow.dialogHeight);
}else if(typeof oWindow.innerWidth=="number"){
iWidth=oWindow.innerWidth;
iHeight=oWindow.innerHeight;
}else if(document.documentElement){
iWidth=document.documentElement.offsetWidth;
iHeight=document.documentElement.offsetHeight;
}else if(document.body){
iWidth=document.body.clientWidth;
iHeight=document.body.clientHeight;
}


if(oWindow.dialogWidth){
oWindow.dialogLeft=((screen.availWidth/2)-(iWidth/2))+"px";
oWindow.dialogTop=((screen.availHeight/2)-(iHeight/2))+"px";
}else{
oWindow.moveTo((screen.availWidth/2)-(iWidth/2),(screen.availHeight/2)-(iHeight/2));
}

};









vp.win.close=function $vpfn_cENH8fMeHyG9upJj61j36Q126$15(oWindow){if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}


oWindow=oWindow||window;


this._checkForWindow(oWindow,"close");


oWindow.top.close();
};





vp.win.closeChildWindows=function $vpfn_faYaQT99fkjhVvBxe1va3Q142$27(){if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}


for(var i=0,c=this.childWindows.length;i<c;i++){
try{this.childWindows[i].close();}
catch(ex){}
}

};







vp.win.isPopup=function $vpfn_$hZUyYZDF$W7Zh1gicWwfA158$17(oWindow){if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}


oWindow=oWindow||window;


this._checkForWindow(oWindow,"isPopup");


return!!oWindow.top.opener;
};












vp.win.open=function $vpfn__6h$HJDGH3bR8eNkE0eOtQ181$14(sUrl,sName,sFeatures,bDisablePopupBlockingWarning,bIsCrossDomain){if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}

try
{

var oWin=window.open(sUrl,sName,sFeatures);


if(!oWin)
{
if(!bDisablePopupBlockingWarning)
{
alert(vp.LangMap["PopupBlockerWarning"]);
}

return null;
}


if(!bIsCrossDomain)
{
var oTemp=oWin.document;
}


this.childWindows[this.childWindows.length]=oWin;

oWin.focus();


return oWin;

}
catch(ex)
{
return null;
}
};















vp.win.openCentered=function $vpfn_7VEPIbiqmQfCFyZnJGbtgg234$22(sUrl,sName,iWidth,iHeight,bResizable,bScrolling,bIsCrossDomain){if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}

iWidth=Math.min(iWidth,screen.width);
iHeight=Math.min(iHeight,screen.height);


var sFeatures="width="+iWidth+",height="+iHeight;


var iLeft=screen.width/2-iWidth/2;
var iTop=screen.height/2-iHeight/2;


sFeatures+=",left="+iLeft+",top="+iTop;


sFeatures+=",resizable="+(bResizable?"yes":"no")+",scrollbars="+(bScrolling?"yes":"no");


return vp.win.open(sUrl,sName,sFeatures,bIsCrossDomain);

};












vp.win.resizeAndCenter=function $vpfn_K1fzvLlscPxP_ThHTsWsow268$25(iWidth,iHeight,oWindow)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
if(!oWindow)
{
oWindow=window;
}

var bBodyAvailable=(oWindow&&oWindow.document&&oWindow.document.body)?true:false;

if(!iHeight&&bBodyAvailable)
{
iHeight=oWindow.document.body.scrollHeight+5;
}
else if(!iHeight)
{
throw new Error("vp.win.resizeAndCenter(): document.body not available- call resize window from vp.events.addToOnLoad()");
}

if(!iWidth)
{
iWidth=oWindow.document.body.scrollWidth;
}
else if(!iWidth)
{
throw new Error("vp.win.resizeAndCenter(): document.body not available- call resize window from vp.events.addToOnLoad()");
}

var MAX_HEIGHT=600;
var MAX_WIDTH=800;

if(iWidth>MAX_WIDTH)
{
iWidth=MAX_WIDTH;
}

if(iHeight>MAX_HEIGHT)
{
iHeight=MAX_HEIGHT;
}

if(oWindow.dialogHeight)
{
oWindow.dialogHeight=iHeight+"px";
oWindow.dialogWidth=iWidth+"px";


if(oWindow.document.body.offsetHeight<iHeight)
{
oWindow.dialogHeight=(parseInt(oWindow.dialogHeight)+(iHeight-oWindow.document.body.offsetHeight))+"px";
}

vp.win.center(oWindow);
return;
}

var fnTimeout=function $vpfn_c5kHLwyFbZHnSTnf2tZkZg323$20()
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
try
{
oWindow.resizeTo(iWidth,iHeight);
}
catch(err)
{

}

if(bBodyAvailable)
{
var oBody=oWindow.document.body;

if(oBody.scrollHeight>oBody.clientHeight||oBody.scrollWidth>oBody.clientWidth){
oWindow.resizeBy(0,(oBody.scrollHeight-oBody.clientHeight)+20);
}
}

vp.win.center(oWindow);
};


setTimeout(fnTimeout,10);
};









vp.win.getCallbackHandler=function $vpfn_SMLumYBx1y1K4Ns_NPt_aw358$28(iCallbackID,oWin)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
if(!oWin)
{
if(window.parent&&window.parent!=window)
{

oWin=window.parent;
}
else if(window.opener)
{

oWin=window.opener;
}
else
{
throw new Error("vp.win.getCallbackHandler: unable to reach parent window.");
}
}


if(!oWin||!oWin.__callbackHandlers)
{
return null;
}
return oWin.__callbackHandlers[iCallbackID];
};








vp.win.createCallbackHandler=function $vpfn_5HM8$8AzUrTMPv93Jl1jVA393$31(fnHandler)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
if(!window.__callbackHandlers)
{
window.__callbackHandlers=[];
}

var iIndex=-1;
for(var i=0;i<window.__callbackHandlers.length;i++)
{
try
{
if(window.__callbackHandlers[i]==fnHandler)
{
iIndex=i;
break;
}
}
catch(e)
{
window.__callbackHandlers.remove(i);
i--;
}
}

if(iIndex!=-1)
{
return iIndex;
}

window.__callbackHandlers.add(fnHandler);

return window.__callbackHandlers.length-1;
};










vp.win.resizeIFrameToContent=function $vpfn_a5yFH82Y4BTl6G2VFrkCGg437$31(vIFrame,bHeight,bWidth)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
if(typeof(vIFrame)=="string")
{
vIFrame=parent.document.getElementById(vIFrame);
}

if(vIFrame)
{
var frameDoc=vIFrame.contentDocument||vIFrame.contentWindow.document;


var x,y;
var scroll=frameDoc.body.scrollHeight;
var offset=frameDoc.body.offsetHeight;
if(scroll>offset)
{
x=frameDoc.body.scrollWidth;
y=frameDoc.body.scrollHeight;
}
else

{
x=frameDoc.body.offsetWidth;
y=frameDoc.body.offsetHeight;
}

if(bHeight)
{
vIFrame.style.height=y+'px';
}

if(bWidth)
{
vIFrame.style.width=x+'px';
}
}
};







vp.win.waitForLoadAndNavigate=function $vpfn_9MrJoC05Oq9lPI5a9l9BSg482$32(oWin,sURL)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
if(!oWin)
{
return;
}
else if(!oWin.document)
{
var fnRetry=function $vpfn_WBcM33Ow3rVphBR_FdgDOQ490$22()
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
vp.win.waitForLoadAndNavigate(oWin,sURL);
};
setTimeout(fnRetry,500);
}
else
{
oWin.document.location.replace(sURL);
}
};

if(!window.__td){window.__MT=100;window.__ti=0;window.__td=[];window.__td.length=window.__MT;window.__noTrace=false;

}







if(typeof vp=="undefined"){
var vp={};
}





vp.http=function(){};


vp.http.lastResponseHeader=null;

var USE_JQUERY_FOR_AJAX=false;









vp.http._checkForValidStatus=function $vpfn_Wk2fE6ABtUo7d0dR7tfI1g34$31(oHttp,sUrl)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
var iStatus=0;

try
{
iStatus=oHttp.status;
}
catch(e)
{


throw new Error("Error trying to contact the URL ("+sUrl+"). This is usually caused by cross-window AJAX calls.");
}

if(iStatus!=200&&iStatus!==0)
{
if(iStatus==304)
{
throw new Error("The URL ("+sUrl+") was cached by the browser. Set no-cache headers on the URL and try again.");
}
else
{
var oErr;



if(oHttp.responseText.indexOf("{")===0)
{
try
{
var oJson=vp.http.parseJSON(oHttp.responseText);
if(oJson.Message)
{
oErr=new Error("Web service error: "+oJson.Message);
oErr.noRetry=true;
}
}
catch(ex)
{
}
}



if(!oErr)
{
oErr=new Error("Received status code "+iStatus+" trying to contact the URL ("+sUrl+").");
}

oErr.httpStatus=iStatus;
throw oErr;
}
}
};








vp.http.createRequest=function $vpfn_9yBoR2AZbTm6gEIiakkSlQ97$24()
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
if(typeof XMLHttpRequest!="undefined")
{
return new XMLHttpRequest();
}
else if(typeof ActiveXObject!="undefined")
{
try
{
return new ActiveXObject("MSXML2.XmlHttp");
}
catch(ex)
{
throw new Error("vp.http.createRequest() failed: Could not create ActiveX object.");
}
}
else
{
throw new Error("vp.http.createRequest() failed: No XMLHttp implementation available.");
}
};







vp.http.enabled=function $vpfn_0ssiqtoBRAErow9ljn5UEA126$18()
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
if(typeof XMLHttpRequest!="undefined")
{
return true;
}
else if(typeof ActiveXObject!="undefined")
{
try
{
var oHttp=vp.http.createRequest();
return true;
}
catch(ex)
{
return false;
}
}
else
{
return false;
}
};

vp.http._readResponseHeaders=function $vpfn_tY5eucXXtSSQ5RzpVXRp$Q150$31(xhr,url)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
var oResponseHeader;

try
{
oResponseHeader=new vp.web.ResponseHeader(xhr.getAllResponseHeaders());
}
catch(ex)
{
if(window.isDebug)
{
throw new Error("Failed to get response headers: "+ex.message+" for url: "+url);
}

vp.instrumentation.logError("vp.http._syncRequest: Failed to load response headers for request. url = "+url);
}

return oResponseHeader.items;
};











vp.http._asyncRequest=function $vpfn_csCcUyyyhybk8wX9rladSw181$24(sUrl,sMethod,oRequestHeaders,sData,fnCallback,fnErrorHandler,iAttemptCount)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
if(USE_JQUERY_FOR_AJAX)
{
var callbackWrapper;
if(fnCallback)
{
callbackWrapper=function $vpfn_QSGel5nEl5aDqbnWogwqRw188$30(data,textStatus,xhr)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
fnCallback(data,vp.http._readResponseHeaders(xhr,sUrl));
};
}

$.ajax({
url:sUrl,
type:sMethod,
headers:oRequestHeaders,
data:sData,
success:callbackWrapper,
error:fnErrorHandler,
dataType:"text"
});
}

if(typeof(iAttemptCount)=="undefined")
{
iAttemptCount=3;
}

var oHttp=this.createRequest();

oHttp.open(sMethod,sUrl,true);

var sContentType;
if(typeof(oRequestHeaders)=="string")
{
sContentType=oRequestHeaders;
}
else if(oRequestHeaders&&(typeof(oRequestHeaders)=="object"))
{
for(var sHeaderName in oRequestHeaders)
{
oHttp.setRequestHeader(sHeaderName,oRequestHeaders[sHeaderName]);
}
}

if(sContentType)
{
oHttp.setRequestHeader("Content-Type",sContentType);
}

if(sData)
{

if(!vp.browser.isWebKit)
{
oHttp.setRequestHeader("Content-Length",sData.toString().length.toString());
}
}
else
{
sData=null;
}

if(fnCallback)
{
var fnCheckForValidStatus=vp.http._checkForValidStatus;
oHttp.onreadystatechange=function $vpfn_XBfKwbaqjIhHQoqjXO6Riw248$35()
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}

if(oHttp.readyState==4)
{

try
{
fnCheckForValidStatus(oHttp,sUrl);
}
catch(ex)
{
if(ex.httpStatus>=400&&!ex.noRetry)
{

if(iAttemptCount>0)
{
var fnRepost=function $vpfn_9giJFP$7TxQKxSzKTU1qwg265$43()
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
vp.http._asyncRequest(sUrl,sMethod,sContentType,sData,fnCallback,fnErrorHandler,iAttemptCount-1);
};
setTimeout(fnRepost,1000);

return;
}
}

if(fnErrorHandler)
{
fnErrorHandler(ex);
return;
}
else
{
throw new Error(ex.message+" in vp.http._asyncRequest(): "+sUrl);
}
}




var fnCallbackWrapper=function $vpfn_U9MtI3f03mUxD_eN$Eepbw289$40()
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
if(!fnCallback)
{
return;
}


var responseHeaders=vp.http._readResponseHeaders(oHttp,sUrl);
var responseText=null;

try
{
responseText=oHttp.responseText;
}
catch(ex)
{


}

fnCallback(responseText,responseHeaders);
};

setTimeout(fnCallbackWrapper,1);


oHttp.onreadystatechange=function(){};
}
};
}

try
{
oHttp.send(sData);
}
catch(oError)
{
throw new Error("Error occurred while requesting URL ("+sUrl+"):"+oError.message);
}
};










vp.http._syncRequest=function $vpfn_G0ixTtDXLlkp4969zglkqQ340$23(sUrl,sMethod,sContentType,sData)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
var oHttp=this.createRequest();
oHttp.open(sMethod,sUrl,false);

if(sContentType)
{
oHttp.setRequestHeader("Content-Type",sContentType);
}

if(sData)
{

if(!(vp.browser.isWebKit))
{
oHttp.setRequestHeader("Content-Length",sData.toString().length.toString());
}
}
else
{
sData=null;
}

try
{
oHttp.send(sData);
}
catch(oError)
{
throw new Error("Error occurred while requesting URL ("+sUrl+"):"+oError.message);
}


this._checkForValidStatus(oHttp,sUrl);


var responseText=null;

try
{
responseText=oHttp.responseText;
}
catch(ex)
{


}

return responseText;
};








vp.http.get=function $vpfn_Bn5Fgfy2tU$lPSDVXUhgJA398$14(sUrl)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
return vp.http._syncRequest(sUrl,"GET");
};











vp.http.getAsync=function $vpfn_d731gNCADaGD8LmYacEV8Q413$19(sUrl,fnCallback,fnErrorHandler,iAttemptCount)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
vp.http._asyncRequest(sUrl,"GET",null,null,fnCallback,fnErrorHandler,iAttemptCount);
};








vp.http.imagePing=function $vpfn_cBMLsR8v4XmZD57j6yy_eg425$20(sUrl,callback)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
var oImage=new Image();

if(callback)
{
oImage.onload=callback;
}

oImage.src=sUrl;
};










vp.http.post=function $vpfn_$i9JwrGwfCxS$JzY4MlAqA446$15(sUrl,sData)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
return vp.http._syncRequest(sUrl,"POST","application/x-www-form-urlencoded",sData);
};












vp.http.postAsync=function $vpfn_l5QGMpDZ7RsFsH0wMnFgqw462$20(sUrl,sData,fnCallback,fnErrorHandler,iAttemptCount)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
vp.http._asyncRequest(sUrl,"POST","application/x-www-form-urlencoded",sData,fnCallback,fnErrorHandler);
};









vp.http.postJson=function $vpfn_iMhZSEqgCvef9DV2ufyn3g475$19(sUrl,oData)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
var sData=vp.http.serializeJSON(oData);
var sResponse=vp.http._syncRequest(sUrl,"POST","application/json",sData);
return vp.http.parseJSON(sResponse);
};












vp.http.callAsmxAsync=function $vpfn_4DFIWc8zlsdzYWpW3HpfbA493$24(sUrl,sMethodName,oData,fnCallback,fnErrorHandler)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
return $.ajaxAsmx(
{
url:sUrl,
methodName:sMethodName,
data:oData,
success:fnCallback,
error:fnErrorHandler
});
};








vp.http.populateNodeWithHTML=function $vpfn_xEjIvmxrtkWK9vKDRBsRiA512$31(vNodeOrId,sHTML)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
var oNode=vp.core.getElement(vNodeOrId,"vp.http.populateNodeWithHTML");

oNode.innerHTML=sHTML;


var aScripts=oNode.getElementsByTagName("SCRIPT");
for(var i=0;i<aScripts.length;i++)
{
eval(aScripts[i].innerHTML);
}
};






vp.http.getBrowserMaxURLSize=function $vpfn_qi8E1Rra2tAOKKvUbNKjzw531$31()
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}

return vp.ui.browserSupportsPNG()?1900:760;
};














vp.http.getURLSizedForGET=function $vpfn_1EG5PYnpFla16eoeGvkKCw550$28(vUrl,vPotentiallyLargeParams,fnCallback,bForceSafeUrl,bSamePath)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
var sUrl=vUrl.toString();

if(sUrl.length<vp.http.getBrowserMaxURLSize()&&!bForceSafeUrl)
{
if(fnCallback)
{
fnCallback(sUrl);
return false;
}
else
{
return sUrl;
}
}

var oUrl=new vp.web.URL(sUrl);
var sQueryString;


if(!vPotentiallyLargeParams)
{
sQueryString=oUrl.queryString;
oUrl.queryString="";
}
else
{
var aParams;
if(typeof(vPotentiallyLargeParams)=="string")
{
aParams=[];
aParams.add(vPotentiallyLargeParams);
}
else
{
aParams=vPotentiallyLargeParams;
}

var oData={};
for(var i=0;i<aParams.length;i++)
{
var sValue=oUrl.getItem(aParams[i]);

if(sValue)
{
oData[aParams[i]]=sValue;
oUrl.removeItem(aParams[i]);
}
}

sQueryString=vp.web.createQueryString(oData);
}

var oPostData=new vp.web.QueryString();
oPostData.setItem("long_url_storage_data",sQueryString);

var fnCallbackWrapper=function $vpfn_U9MtI3f03mUxD_eN$Eepbw607$28(sResponse)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
var oResponse=vp.http.parseJSON(sResponse);
if(oResponse.isError)
{
throw new Error("Couldn't store text data: "+oResponse.message);
}

oUrl.setItem(vp.http._longURLStorageDataQueryString,oResponse.id);

var sUrl=oUrl.toString();

if(sUrl.length>vp.http.getBrowserMaxURLSize())
{
throw new Error("URL too long for GET");
}

if(fnCallback)
{
fnCallback(oUrl.toString());
return false;
}
else
{
return oUrl.toString();
}
};

var sPath=bSamePath?oUrl.pathname:vp.http._urlDataStorageWebServiceURL;
if(fnCallback)
{
vp.http.postAsync(sPath,oPostData.toString(),fnCallbackWrapper);
return false;
}
else
{
return fnCallbackWrapper(vp.http.post(sPath,oPostData.toString()));
}
};

vp.http._longURLStorageDataQueryString="long_url_storage_id";


vp.http._urlDataStorageWebServiceURL="/services/long-url-storage-service.aspx";


vp.http.serializeJSON=JSON.stringify;







vp.http.parseJSON=function $vpfn_Rv6FC2J3bNggvB8qgUsHdQ661$20(sData)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
if(typeof(sData)==="undefined")
{
return null;
}

try
{
return eval("("+sData+")");
}
catch(ex)
{
throw new Error("Invalid JSON:"+sData);
}
};

if(!window.__td){window.__MT=100;window.__ti=0;window.__td=[];window.__td.length=window.__MT;window.__noTrace=false;


}






if(typeof vp=="undefined")
{
var vp={};
}





if(!vp.text)
{
vp.text={};
}





vp.text.htmlPattern=/<(?:.|\s)*?>/g;








vp.text.hasRtlText=function $vpfn_B71gJiWCMfcyJLGOXIlmgw38$21(sText)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}

if(typeof sText!="string")
{
throw new Error("vp.text.hasRtlText(): Text is null.");
}

var iLen=sText.length;
for(var i=0;i<iLen;i++)
{
if(vp.text.isRtlCode(sText.charCodeAt(i)))
{
return true;
}
}

return false;
};








vp.text.isRtlCode=function $vpfn_p2_UZiIIAYev4BCDBGEnOg65$20(iCode){if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
if(iCode<0x0590){
return false;
}else if(iCode<=0x074f){
return true;
}else if(iCode<0x0780){
return false;
}else if(iCode<=0x07bf){
return true;
}else if(iCode<0xfb1d){
return false;
}else if(iCode<=0xfefc){
return true;
}else{
return false;
}
};







vp.text.stripHtml=function $vpfn_ssWis6FiB9t2CtYdYeWF$w89$20(sText){if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}

if(typeof sText!="string"){
throw new Error("vp.text.stripHtml(): Text is null.");
}


return sText.replace(vp.text.htmlPattern,"");
};







vp.text.stripRtlText=function $vpfn_JZq9SY3GOq0DbhOY$PieQw105$23(sText){if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}

if(typeof sText!="string")
{
throw new Error("vp.text.stripRtlText(): Text is null.");
}

var aOut=[];
var iLen=sText.length;
for(var i=0;i<iLen;i++)
{
if(!vp.text.isRtlCode(sText.charCodeAt(i)))
{
aOut.push(sText.charAt(i));
}
}

return aOut.join("");
};




RegExp.escape=function $vpfn_6gdv$OIx_4gcxA6ziZUPFA128$16(text)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
if(!arguments.callee.sRE)
{
var specials=[
'/','.','*','+','?','|',
'(',')','[',']','{','}','\\',
'$','#','@',' ','%'
];

arguments.callee.sRE=new RegExp('(\\'+specials.join('|\\')+')','g');
}

return text.replace(arguments.callee.sRE,'\\$1');
};










vp.text.replace=function $vpfn_aNKp6CveyrmFDv2jV1W53g153$18(sText,sFind,sReplace,bCaseInsensitive)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
var sRegExp=RegExp.escape(sFind);
var sOptions=bCaseInsensitive?"gi":"g";
var oRegExp=new RegExp(sRegExp,sOptions);
return sText.replace(oRegExp,sReplace);
};







vp.text.trim=function $vpfn_53hS90WrhRqW5jbK6V6d6g167$15(sText){if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}

try
{
sText=sText.toString();
}
catch(e)
{
throw new Error("vp.text.trim(): Argument could not be converted to a string.");
}


return sText.replace(/^\s*(.*?)\s*$/,"$1");
};





String.prototype.trim=function $vpfn_HjimzNhihOAINUiP_aAPdQ186$24(){if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
return vp.text.trim(this);
};








vp.text.truncate=function $vpfn_jQIXagyDYBwxF7qLMyNFfg197$19(sStr,iLen)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
if(sStr.length-3>iLen)
{
return sStr.substr(0,iLen)+"...";
}
else
{
return sStr;
}
};







String.prototype.startsWith=function $vpfn_w29kKAPjHEllt3FxrM8DMQ215$30(sPrefix,bCaseInsensitive)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
if(!sPrefix)
{
return false;
}
if(sPrefix.length>this.length)
{
return false;
}
var sSubject=bCaseInsensitive?this.toLowerCase():this;
var sCompareTo=bCaseInsensitive?sPrefix.toLowerCase():sPrefix;
return sSubject.substring(0,sPrefix.length)===sCompareTo;
};







String.prototype.endsWith=function $vpfn_6zpVmK7MjFlb8zI6bubWAA236$28(sSuffix,bCaseInsensitive)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
if(!sSuffix)
{
return false;
}
if(sSuffix.length>this.length)
{
return false;
}
var sSubject=bCaseInsensitive?this.toLowerCase():this;
var sCompareTo=bCaseInsensitive?sSuffix.toLowerCase():sSuffix;
return sSubject.substring(sSubject.length-sSuffix.length,sSubject.length)===sCompareTo;
};




String.prototype.truncate=function $vpfn_nQj8h8k1aqEkgWxBLNghwg254$28(iLen){if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
return vp.text.truncate(this,iLen);
};





String.prototype.format=function $vpfn_aGam4r8eqh9y4uMjWClWoA262$26()
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
var sStr=this;
for(var i=0;i<arguments.length;i++)
{
var oRe=new RegExp('\\{'+(i)+'\\}','gm');
sStr=sStr.replace(oRe,arguments[i]);
}
return sStr;
};

if(!window.__td){window.__MT=100;window.__ti=0;window.__td=[];window.__td.length=window.__MT;window.__noTrace=false;

}




if(typeof vp=="undefined"){
var vp={};
}





vp.date=function(){};


vp.date.Months=["January","February","March",
"April","May","June","July",
"August","September","October",
"November","December"];

vp.date.Days=["Sunday","Monday","Tuesday",
"Wednesday","Thursday",
"Friday","Saturday"];



































Date.prototype.format=function $vpfn_BtV30JjVz_nqQfdXJb_Uew62$24(sFormat){if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
var sDate=sFormat;


sDate=sDate.replace(/yyyy/gi,this.getFullYear());


sDate=sDate.replace(/yy/gi,this.getFullYear().toString().substring(2,4));


sDate=sDate.replace(/month/gi,vp.date.Months[this.getMonth()]);


sDate=sDate.replace(/mon/gi,vp.date.Months[this.getMonth()].substring(0,3));


sDate=sDate.replace(/mmm/gi,this.getMonth()+1);


sDate=sDate.replace(/hh24/gi,this.getHours());


sDate=sDate.replace(/hh/gi,this.getHours()>12?this.getHours()-12:this.getHours());


var mm=this.getMinutes().toString();
if(mm.length==1){
mm="0"+mm;
}
sDate=sDate.replace(/mm/gi,mm);


var ss=this.getSeconds().toString();
if(ss.length==1)
{
ss="0"+ss;
}
sDate=sDate.replace(/ss/gi,ss);


var ms=this.getMilliseconds().toString();
while(ms.length<4)
{
ms="0"+ms;
}
sDate=sDate.replace(/ms/gi,ms);


sDate=sDate.replace(/ddd/gi,vp.date.Days[this.getDay()].substring(0,3));


sDate=sDate.replace(/dd/gi,this.getDate());


sDate=sDate.replace(/day/gi,vp.date.Days[this.getDay()]);


var meridian=this.getHours()<12?'AM':'PM';
sDate=sDate.replace(/meridian/gi,meridian);


var d=new Date();
var tz=d.getTimezoneOffset();
var timezone="";
if(tz<0)
{
timezone="GMT-"+tz/60;
}
else if(tz===0)
{
timezone="GMT";
}
else
{
timezone="GMT+"+tz/60;
}
sDate=sDate.replace(/timezone/gi,timezone);


var minutes=this.getMinutes().toString();


if(minutes.length==1)
{
minutes="0"+minutes;
}
var time24=this.getHours()+":"+minutes;
sDate=sDate.replace(/time24/gi,time24);


var time=this.getHours()+":"+minutes+meridian;
sDate=sDate.replace(/time/gi,time);

return sDate;
};






Date.prototype.toShortDateString=function $vpfn_XPcfYyG1$c5TeEyTvvUuGg163$35()
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
return this.format('mmm/dd/yyyy');
};






Date.prototype.toShortTimeString=function $vpfn_q0rycWDPZrtE9kY5xQVBWw173$35()
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
return this.format('hh:mm meridian');
};


var DateInterval={
Day:'d',
DayOfYear:'y',
Hour:'h',
Minute:'n',
Month:'m',
Quarter:'q',
Second:'s',
Weekday:'w',
WeekOfYear:'ww',
Year:'yyyy',
Millisecond:'ss'
};








Date.prototype.addInterval=function $vpfn_8MtecfaM9d2AfwfpyZDylg200$29(iValue,sInterval)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
var iYears=0,iMonths=0,iDays=0,iHours=0,iMinutes=0,iSeconds=0,nMilliseconds=0;

switch(sInterval)
{
case DateInterval.Year:
iYears=iValue;
break;
case DateInterval.Month:
iMonths=iValue;
break;
case DateInterval.Day:
iDays=iValue;
break;
case DateInterval.Hour:
iHours=iValue;
break;
case DateInterval.Minute:
iMinutes=iValue;
break;
case DateInterval.Second:
iSeconds=iValue;
break;
case DateInterval.Millisecond:
nMilliseconds=iValue;
break;
default:
break;
}

return new Date(this.getFullYear()+iYears,this.getMonth()+iMonths,this.getDate()+iDays,this.getHours()+iHours,this.getMinutes()+iMinutes,this.getSeconds()+iSeconds,this.getMilliseconds()+nMilliseconds);
};







Date.prototype.addMilliseconds=function $vpfn_oi5kW2DugDXtXGa5n8ivtg240$33(iValue)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
return this.addInterval(iValue,DateInterval.Millisecond);
};







Date.prototype.addSeconds=function $vpfn_sq$NCM43cXp5PJlAwWOl9A251$28(iValue)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
return this.addInterval(iValue,DateInterval.Second);
};







Date.prototype.addMinutes=function $vpfn_o7ve7Rui9utFD5hQ$EyUvA262$28(iValue)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
return this.addInterval(iValue,DateInterval.Minute);
};







Date.prototype.addHours=function $vpfn_zvUn4b4g$o39y7v7RXOPDg273$26(iValue)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
return this.addInterval(iValue,DateInterval.Hour);
};







Date.prototype.addDays=function $vpfn_rEASraTkt8bx_6F4jbfKsg284$25(iValue)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
return this.addInterval(iValue,DateInterval.Day);
};







Date.prototype.addMonths=function $vpfn_v3tgQr9m$AE5S0v6WqgjDw295$27(iValue)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
return this.addInterval(iValue,DateInterval.Month);
};







Date.prototype.addYears=function $vpfn_OabLU61VBB7n7LsdUIQzUw306$26(iValue)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
return this.addInterval(iValue,DateInterval.Year);
};










Date.prototype.formatDotNet=function $vpfn_bDFsEryOGgKO$QbsbgOfzg320$30(sFormat)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
if(typeof(sFormat)=="undefined")
{
return this.toUTCString().replace("UTC","GMT");
}

var sDate=sFormat;


var dd=this.getDate().toString();
if(dd.length==1)
{
dd="0"+dd;
}
sDate=sDate.replace(/dd/,dd);


sDate=sDate.replace(/d/,this.getDate());


var MM=(this.getMonth()+1).toString();
if(MM.length==1)
{
MM="0"+MM;
}
sDate=sDate.replace(/MM/,MM);


sDate=sDate.replace(/M/,this.getMonth()+1);


sDate=sDate.replace(/yyyy/,this.getFullYear());


sDate=sDate.replace(/HH/,this.getHours());


sDate=sDate.replace(/h/,this.getHours()>12?this.getHours()-12:this.getHours());


var mm=this.getMinutes().toString();
if(mm.length==1)
{
mm="0"+mm;
}
sDate=sDate.replace(/mm/,mm);


var meridian=this.getHours()<12?'AM':'PM';
sDate=sDate.replace(/tt/,meridian);

return sDate;
};








Date.prototype.toLocalFormattedString=function $vpfn_urayDFTA1dBj40SUBGWBAQ382$40(sFormat)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
var oDate=this.addMinutes(-this.getTimezoneOffset());
return oDate.formatDotNet(sFormat);
};

if(!window.__td){window.__MT=100;window.__ti=0;window.__td=[];window.__td.length=window.__MT;window.__noTrace=false;

}




if(typeof vp=="undefined"){
var vp={};
}





vp.validate={};






vp.validate.email=function $vpfn_neQde68CWOofR8HbC$JQeA23$20(sEmail)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
var oRegex=/^([a-zA-Z0-9_\+\-\.\']+)@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.)|(([a-zA-Z0-9\-]+\.)+))([a-zA-Z]{2,4}|[0-9]{1,4})(\]?)$/;
return sEmail.search(oRegex)===0;
};






vp.validate.website=function $vpfn_MW4zCPs7jDCMQ7U6BwIG8w34$22(sWeb)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
var regExpObj=/^(http[s]{0,1}\:\/\/)?(?:[a-zA-Z0-9\-]+\.){0,5}[a-zA-Z0-9\-]{1,}\.[a-zA-Z]{2,4}(\:[0-9]+)?(\/\S*)?$/;
return sWeb.search(regExpObj)===0;
};










;(function(){


var undefined;


var arrayPool=[],
objectPool=[];


var idCounter=0;


var indicatorObject={};


var keyPrefix=+new Date+'';


var largeArraySize=75;


var maxPoolSize=40;


var whitespace=(

' \t\x0B\f\xA0\ufeff'+


'\n\r\u2028\u2029'+


'\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000'
);


var reEmptyStringLeading=/\b__p \+= '';/g,
reEmptyStringMiddle=/\b(__p \+=) '' \+/g,
reEmptyStringTrailing=/(__e\(.*?\)|\b__t\)) \+\n'';/g;





var reEsTemplate=/\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g;


var reFlags=/\w*$/;


var reFuncName=/^\s*function[ \n\r\t]+\w/;


var reInterpolate=/<%=([\s\S]+?)%>/g;


var reLeadingSpacesAndZeros=RegExp('^['+whitespace+']*0+(?=.$)');


var reNoMatch=/($^)/;


var reThis=/\bthis\b/;


var reUnescapedString=/['\n\r\t\u2028\u2029\\]/g;


var contextProps=[
'Array','Boolean','Date','Error','Function','Math','Number','Object',
'RegExp','String','_','attachEvent','clearTimeout','isFinite','isNaN',
'parseInt','setImmediate','setTimeout'
];


var shadowedProps=[
'constructor','hasOwnProperty','isPrototypeOf','propertyIsEnumerable',
'toLocaleString','toString','valueOf'
];


var templateCounter=0;


var argsClass='[object Arguments]',
arrayClass='[object Array]',
boolClass='[object Boolean]',
dateClass='[object Date]',
errorClass='[object Error]',
funcClass='[object Function]',
numberClass='[object Number]',
objectClass='[object Object]',
regexpClass='[object RegExp]',
stringClass='[object String]';


var cloneableClasses={};
cloneableClasses[funcClass]=false;
cloneableClasses[argsClass]=cloneableClasses[arrayClass]=
cloneableClasses[boolClass]=cloneableClasses[dateClass]=
cloneableClasses[numberClass]=cloneableClasses[objectClass]=
cloneableClasses[regexpClass]=cloneableClasses[stringClass]=true;


var debounceOptions={
'leading':false,
'maxWait':0,
'trailing':false
};


var descriptor={
'configurable':false,
'enumerable':false,
'value':null,
'writable':false
};


var iteratorData={
'args':'',
'array':null,
'bottom':'',
'firstArg':'',
'init':'',
'keys':null,
'loop':'',
'shadowedProps':null,
'support':null,
'top':'',
'useHas':false
};


var objectTypes={
'boolean':false,
'function':true,
'object':true,
'number':false,
'string':false,
'undefined':false
};


var stringEscapes={
'\\':'\\',
"'":"'",
'\n':'n',
'\r':'r',
'\t':'t',
'\u2028':'u2028',
'\u2029':'u2029'
};


var root=(objectTypes[typeof window]&&window)||this;


var freeExports=objectTypes[typeof exports]&&exports&&!exports.nodeType&&exports;


var freeModule=objectTypes[typeof module]&&module&&!module.nodeType&&module;


var moduleExports=freeModule&&freeModule.exports===freeExports&&freeExports;


var freeGlobal=objectTypes[typeof global]&&global;
if(freeGlobal&&(freeGlobal.global===freeGlobal||freeGlobal.window===freeGlobal)){
root=freeGlobal;
}













function baseIndexOf(array,value,fromIndex){
var index=(fromIndex||0)-1,
length=array?array.length:0;

while(++index<length){
if(array[index]===value){
return index;
}
}
return-1;
}










function cacheIndexOf(cache,value){
var type=typeof value;
cache=cache.cache;

if(type=='boolean'||value==null){
return cache[value]?0:-1;
}
if(type!='number'&&type!='string'){
type='object';
}
var key=type=='number'?value:keyPrefix+value;
cache=(cache=cache[type])&&cache[key];

return type=='object'
?(cache&&baseIndexOf(cache,value)>-1?0:-1)
:(cache?0:-1);
}







function cachePush(value){
var cache=this.cache,
type=typeof value;

if(type=='boolean'||value==null){
cache[value]=true;
}else{
if(type!='number'&&type!='string'){
type='object';
}
var key=type=='number'?value:keyPrefix+value,
typeCache=cache[type]||(cache[type]={});

if(type=='object'){
(typeCache[key]||(typeCache[key]=[])).push(value);
}else{
typeCache[key]=true;
}
}
}









function charAtCallback(value){
return value.charCodeAt(0);
}










function compareAscending(a,b){
var ac=a.criteria,
bc=b.criteria;



if(ac!==bc){
if(ac>bc||typeof ac=='undefined'){
return 1;
}
if(ac<bc||typeof bc=='undefined'){
return-1;
}
}




return a.index-b.index;
}








function createCache(array){
var index=-1,
length=array.length,
first=array[0],
mid=array[(length/2)|0],
last=array[length-1];

if(first&&typeof first=='object'&&
mid&&typeof mid=='object'&&last&&typeof last=='object'){
return false;
}
var cache=getObject();
cache['false']=cache['null']=cache['true']=cache['undefined']=false;

var result=getObject();
result.array=array;
result.cache=cache;
result.push=cachePush;

while(++index<length){
result.push(array[index]);
}
return result;
}









function escapeStringChar(match){
return'\\'+stringEscapes[match];
}







function getArray(){
return arrayPool.pop()||[];
}







function getObject(){
return objectPool.pop()||{
'array':null,
'cache':null,
'criteria':null,
'false':false,
'index':0,
'null':false,
'number':null,
'object':null,
'push':null,
'string':null,
'true':false,
'undefined':false,
'value':null
};
}








function isNode(value){


return typeof value.toString!='function'&&typeof(value+'')=='string';
}







function releaseArray(array){
array.length=0;
if(arrayPool.length<maxPoolSize){
arrayPool.push(array);
}
}







function releaseObject(object){
var cache=object.cache;
if(cache){
releaseObject(cache);
}
object.array=object.cache=object.criteria=object.object=object.number=object.string=object.value=null;
if(objectPool.length<maxPoolSize){
objectPool.push(object);
}
}














function slice(array,start,end){
start||(start=0);
if(typeof end=='undefined'){
end=array?array.length:0;
}
var index=-1,
length=end-start||0,
result=Array(length<0?0:length);

while(++index<length){
result[index]=array[start+index];
}
return result;
}












function runInContext(context){




context=context?_.defaults(root.Object(),context,_.pick(root,contextProps)):root;


var Array=context.Array,
Boolean=context.Boolean,
Date=context.Date,
Error=context.Error,
Function=context.Function,
Math=context.Math,
Number=context.Number,
Object=context.Object,
RegExp=context.RegExp,
String=context.String,
TypeError=context.TypeError;







var arrayRef=[];


var errorProto=Error.prototype,
objectProto=Object.prototype,
stringProto=String.prototype;


var oldDash=context._;


var toString=objectProto.toString;


var reNative=RegExp('^'+
String(toString)
.replace(/[.*+?^${}()|[\]\\]/g,'\\$&')
.replace(/toString| for [^\]]+/g,'.*?')+'$'
);


var ceil=Math.ceil,
clearTimeout=context.clearTimeout,
floor=Math.floor,
fnToString=Function.prototype.toString,
getPrototypeOf=reNative.test(getPrototypeOf=Object.getPrototypeOf)&&getPrototypeOf,
hasOwnProperty=objectProto.hasOwnProperty,
now=reNative.test(now=Date.now)&&now||function(){return+new Date;},
push=arrayRef.push,
propertyIsEnumerable=objectProto.propertyIsEnumerable,
setTimeout=context.setTimeout,
splice=arrayRef.splice;


var setImmediate=typeof(setImmediate=freeGlobal&&moduleExports&&freeGlobal.setImmediate)=='function'&&
!reNative.test(setImmediate)&&setImmediate;


var defineProperty=(function(){

try{
var o={},
func=reNative.test(func=Object.defineProperty)&&func,
result=func(o,o,o)&&func;
}catch(e){}
return result;
}());


var nativeCreate=reNative.test(nativeCreate=Object.create)&&nativeCreate,
nativeIsArray=reNative.test(nativeIsArray=Array.isArray)&&nativeIsArray,
nativeIsFinite=context.isFinite,
nativeIsNaN=context.isNaN,
nativeKeys=reNative.test(nativeKeys=Object.keys)&&nativeKeys,
nativeMax=Math.max,
nativeMin=Math.min,
nativeParseInt=context.parseInt,
nativeRandom=Math.random;


var ctorByClass={};
ctorByClass[arrayClass]=Array;
ctorByClass[boolClass]=Boolean;
ctorByClass[dateClass]=Date;
ctorByClass[funcClass]=Function;
ctorByClass[objectClass]=Object;
ctorByClass[numberClass]=Number;
ctorByClass[regexpClass]=RegExp;
ctorByClass[stringClass]=String;


var nonEnumProps={};
nonEnumProps[arrayClass]=nonEnumProps[dateClass]=nonEnumProps[numberClass]={'constructor':true,'toLocaleString':true,'toString':true,'valueOf':true};
nonEnumProps[boolClass]=nonEnumProps[stringClass]={'constructor':true,'toString':true,'valueOf':true};
nonEnumProps[errorClass]=nonEnumProps[funcClass]=nonEnumProps[regexpClass]={'constructor':true,'toString':true};
nonEnumProps[objectClass]={'constructor':true};

(function(){
var length=shadowedProps.length;
while(length--){
var key=shadowedProps[length];
for(var className in nonEnumProps){
if(hasOwnProperty.call(nonEnumProps,className)&&!hasOwnProperty.call(nonEnumProps[className],key)){
nonEnumProps[className][key]=false;
}
}
}
}());




































































function lodash(value){

return(value&&typeof value=='object'&&!isArray(value)&&hasOwnProperty.call(value,'__wrapped__'))
?value
:new lodashWrapper(value);
}









function lodashWrapper(value,chainAll){
this.__chain__=!!chainAll;
this.__wrapped__=value;
}

lodashWrapper.prototype=lodash.prototype;








var support=lodash.support={};

(function(){
var ctor=function(){this.x=1;},
object={'0':1,'length':1},
props=[];

ctor.prototype={'valueOf':1,'y':1};
for(var key in new ctor){props.push(key);}
for(key in arguments){}







support.argsClass=toString.call(arguments)==argsClass;







support.argsObject=arguments.constructor==Object&&!(arguments instanceof Array);








support.enumErrorProps=propertyIsEnumerable.call(errorProto,'message')||propertyIsEnumerable.call(errorProto,'name');












support.enumPrototypes=propertyIsEnumerable.call(ctor,'prototype');








support.funcDecomp=!reNative.test(context.WinRTError)&&reThis.test(runInContext);







support.funcNames=typeof Function.name=='string';








support.nonEnumArgs=key!=0;










support.nonEnumShadows=!/valueOf/.test(props);







support.ownLast=props[0]!='x';













support.spliceObjects=(arrayRef.splice.call(object,0,1),!object[0]);










support.unindexedChars=('x'[0]+Object('x')[0])!='xx';









try{
support.nodeClass=!(toString.call(document)==objectClass&&!({'toString':0}+''));
}catch(e){
support.nodeClass=true;
}
}(1));










lodash.templateSettings={







'escape':/<%-([\s\S]+?)%>/g,







'evaluate':/<%([\s\S]+?)%>/g,







'interpolate':reInterpolate,







'variable':'',







'imports':{







'_':lodash
}
};










var iteratorTemplate=function(obj){

var __p='var index, iterable = '+
(obj.firstArg)+
', result = '+
(obj.init)+
';\nif (!iterable) return result;\n'+
(obj.top)+
';';
if(obj.array){
__p+='\nvar length = iterable.length; index = -1;\nif ('+
(obj.array)+
') {  ';
if(support.unindexedChars){
__p+='\n  if (isString(iterable)) {\n    iterable = iterable.split(\'\')\n  }  ';
}
__p+='\n  while (++index < length) {\n    '+
(obj.loop)+
';\n  }\n}\nelse {  ';
}else if(support.nonEnumArgs){
__p+='\n  var length = iterable.length; index = -1;\n  if (length && isArguments(iterable)) {\n    while (++index < length) {\n      index += \'\';\n      '+
(obj.loop)+
';\n    }\n  } else {  ';
}

if(support.enumPrototypes){
__p+='\n  var skipProto = typeof iterable == \'function\';\n  ';
}

if(support.enumErrorProps){
__p+='\n  var skipErrorProps = iterable === errorProto || iterable instanceof Error;\n  ';
}

var conditions=[];if(support.enumPrototypes){conditions.push('!(skipProto && index == "prototype")');}if(support.enumErrorProps){conditions.push('!(skipErrorProps && (index == "message" || index == "name"))');}

if(obj.useHas&&obj.keys){
__p+='\n  var ownIndex = -1,\n      ownProps = objectTypes[typeof iterable] && keys(iterable),\n      length = ownProps ? ownProps.length : 0;\n\n  while (++ownIndex < length) {\n    index = ownProps[ownIndex];\n';
if(conditions.length){
__p+='    if ('+
(conditions.join(' && '))+
') {\n  ';
}
__p+=
(obj.loop)+
';    ';
if(conditions.length){
__p+='\n    }';
}
__p+='\n  }  ';
}else{
__p+='\n  for (index in iterable) {\n';
if(obj.useHas){conditions.push("hasOwnProperty.call(iterable, index)");}if(conditions.length){
__p+='    if ('+
(conditions.join(' && '))+
') {\n  ';
}
__p+=
(obj.loop)+
';    ';
if(conditions.length){
__p+='\n    }';
}
__p+='\n  }    ';
if(support.nonEnumShadows){
__p+='\n\n  if (iterable !== objectProto) {\n    var ctor = iterable.constructor,\n        isProto = iterable === (ctor && ctor.prototype),\n        className = iterable === stringProto ? stringClass : iterable === errorProto ? errorClass : toString.call(iterable),\n        nonEnum = nonEnumProps[className];\n      ';
for(k=0;k<7;k++){
__p+='\n    index = \''+
(obj.shadowedProps[k])+
'\';\n    if ((!(isProto && nonEnum[index]) && hasOwnProperty.call(iterable, index))';
if(!obj.useHas){
__p+=' || (!nonEnum[index] && iterable[index] !== objectProto[index])';
}
__p+=') {\n      '+
(obj.loop)+
';\n    }      ';
}
__p+='\n  }    ';
}

}

if(obj.array||support.nonEnumArgs){
__p+='\n}';
}
__p+=
(obj.bottom)+
';\nreturn result';

return __p
};











function baseBind(bindData){
var func=bindData[0],
partialArgs=bindData[2],
thisArg=bindData[4];

function bound(){


if(partialArgs){
var args=partialArgs.slice();
push.apply(args,arguments);
}


if(this instanceof bound){

var thisBinding=baseCreate(func.prototype),
result=func.apply(thisBinding,args||arguments);
return isObject(result)?result:thisBinding;
}
return func.apply(thisArg,args||arguments);
}
setBindData(bound,bindData);
return bound;
}













function baseClone(value,isDeep,callback,stackA,stackB){
if(callback){
var result=callback(value);
if(typeof result!='undefined'){
return result;
}
}

var isObj=isObject(value);
if(isObj){
var className=toString.call(value);
if(!cloneableClasses[className]||(!support.nodeClass&&isNode(value))){
return value;
}
var ctor=ctorByClass[className];
switch(className){
case boolClass:
case dateClass:
return new ctor(+value);

case numberClass:
case stringClass:
return new ctor(value);

case regexpClass:
result=ctor(value.source,reFlags.exec(value));
result.lastIndex=value.lastIndex;
return result;
}
}else{
return value;
}
var isArr=isArray(value);
if(isDeep){

var initedStack=!stackA;
stackA||(stackA=getArray());
stackB||(stackB=getArray());

var length=stackA.length;
while(length--){
if(stackA[length]==value){
return stackB[length];
}
}
result=isArr?ctor(value.length):{};
}
else{
result=isArr?slice(value):assign({},value);
}

if(isArr){
if(hasOwnProperty.call(value,'index')){
result.index=value.index;
}
if(hasOwnProperty.call(value,'input')){
result.input=value.input;
}
}

if(!isDeep){
return result;
}


stackA.push(value);
stackB.push(result);


(isArr?baseEach:forOwn)(value,function(objValue,key){
result[key]=baseClone(objValue,isDeep,callback,stackA,stackB);
});

if(initedStack){
releaseArray(stackA);
releaseArray(stackB);
}
return result;
}









function baseCreate(prototype,properties){
return isObject(prototype)?nativeCreate(prototype):{};
}

if(!nativeCreate){
baseCreate=(function(){
function Object(){}
return function(prototype){
if(isObject(prototype)){
Object.prototype=prototype;
var result=new Object;
Object.prototype=null;
}
return result||context.Object();
};
}());
}











function baseCreateCallback(func,thisArg,argCount){
if(typeof func!='function'){
return identity;
}

if(typeof thisArg=='undefined'||!('prototype'in func)){
return func;
}
var bindData=func.__bindData__;
if(typeof bindData=='undefined'){
if(support.funcNames){
bindData=!func.name;
}
bindData=bindData||!support.funcDecomp;
if(!bindData){
var source=fnToString.call(func);
if(!support.funcNames){
bindData=!reFuncName.test(source);
}
if(!bindData){

bindData=reThis.test(source);
setBindData(func,bindData);
}
}
}

if(bindData===false||(bindData!==true&&bindData[1]&1)){
return func;
}
switch(argCount){
case 1:return function(value){
return func.call(thisArg,value);
};
case 2:return function(a,b){
return func.call(thisArg,a,b);
};
case 3:return function(value,index,collection){
return func.call(thisArg,value,index,collection);
};
case 4:return function(accumulator,value,index,collection){
return func.call(thisArg,accumulator,value,index,collection);
};
}
return bind(func,thisArg);
}









function baseCreateWrapper(bindData){
var func=bindData[0],
bitmask=bindData[1],
partialArgs=bindData[2],
partialRightArgs=bindData[3],
thisArg=bindData[4],
arity=bindData[5];

var isBind=bitmask&1,
isBindKey=bitmask&2,
isCurry=bitmask&4,
isCurryBound=bitmask&8,
key=func;

function bound(){
var thisBinding=isBind?thisArg:this;
if(partialArgs){
var args=partialArgs.slice();
push.apply(args,arguments);
}
if(partialRightArgs||isCurry){
args||(args=slice(arguments));
if(partialRightArgs){
push.apply(args,partialRightArgs);
}
if(isCurry&&args.length<arity){
bitmask|=16&~32;
return baseCreateWrapper([func,(isCurryBound?bitmask:bitmask&~3),args,null,thisArg,arity]);
}
}
args||(args=arguments);
if(isBindKey){
func=thisBinding[key];
}
if(this instanceof bound){
thisBinding=baseCreate(func.prototype);
var result=func.apply(thisBinding,args);
return isObject(result)?result:thisBinding;
}
return func.apply(thisBinding,args);
}
setBindData(bound,bindData);
return bound;
}










function baseDifference(array,values){
var index=-1,
indexOf=getIndexOf(),
length=array?array.length:0,
isLarge=length>=largeArraySize&&indexOf===baseIndexOf,
result=[];

if(isLarge){
var cache=createCache(values);
if(cache){
indexOf=cacheIndexOf;
values=cache;
}else{
isLarge=false;
}
}
while(++index<length){
var value=array[index];
if(indexOf(values,value)<0){
result.push(value);
}
}
if(isLarge){
releaseObject(values);
}
return result;
}












function baseFlatten(array,isShallow,isStrict,fromIndex){
var index=(fromIndex||0)-1,
length=array?array.length:0,
result=[];

while(++index<length){
var value=array[index];

if(value&&typeof value=='object'&&typeof value.length=='number'
&&(isArray(value)||isArguments(value))){

if(!isShallow){
value=baseFlatten(value,isShallow,isStrict);
}
var valIndex=-1,
valLength=value.length,
resIndex=result.length;

result.length+=valLength;
while(++valIndex<valLength){
result[resIndex++]=value[valIndex];
}
}else if(!isStrict){
result.push(value);
}
}
return result;
}














function baseIsEqual(a,b,callback,isWhere,stackA,stackB){

if(callback){
var result=callback(a,b);
if(typeof result!='undefined'){
return!!result;
}
}

if(a===b){

return a!==0||(1/a==1/b);
}
var type=typeof a,
otherType=typeof b;


if(a===a&&
!(a&&objectTypes[type])&&
!(b&&objectTypes[otherType])){
return false;
}


if(a==null||b==null){
return a===b;
}

var className=toString.call(a),
otherClass=toString.call(b);

if(className==argsClass){
className=objectClass;
}
if(otherClass==argsClass){
otherClass=objectClass;
}
if(className!=otherClass){
return false;
}
switch(className){
case boolClass:
case dateClass:


return+a==+b;

case numberClass:

return(a!=+a)
?b!=+b

:(a==0?(1/a==1/b):a==+b);

case regexpClass:
case stringClass:


return a==String(b);
}
var isArr=className==arrayClass;
if(!isArr){

var aWrapped=hasOwnProperty.call(a,'__wrapped__'),
bWrapped=hasOwnProperty.call(b,'__wrapped__');

if(aWrapped||bWrapped){
return baseIsEqual(aWrapped?a.__wrapped__:a,bWrapped?b.__wrapped__:b,callback,isWhere,stackA,stackB);
}

if(className!=objectClass||(!support.nodeClass&&(isNode(a)||isNode(b)))){
return false;
}

var ctorA=!support.argsObject&&isArguments(a)?Object:a.constructor,
ctorB=!support.argsObject&&isArguments(b)?Object:b.constructor;


if(ctorA!=ctorB&&
!(isFunction(ctorA)&&ctorA instanceof ctorA&&isFunction(ctorB)&&ctorB instanceof ctorB)&&
('constructor'in a&&'constructor'in b)
){
return false;
}
}



var initedStack=!stackA;
stackA||(stackA=getArray());
stackB||(stackB=getArray());

var length=stackA.length;
while(length--){
if(stackA[length]==a){
return stackB[length]==b;
}
}
var size=0;
result=true;


stackA.push(a);
stackB.push(b);


if(isArr){
length=a.length;
size=b.length;


result=size==a.length;
if(!result&&!isWhere){
return result;
}

while(size--){
var index=length,
value=b[size];

if(isWhere){
while(index--){
if((result=baseIsEqual(a[index],value,callback,isWhere,stackA,stackB))){
break;
}
}
}else if(!(result=baseIsEqual(a[size],value,callback,isWhere,stackA,stackB))){
break;
}
}
return result;
}


forIn(b,function(value,key,b){
if(hasOwnProperty.call(b,key)){

size++;

return(result=hasOwnProperty.call(a,key)&&baseIsEqual(a[key],value,callback,isWhere,stackA,stackB));
}
});

if(result&&!isWhere){

forIn(a,function(value,key,a){
if(hasOwnProperty.call(a,key)){

return(result=--size>-1);
}
});
}
if(initedStack){
releaseArray(stackA);
releaseArray(stackB);
}
return result;
}












function baseMerge(object,source,callback,stackA,stackB){
(isArray(source)?forEach:forOwn)(source,function(source,key){
var found,
isArr,
result=source,
value=object[key];

if(source&&((isArr=isArray(source))||isPlainObject(source))){

var stackLength=stackA.length;
while(stackLength--){
if((found=stackA[stackLength]==source)){
value=stackB[stackLength];
break;
}
}
if(!found){
var isShallow;
if(callback){
result=callback(value,source);
if((isShallow=typeof result!='undefined')){
value=result;
}
}
if(!isShallow){
value=isArr
?(isArray(value)?value:[])
:(isPlainObject(value)?value:{});
}

stackA.push(source);
stackB.push(value);


if(!isShallow){
baseMerge(value,source,callback,stackA,stackB);
}
}
}
else{
if(callback){
result=callback(value,source);
if(typeof result=='undefined'){
result=source;
}
}
if(typeof result!='undefined'){
value=result;
}
}
object[key]=value;
});
}










function baseRandom(min,max){
return min+floor(nativeRandom()*(max-min+1));
}











function baseUniq(array,isSorted,callback){
var index=-1,
indexOf=getIndexOf(),
length=array?array.length:0,
result=[];

var isLarge=!isSorted&&length>=largeArraySize&&indexOf===baseIndexOf,
seen=(callback||isLarge)?getArray():result;

if(isLarge){
var cache=createCache(seen);
if(cache){
indexOf=cacheIndexOf;
seen=cache;
}else{
isLarge=false;
seen=callback?seen:(releaseArray(seen),result);
}
}
while(++index<length){
var value=array[index],
computed=callback?callback(value,index,array):value;

if(isSorted
?!index||seen[seen.length-1]!==computed
:indexOf(seen,computed)<0
){
if(callback||isLarge){
seen.push(computed);
}
result.push(value);
}
}
if(isLarge){
releaseArray(seen.array);
releaseObject(seen);
}else if(callback){
releaseArray(seen);
}
return result;
}











function createAggregator(setter){
return function(collection,callback,thisArg){
var result={};
callback=lodash.createCallback(callback,thisArg,3);

if(isArray(collection)){
var index=-1,
length=collection.length;

while(++index<length){
var value=collection[index];
setter(result,value,callback(value,index,collection),collection);
}
}else{
baseEach(collection,function(value,key,collection){
setter(result,value,callback(value,key,collection),collection);
});
}
return result;
};
}























function createWrapper(func,bitmask,partialArgs,partialRightArgs,thisArg,arity){
var isBind=bitmask&1,
isBindKey=bitmask&2,
isCurry=bitmask&4,
isCurryBound=bitmask&8,
isPartial=bitmask&16,
isPartialRight=bitmask&32;

if(!isBindKey&&!isFunction(func)){
throw new TypeError;
}
if(isPartial&&!partialArgs.length){
bitmask&=~16;
isPartial=partialArgs=false;
}
if(isPartialRight&&!partialRightArgs.length){
bitmask&=~32;
isPartialRight=partialRightArgs=false;
}
var bindData=func&&func.__bindData__;
if(bindData&&bindData!==true){
bindData=bindData.slice();


if(isBind&&!(bindData[1]&1)){
bindData[4]=thisArg;
}

if(!isBind&&bindData[1]&1){
bitmask|=8;
}

if(isCurry&&!(bindData[1]&4)){
bindData[5]=arity;
}

if(isPartial){
push.apply(bindData[2]||(bindData[2]=[]),partialArgs);
}

if(isPartialRight){
push.apply(bindData[3]||(bindData[3]=[]),partialRightArgs);
}

bindData[1]|=bitmask;
return createWrapper.apply(null,bindData);
}

var creater=(bitmask==1||bitmask===17)?baseBind:baseCreateWrapper;
return creater([func,bitmask,partialArgs,partialRightArgs,thisArg,arity]);
}















function createIterator(){

iteratorData.shadowedProps=shadowedProps;


iteratorData.array=iteratorData.bottom=iteratorData.loop=iteratorData.top='';
iteratorData.init='iterable';
iteratorData.useHas=true;


for(var object,index=0;object=arguments[index];index++){
for(var key in object){
iteratorData[key]=object[key];
}
}
var args=iteratorData.args;
iteratorData.firstArg=/^[^,]+/.exec(args)[0];


var factory=Function(
'baseCreateCallback, errorClass, errorProto, hasOwnProperty, '+
'indicatorObject, isArguments, isArray, isString, keys, objectProto, '+
'objectTypes, nonEnumProps, stringClass, stringProto, toString',
'return function('+args+') {\n'+iteratorTemplate(iteratorData)+'\n}'
);


return factory(
baseCreateCallback,errorClass,errorProto,hasOwnProperty,
indicatorObject,isArguments,isArray,isString,iteratorData.keys,objectProto,
objectTypes,nonEnumProps,stringClass,stringProto,toString
);
}








function escapeHtmlChar(match){
return htmlEscapes[match];
}









function getIndexOf(){
var result=(result=lodash.indexOf)===indexOf?baseIndexOf:result;
return result;
}








var setBindData=!defineProperty?noop:function(func,value){
descriptor.value=value;
defineProperty(func,'__bindData__',descriptor);
};











function shimIsPlainObject(value){
var ctor,
result;


if(!(value&&toString.call(value)==objectClass)||
(ctor=value.constructor,isFunction(ctor)&&!(ctor instanceof ctor))||
(!support.argsClass&&isArguments(value))||
(!support.nodeClass&&isNode(value))){
return false;
}



if(support.ownLast){
forIn(value,function(value,key,object){
result=hasOwnProperty.call(object,key);
return false;
});
return result!==false;
}



forIn(value,function(value,key){
result=key;
});
return typeof result=='undefined'||hasOwnProperty.call(value,result);
}








function unescapeHtmlChar(match){
return htmlUnescapes[match];
}



















function isArguments(value){
return value&&typeof value=='object'&&typeof value.length=='number'&&
toString.call(value)==argsClass||false;
}

if(!support.argsClass){
isArguments=function(value){
return value&&typeof value=='object'&&typeof value.length=='number'&&
hasOwnProperty.call(value,'callee')&&!propertyIsEnumerable.call(value,'callee')||false;
};
}


















var isArray=nativeIsArray||function(value){
return value&&typeof value=='object'&&typeof value.length=='number'&&
toString.call(value)==arrayClass||false;
};










var shimKeys=createIterator({
'args':'object',
'init':'[]',
'top':'if (!(objectTypes[typeof object])) return result',
'loop':'result.push(index)'
});














var keys=!nativeKeys?shimKeys:function(object){
if(!isObject(object)){
return[];
}
if((support.enumPrototypes&&typeof object=='function')||
(support.nonEnumArgs&&object.length&&isArguments(object))){
return shimKeys(object);
}
return nativeKeys(object);
};


var eachIteratorOptions={
'args':'collection, callback, thisArg',
'top':"callback = callback && typeof thisArg == 'undefined' ? callback : baseCreateCallback(callback, thisArg, 3)",
'array':"typeof length == 'number'",
'keys':keys,
'loop':'if (callback(iterable[index], index, collection) === false) return result'
};


var defaultsIteratorOptions={
'args':'object, source, guard',
'top':
'var args = arguments,\n'+
'    argsIndex = 0,\n'+
"    argsLength = typeof guard == 'number' ? 2 : args.length;\n"+
'while (++argsIndex < argsLength) {\n'+
'  iterable = args[argsIndex];\n'+
'  if (iterable && objectTypes[typeof iterable]) {',
'keys':keys,
'loop':"if (typeof result[index] == 'undefined') result[index] = iterable[index]",
'bottom':'  }\n}'
};


var forOwnIteratorOptions={
'top':'if (!objectTypes[typeof iterable]) return result;\n'+eachIteratorOptions.top,
'array':false
};









var htmlEscapes={
'&':'&amp;',
'<':'&lt;',
'>':'&gt;',
'"':'&quot;',
"'":'&#39;'
};


var htmlUnescapes=invert(htmlEscapes);


var reEscapedHtml=RegExp('('+keys(htmlUnescapes).join('|')+')','g'),
reUnescapedHtml=RegExp('['+keys(htmlEscapes).join('')+']','g');















var baseEach=createIterator(eachIteratorOptions);

































var assign=createIterator(defaultsIteratorOptions,{
'top':
defaultsIteratorOptions.top.replace(';',
';\n'+
"if (argsLength > 3 && typeof args[argsLength - 2] == 'function') {\n"+
'  var callback = baseCreateCallback(args[--argsLength - 1], args[argsLength--], 2);\n'+
"} else if (argsLength > 2 && typeof args[argsLength - 1] == 'function') {\n"+
'  callback = args[--argsLength];\n'+
'}'
),
'loop':'result[index] = callback ? callback(result[index], iterable[index]) : iterable[index]'
});









































function clone(value,isDeep,callback,thisArg){


if(typeof isDeep!='boolean'&&isDeep!=null){
thisArg=callback;
callback=isDeep;
isDeep=false;
}
return baseClone(value,isDeep,typeof callback=='function'&&baseCreateCallback(callback,thisArg,1));
}










































function cloneDeep(value,callback,thisArg){
return baseClone(value,true,typeof callback=='function'&&baseCreateCallback(callback,thisArg,1));
}
































function create(prototype,properties){
var result=baseCreate(prototype);
return properties?assign(result,properties):result;
}





















var defaults=createIterator(defaultsIteratorOptions);










































function findKey(object,callback,thisArg){
var result;
callback=lodash.createCallback(callback,thisArg,3);
forOwn(object,function(value,key,object){
if(callback(value,key,object)){
result=key;
return false;
}
});
return result;
}










































function findLastKey(object,callback,thisArg){
var result;
callback=lodash.createCallback(callback,thisArg,3);
forOwnRight(object,function(value,key,object){
if(callback(value,key,object)){
result=key;
return false;
}
});
return result;
}
































var forIn=createIterator(eachIteratorOptions,forOwnIteratorOptions,{
'useHas':false
});





























function forInRight(object,callback,thisArg){
var pairs=[];

forIn(object,function(value,key){
pairs.push(key,value);
});

var length=pairs.length;
callback=baseCreateCallback(callback,thisArg,3);
while(length--){
if(callback(pairs[length--],pairs[length],object)===false){
break;
}
}
return object;
}






















var forOwn=createIterator(eachIteratorOptions,forOwnIteratorOptions);



















function forOwnRight(object,callback,thisArg){
var props=keys(object),
length=props.length;

callback=baseCreateCallback(callback,thisArg,3);
while(length--){
var key=props[length];
if(callback(object[key],key,object)===false){
break;
}
}
return object;
}
















function functions(object){
var result=[];
forIn(object,function(value,key){
if(isFunction(value)){
result.push(key);
}
});
return result.sort();
}
















function has(object,property){
return object?hasOwnProperty.call(object,property):false;
}














function invert(object){
var index=-1,
props=keys(object),
length=props.length,
result={};

while(++index<length){
var key=props[index];
result[object[key]]=key;
}
return result;
}














function isBoolean(value){
return value===true||value===false||
value&&typeof value=='object'&&toString.call(value)==boolClass||false;
}














function isDate(value){
return value&&typeof value=='object'&&toString.call(value)==dateClass||false;
}














function isElement(value){
return value&&value.nodeType===1||false;
}






















function isEmpty(value){
var result=true;
if(!value){
return result;
}
var className=toString.call(value),
length=value.length;

if((className==arrayClass||className==stringClass||
(support.argsClass?className==argsClass:isArguments(value)))||
(className==objectClass&&typeof length=='number'&&isFunction(value.splice))){
return!length;
}
forOwn(value,function(){
return(result=false);
});
return result;
}







































function isEqual(a,b,callback,thisArg){
return baseIsEqual(a,b,typeof callback=='function'&&baseCreateCallback(callback,thisArg,2));
}





























function isFinite(value){
return nativeIsFinite(value)&&!nativeIsNaN(parseFloat(value));
}














function isFunction(value){
return typeof value=='function';
}

if(isFunction(/x/)){
isFunction=function(value){
return typeof value=='function'&&toString.call(value)==funcClass;
};
}





















function isObject(value){




return!!(value&&objectTypes[typeof value]);
}


























function isNaN(value){


return isNumber(value)&&value!=+value;
}

















function isNull(value){
return value===null;
}
















function isNumber(value){
return typeof value=='number'||
value&&typeof value=='object'&&toString.call(value)==numberClass||false;
}

























var isPlainObject=!getPrototypeOf?shimIsPlainObject:function(value){
if(!(value&&toString.call(value)==objectClass)||(!support.argsClass&&isArguments(value))){
return false;
}
var valueOf=value.valueOf,
objProto=typeof valueOf=='function'&&(objProto=getPrototypeOf(valueOf))&&getPrototypeOf(objProto);

return objProto
?(value==objProto||getPrototypeOf(value)==objProto)
:shimIsPlainObject(value);
};














function isRegExp(value){
return value&&objectTypes[typeof value]&&toString.call(value)==regexpClass||false;
}














function isString(value){
return typeof value=='string'||
value&&typeof value=='object'&&toString.call(value)==stringClass||false;
}














function isUndefined(value){
return typeof value=='undefined';
}




















































function merge(object){
var args=arguments,
length=2;

if(!isObject(object)){
return object;
}



if(typeof args[2]!='number'){
length=args.length;
}
if(length>3&&typeof args[length-2]=='function'){
var callback=baseCreateCallback(args[--length-1],args[length--],2);
}else if(length>2&&typeof args[length-1]=='function'){
callback=args[--length];
}
var sources=slice(arguments,1,length),
index=-1,
stackA=getArray(),
stackB=getArray();

while(++index<length){
baseMerge(object,sources[index],callback,stackA,stackB);
}
releaseArray(stackA);
releaseArray(stackB);
return object;
}



























function omit(object,callback,thisArg){
var result={};
if(typeof callback!='function'){
var props=[];
forIn(object,function(value,key){
props.push(key);
});
props=baseDifference(props,baseFlatten(arguments,true,false,1));

var index=-1,
length=props.length;

while(++index<length){
var key=props[index];
result[key]=object[key];
}
}else{
callback=lodash.createCallback(callback,thisArg,3);
forIn(object,function(value,key,object){
if(!callback(value,key,object)){
result[key]=value;
}
});
}
return result;
}















function pairs(object){
var index=-1,
props=keys(object),
length=props.length,
result=Array(length);

while(++index<length){
var key=props[index];
result[index]=[key,object[key]];
}
return result;
}




























function pick(object,callback,thisArg){
var result={};
if(typeof callback!='function'){
var index=-1,
props=baseFlatten(arguments,true,false,1),
length=isObject(object)?props.length:0;

while(++index<length){
var key=props[index];
if(key in object){
result[key]=object[key];
}
}
}else{
callback=lodash.createCallback(callback,thisArg,3);
forIn(object,function(value,key,object){
if(callback(value,key,object)){
result[key]=value;
}
});
}
return result;
}
































function transform(object,callback,accumulator,thisArg){
var isArr=isArray(object);
if(accumulator==null){
if(isArr){
accumulator=[];
}else{
var ctor=object&&object.constructor,
proto=ctor&&ctor.prototype;

accumulator=baseCreate(proto);
}
}
if(callback){
callback=lodash.createCallback(callback,thisArg,4);
(isArr?baseEach:forOwn)(object,function(value,index,object){
return callback(accumulator,value,index,object);
});
}
return accumulator;
}














function values(object){
var index=-1,
props=keys(object),
length=props.length,
result=Array(length);

while(++index<length){
result[index]=object[props[index]];
}
return result;
}
























function at(collection){
var args=arguments,
index=-1,
props=baseFlatten(args,true,false,1),
length=(args[2]&&args[2][args[1]]===collection)?1:props.length,
result=Array(length);

if(support.unindexedChars&&isString(collection)){
collection=collection.split('');
}
while(++index<length){
result[index]=collection[props[index]];
}
return result;
}




























function contains(collection,target,fromIndex){
var index=-1,
indexOf=getIndexOf(),
length=collection?collection.length:0,
result=false;

fromIndex=(fromIndex<0?nativeMax(0,length+fromIndex):fromIndex)||0;
if(isArray(collection)){
result=indexOf(collection,target,fromIndex)>-1;
}else if(typeof length=='number'){
result=(isString(collection)?collection.indexOf(target,fromIndex):indexOf(collection,target,fromIndex))>-1;
}else{
baseEach(collection,function(value){
if(++index>=fromIndex){
return!(result=value===target);
}
});
}
return result;
}



































var countBy=createAggregator(function(result,value,key){
(hasOwnProperty.call(result,key)?result[key]++:result[key]=1);
});










































function every(collection,callback,thisArg){
var result=true;
callback=lodash.createCallback(callback,thisArg,3);

if(isArray(collection)){
var index=-1,
length=collection.length;

while(++index<length){
if(!(result=!!callback(collection[index],index,collection))){
break;
}
}
}else{
baseEach(collection,function(value,index,collection){
return(result=!!callback(value,index,collection));
});
}
return result;
}









































function filter(collection,callback,thisArg){
var result=[];
callback=lodash.createCallback(callback,thisArg,3);

if(isArray(collection)){
var index=-1,
length=collection.length;

while(++index<length){
var value=collection[index];
if(callback(value,index,collection)){
result.push(value);
}
}
}else{
baseEach(collection,function(value,index,collection){
if(callback(value,index,collection)){
result.push(value);
}
});
}
return result;
}












































function find(collection,callback,thisArg){
callback=lodash.createCallback(callback,thisArg,3);

if(isArray(collection)){
var index=-1,
length=collection.length;

while(++index<length){
var value=collection[index];
if(callback(value,index,collection)){
return value;
}
}
}else{
var result;
baseEach(collection,function(value,index,collection){
if(callback(value,index,collection)){
result=value;
return false;
}
});
return result;
}
}





















function findLast(collection,callback,thisArg){
var result;
callback=lodash.createCallback(callback,thisArg,3);
forEachRight(collection,function(value,index,collection){
if(callback(value,index,collection)){
result=value;
return false;
}
});
return result;
}



























function forEach(collection,callback,thisArg){
if(callback&&typeof thisArg=='undefined'&&isArray(collection)){
var index=-1,
length=collection.length;

while(++index<length){
if(callback(collection[index],index,collection)===false){
break;
}
}
}else{
baseEach(collection,callback,thisArg);
}
return collection;
}


















function forEachRight(collection,callback,thisArg){
var iterable=collection,
length=collection?collection.length:0;

callback=callback&&typeof thisArg=='undefined'?callback:baseCreateCallback(callback,thisArg,3);
if(isArray(collection)){
while(length--){
if(callback(collection[length],length,collection)===false){
break;
}
}
}else{
if(typeof length!='number'){
var props=keys(collection);
length=props.length;
}else if(support.unindexedChars&&isString(collection)){
iterable=collection.split('');
}
baseEach(collection,function(value,key,collection){
key=props?props[--length]:--length;
return callback(iterable[key],key,collection);
});
}
return collection;
}




































var groupBy=createAggregator(function(result,value,key){
(hasOwnProperty.call(result,key)?result[key]:result[key]=[]).push(value);
});








































var indexBy=createAggregator(function(result,value,key){
result[key]=value;
});























function invoke(collection,methodName){
var args=slice(arguments,2),
index=-1,
isFunc=typeof methodName=='function',
length=collection?collection.length:0,
result=Array(typeof length=='number'?length:0);

forEach(collection,function(value){
result[++index]=(isFunc?methodName:value[methodName]).apply(value,args);
});
return result;
}








































function map(collection,callback,thisArg){
var index=-1,
length=collection?collection.length:0,
result=Array(typeof length=='number'?length:0);

callback=lodash.createCallback(callback,thisArg,3);
if(isArray(collection)){
while(++index<length){
result[index]=callback(collection[index],index,collection);
}
}else{
baseEach(collection,function(value,key,collection){
result[++index]=callback(value,key,collection);
});
}
return result;
}









































function max(collection,callback,thisArg){
var computed=-Infinity,
result=computed;



if(typeof callback!='function'&&thisArg&&thisArg[callback]===collection){
callback=null;
}
if(callback==null&&isArray(collection)){
var index=-1,
length=collection.length;

while(++index<length){
var value=collection[index];
if(value>result){
result=value;
}
}
}else{
callback=(callback==null&&isString(collection))
?charAtCallback
:lodash.createCallback(callback,thisArg,3);

baseEach(collection,function(value,index,collection){
var current=callback(value,index,collection);
if(current>computed){
computed=current;
result=value;
}
});
}
return result;
}









































function min(collection,callback,thisArg){
var computed=Infinity,
result=computed;



if(typeof callback!='function'&&thisArg&&thisArg[callback]===collection){
callback=null;
}
if(callback==null&&isArray(collection)){
var index=-1,
length=collection.length;

while(++index<length){
var value=collection[index];
if(value<result){
result=value;
}
}
}else{
callback=(callback==null&&isString(collection))
?charAtCallback
:lodash.createCallback(callback,thisArg,3);

baseEach(collection,function(value,index,collection){
var current=callback(value,index,collection);
if(current<computed){
computed=current;
result=value;
}
});
}
return result;
}





















var pluck=map;































function reduce(collection,callback,accumulator,thisArg){
var noaccum=arguments.length<3;
callback=lodash.createCallback(callback,thisArg,4);

if(isArray(collection)){
var index=-1,
length=collection.length;

if(noaccum){
accumulator=collection[++index];
}
while(++index<length){
accumulator=callback(accumulator,collection[index],index,collection);
}
}else{
baseEach(collection,function(value,index,collection){
accumulator=noaccum
?(noaccum=false,value)
:callback(accumulator,value,index,collection)
});
}
return accumulator;
}




















function reduceRight(collection,callback,accumulator,thisArg){
var noaccum=arguments.length<3;
callback=lodash.createCallback(callback,thisArg,4);
forEachRight(collection,function(value,index,collection){
accumulator=noaccum
?(noaccum=false,value)
:callback(accumulator,value,index,collection);
});
return accumulator;
}







































function reject(collection,callback,thisArg){
callback=lodash.createCallback(callback,thisArg,3);
return filter(collection,function(value,index,collection){
return!callback(value,index,collection);
});
}




















function sample(collection,n,guard){
if(collection&&typeof collection.length!='number'){
collection=values(collection);
}else if(support.unindexedChars&&isString(collection)){
collection=collection.split('');
}
if(n==null||guard){
return collection?collection[baseRandom(0,collection.length-1)]:undefined;
}
var result=shuffle(collection);
result.length=nativeMin(nativeMax(0,n),result.length);
return result;
}















function shuffle(collection){
var index=-1,
length=collection?collection.length:0,
result=Array(typeof length=='number'?length:0);

forEach(collection,function(value){
var rand=baseRandom(0,++index);
result[index]=result[rand];
result[rand]=value;
});
return result;
}





















function size(collection){
var length=collection?collection.length:0;
return typeof length=='number'?length:keys(collection).length;
}











































function some(collection,callback,thisArg){
var result;
callback=lodash.createCallback(callback,thisArg,3);

if(isArray(collection)){
var index=-1,
length=collection.length;

while(++index<length){
if((result=callback(collection[index],index,collection))){
break;
}
}
}else{
baseEach(collection,function(value,index,collection){
return!(result=callback(value,index,collection));
});
}
return!!result;
}




































function sortBy(collection,callback,thisArg){
var index=-1,
length=collection?collection.length:0,
result=Array(typeof length=='number'?length:0);

callback=lodash.createCallback(callback,thisArg,3);
forEach(collection,function(value,key,collection){
var object=result[++index]=getObject();
object.criteria=callback(value,key,collection);
object.index=index;
object.value=value;
});

length=result.length;
result.sort(compareAscending);
while(length--){
var object=result[length];
result[length]=object.value;
releaseObject(object);
}
return result;
}














function toArray(collection){
if(collection&&typeof collection.length=='number'){
return(support.unindexedChars&&isString(collection))
?collection.split('')
:slice(collection);
}
return values(collection);
}


























var where=filter;

















function compact(array){
var index=-1,
length=array?array.length:0,
result=[];

while(++index<length){
var value=array[index];
if(value){
result.push(value);
}
}
return result;
}
















function difference(array){
return baseDifference(array,baseFlatten(arguments,true,true,1));
}










































function findIndex(array,callback,thisArg){
var index=-1,
length=array?array.length:0;

callback=lodash.createCallback(callback,thisArg,3);
while(++index<length){
if(callback(array[index],index,array)){
return index;
}
}
return-1;
}










































function findLastIndex(array,callback,thisArg){
var length=array?array.length:0;
callback=lodash.createCallback(callback,thisArg,3);
while(length--){
if(callback(array[length],length,array)){
return length;
}
}
return-1;
}




















































function first(array,callback,thisArg){
var n=0,
length=array?array.length:0;

if(typeof callback!='number'&&callback!=null){
var index=-1;
callback=lodash.createCallback(callback,thisArg,3);
while(++index<length&&callback(array[index],index,array)){
n++;
}
}else{
n=callback;
if(n==null||thisArg){
return array?array[0]:undefined;
}
}
return slice(array,0,nativeMin(nativeMax(0,n),length));
}










































function flatten(array,isShallow,callback,thisArg){

if(typeof isShallow!='boolean'&&isShallow!=null){
thisArg=callback;
callback=(typeof isShallow!='function'&&thisArg&&thisArg[isShallow]===array)?null:isShallow;
isShallow=false;
}
if(callback!=null){
array=map(array,callback,thisArg);
}
return baseFlatten(array,isShallow);
}

























function indexOf(array,value,fromIndex){
if(typeof fromIndex=='number'){
var length=array?array.length:0;
fromIndex=(fromIndex<0?nativeMax(0,length+fromIndex):fromIndex||0);
}else if(fromIndex){
var index=sortedIndex(array,value);
return array[index]===value?index:-1;
}
return baseIndexOf(array,value,fromIndex);
}



















































function initial(array,callback,thisArg){
var n=0,
length=array?array.length:0;

if(typeof callback!='number'&&callback!=null){
var index=length;
callback=lodash.createCallback(callback,thisArg,3);
while(index--&&callback(array[index],index,array)){
n++;
}
}else{
n=(callback==null||thisArg)?1:callback||n;
}
return slice(array,0,nativeMin(nativeMax(0,length-n),length));
}















function intersection(array){
var args=arguments,
argsLength=args.length,
argsIndex=-1,
caches=getArray(),
index=-1,
indexOf=getIndexOf(),
length=array?array.length:0,
result=[],
seen=getArray();

while(++argsIndex<argsLength){
var value=args[argsIndex];
caches[argsIndex]=indexOf===baseIndexOf&&
(value?value.length:0)>=largeArraySize&&
createCache(argsIndex?args[argsIndex]:seen);
}
outer:
while(++index<length){
var cache=caches[0];
value=array[index];

if((cache?cacheIndexOf(cache,value):indexOf(seen,value))<0){
argsIndex=argsLength;
(cache||seen).push(value);
while(--argsIndex){
cache=caches[argsIndex];
if((cache?cacheIndexOf(cache,value):indexOf(args[argsIndex],value))<0){
continue outer;
}
}
result.push(value);
}
}
while(argsLength--){
cache=caches[argsLength];
if(cache){
releaseObject(cache);
}
}
releaseArray(caches);
releaseArray(seen);
return result;
}



















































function last(array,callback,thisArg){
var n=0,
length=array?array.length:0;

if(typeof callback!='number'&&callback!=null){
var index=length;
callback=lodash.createCallback(callback,thisArg,3);
while(index--&&callback(array[index],index,array)){
n++;
}
}else{
n=callback;
if(n==null||thisArg){
return array?array[length-1]:undefined;
}
}
return slice(array,nativeMax(0,length-n));
}




























function lastIndexOf(array,value,fromIndex){
var index=array?array.length:0;
if(typeof fromIndex=='number'){
index=(fromIndex<0?nativeMax(0,index+fromIndex):nativeMin(fromIndex,index-1))+1;
}
while(index--){
if(array[index]===value){
return index;
}
}
return-1;
}


















function pull(array){
var args=arguments,
argsIndex=0,
argsLength=args.length,
length=array?array.length:0;

while(++argsIndex<argsLength){
var index=-1,
value=args[argsIndex];
while(++index<length){
if(array[index]===value){
splice.call(array,index--,1);
length--;
}
}
}
return array;
}

































function range(start,end,step){
start=+start||0;
step=typeof step=='number'?step:(+step||1);

if(end==null){
end=start;
start=0;
}


var index=-1,
length=nativeMax(0,ceil((end-start)/(step||1))),
result=Array(length);

while(++index<length){
result[index]=start;
start+=step;
}
return result;
}

































function remove(array,callback,thisArg){
var index=-1,
length=array?array.length:0,
result=[];

callback=lodash.createCallback(callback,thisArg,3);
while(++index<length){
var value=array[index];
if(callback(value,index,array)){
result.push(value);
splice.call(array,index--,1);
length--;
}
}
return result;
}





















































function rest(array,callback,thisArg){
if(typeof callback!='number'&&callback!=null){
var n=0,
index=-1,
length=array?array.length:0;

callback=lodash.createCallback(callback,thisArg,3);
while(++index<length&&callback(array[index],index,array)){
n++;
}
}else{
n=(callback==null||thisArg)?1:nativeMax(0,callback);
}
return slice(array,n);
}

















































function sortedIndex(array,value,callback,thisArg){
var low=0,
high=array?array.length:low;


callback=callback?lodash.createCallback(callback,thisArg,1):identity;
value=callback(value);

while(low<high){
var mid=(low+high)>>>1;
(callback(array[mid])<value)
?low=mid+1
:high=mid;
}
return low;
}















function union(array){
return baseUniq(baseFlatten(arguments,true,true));
}













































function uniq(array,isSorted,callback,thisArg){

if(typeof isSorted!='boolean'&&isSorted!=null){
thisArg=callback;
callback=(typeof isSorted!='function'&&thisArg&&thisArg[isSorted]===array)?null:isSorted;
isSorted=false;
}
if(callback!=null){
callback=lodash.createCallback(callback,thisArg,3);
}
return baseUniq(array,isSorted,callback);
}
















function without(array){
return baseDifference(array,slice(arguments,1));
}

















function zip(){
var array=arguments.length>1?arguments:arguments[0],
index=-1,
length=array?max(pluck(array,'length')):0,
result=Array(length<0?0:length);

while(++index<length){
result[index]=pluck(array,index);
}
return result;
}



















function zipObject(keys,values){
var index=-1,
length=keys?keys.length:0,
result={};

while(++index<length){
var key=keys[index];
if(values){
result[key]=values[index];
}else if(key){
result[key[0]]=key[1];
}
}
return result;
}



























function after(n,func){
if(!isFunction(func)){
throw new TypeError;
}
return function(){
if(--n<1){
return func.apply(this,arguments);
}
};
}























function bind(func,thisArg){
return arguments.length>2
?createWrapper(func,17,slice(arguments,2),null,thisArg)
:createWrapper(func,1,null,null,thisArg);
}

























function bindAll(object){
var funcs=arguments.length>1?baseFlatten(arguments,true,false,1):functions(object),
index=-1,
length=funcs.length;

while(++index<length){
var key=funcs[index];
object[key]=createWrapper(object[key],1,null,null,object);
}
return object;
}



































function bindKey(object,key){
return arguments.length>2
?createWrapper(key,19,slice(arguments,2),null,object)
:createWrapper(key,3,null,null,object);
}































function compose(){
var funcs=arguments,
length=funcs.length;

while(length--){
if(!isFunction(funcs[length])){
throw new TypeError;
}
}
return function(){
var args=arguments,
length=funcs.length;

while(length--){
args=[funcs[length].apply(this,args)];
}
return args[0];
};
}
































function createCallback(func,thisArg,argCount){
var type=typeof func;
if(func==null||type=='function'){
return baseCreateCallback(func,thisArg,argCount);
}

if(type!='object'){
return function(object){
return object[func];
};
}
var props=keys(func),
key=props[0],
a=func[key];


if(props.length==1&&a===a&&!isObject(a)){


return function(object){
var b=object[key];
return a===b&&(a!==0||(1/a==1/b));
};
}
return function(object){
var length=props.length,
result=false;

while(length--){
if(!(result=baseIsEqual(object[props[length]],func[props[length]],null,true))){
break;
}
}
return result;
};
}





























function curry(func,arity){
arity=typeof arity=='number'?arity:(+arity||func.length);
return createWrapper(func,4,null,null,null,arity);
}








































function debounce(func,wait,options){
var args,
maxTimeoutId,
result,
stamp,
thisArg,
timeoutId,
trailingCall,
lastCalled=0,
maxWait=false,
trailing=true;

if(!isFunction(func)){
throw new TypeError;
}
wait=nativeMax(0,wait)||0;
if(options===true){
var leading=true;
trailing=false;
}else if(isObject(options)){
leading=options.leading;
maxWait='maxWait'in options&&(nativeMax(wait,options.maxWait)||0);
trailing='trailing'in options?options.trailing:trailing;
}
var delayed=function(){
var remaining=wait-(now()-stamp);
if(remaining<=0){
if(maxTimeoutId){
clearTimeout(maxTimeoutId);
}
var isCalled=trailingCall;
maxTimeoutId=timeoutId=trailingCall=undefined;
if(isCalled){
lastCalled=now();
result=func.apply(thisArg,args);
if(!timeoutId&&!maxTimeoutId){
args=thisArg=null;
}
}
}else{
timeoutId=setTimeout(delayed,remaining);
}
};

var maxDelayed=function(){
if(timeoutId){
clearTimeout(timeoutId);
}
maxTimeoutId=timeoutId=trailingCall=undefined;
if(trailing||(maxWait!==wait)){
lastCalled=now();
result=func.apply(thisArg,args);
if(!timeoutId&&!maxTimeoutId){
args=thisArg=null;
}
}
};

return function(){
args=arguments;
stamp=now();
thisArg=this;
trailingCall=trailing&&(timeoutId||!leading);

if(maxWait===false){
var leadingCall=leading&&!timeoutId;
}else{
if(!maxTimeoutId&&!leading){
lastCalled=stamp;
}
var remaining=maxWait-(stamp-lastCalled),
isCalled=remaining<=0;

if(isCalled){
if(maxTimeoutId){
maxTimeoutId=clearTimeout(maxTimeoutId);
}
lastCalled=stamp;
result=func.apply(thisArg,args);
}
else if(!maxTimeoutId){
maxTimeoutId=setTimeout(maxDelayed,remaining);
}
}
if(isCalled&&timeoutId){
timeoutId=clearTimeout(timeoutId);
}
else if(!timeoutId&&wait!==maxWait){
timeoutId=setTimeout(delayed,wait);
}
if(leadingCall){
isCalled=true;
result=func.apply(thisArg,args);
}
if(isCalled&&!timeoutId&&!maxTimeoutId){
args=thisArg=null;
}
return result;
};
}
















function defer(func){
if(!isFunction(func)){
throw new TypeError;
}
var args=slice(arguments,1);
return setTimeout(function(){func.apply(undefined,args);},1);
}

if(setImmediate){
defer=function(func){
if(!isFunction(func)){
throw new TypeError;
}
return setImmediate.apply(context,arguments);
};
}


















function delay(func,wait){
if(!isFunction(func)){
throw new TypeError;
}
var args=slice(arguments,2);
return setTimeout(function(){func.apply(undefined,args);},wait);
}






































function memoize(func,resolver){
if(!isFunction(func)){
throw new TypeError;
}
var memoized=function(){
var cache=memoized.cache,
key=resolver?resolver.apply(this,arguments):keyPrefix+arguments[0];

return hasOwnProperty.call(cache,key)
?cache[key]
:(cache[key]=func.apply(this,arguments));
}
memoized.cache={};
return memoized;
}


















function once(func){
var ran,
result;

if(!isFunction(func)){
throw new TypeError;
}
return function(){
if(ran){
return result;
}
ran=true;
result=func.apply(this,arguments);


func=null;
return result;
};
}



















function partial(func){
return createWrapper(func,16,slice(arguments,1));
}




























function partialRight(func){
return createWrapper(func,32,null,slice(arguments,1));
}
































function throttle(func,wait,options){
var leading=true,
trailing=true;

if(!isFunction(func)){
throw new TypeError;
}
if(options===false){
leading=false;
}else if(isObject(options)){
leading='leading'in options?options.leading:leading;
trailing='trailing'in options?options.trailing:trailing;
}
debounceOptions.leading=leading;
debounceOptions.maxWait=wait;
debounceOptions.trailing=trailing;

return debounce(func,wait,debounceOptions);
}






















function wrap(value,wrapper){
return createWrapper(wrapper,16,[value]);
}

















function escape(string){
return string==null?'':String(string).replace(reUnescapedHtml,escapeHtmlChar);
}















function identity(value){
return value;
}
























function mixin(object,source){
var ctor=object,
isFunc=!source||isFunction(ctor);

if(!source){
ctor=lodashWrapper;
source=object;
object=lodash;
}
forEach(functions(source),function(methodName){
var func=object[methodName]=source[methodName];
if(isFunc){
ctor.prototype[methodName]=function(){
var value=this.__wrapped__,
args=[value];

push.apply(args,arguments);
var result=func.apply(object,args);
if(value&&typeof value=='object'&&value===result){
return this;
}
result=new ctor(result);
result.__chain__=this.__chain__;
return result;
};
}
});
}













function noConflict(){
context._=oldDash;
return this;
}













function noop(){

}




















var parseInt=nativeParseInt(whitespace+'08')==8?nativeParseInt:function(value,radix){

return nativeParseInt(isString(value)?value.replace(reLeadingSpacesAndZeros,''):value,radix||0);
};




























function random(min,max,floating){
var noMin=min==null,
noMax=max==null;

if(floating==null){
if(typeof min=='boolean'&&noMax){
floating=min;
min=1;
}
else if(!noMax&&typeof max=='boolean'){
floating=max;
noMax=true;
}
}
if(noMin&&noMax){
max=1;
}
min=+min||0;
if(noMax){
max=min;
min=0;
}else{
max=+max||0;
}
if(floating||min%1||max%1){
var rand=nativeRandom();
return nativeMin(min+(rand*(max-min+parseFloat('1e-'+((rand+'').length-1)))),max);
}
return baseRandom(min,max);
}




























function result(object,property){
if(object){
var value=object[property];
return isFunction(value)?object[property]():value;
}
}























































































function template(text,data,options){




var settings=lodash.templateSettings;
text=String(text||'');


options=defaults({},options,settings);

var imports=defaults({},options.imports,settings.imports),
importsKeys=keys(imports),
importsValues=values(imports);

var isEvaluating,
index=0,
interpolate=options.interpolate||reNoMatch,
source="__p += '";


var reDelimiters=RegExp(
(options.escape||reNoMatch).source+'|'+
interpolate.source+'|'+
(interpolate===reInterpolate?reEsTemplate:reNoMatch).source+'|'+
(options.evaluate||reNoMatch).source+'|$'
,'g');

text.replace(reDelimiters,function(match,escapeValue,interpolateValue,esTemplateValue,evaluateValue,offset){
interpolateValue||(interpolateValue=esTemplateValue);


source+=text.slice(index,offset).replace(reUnescapedString,escapeStringChar);


if(escapeValue){
source+="' +\n__e("+escapeValue+") +\n'";
}
if(evaluateValue){
isEvaluating=true;
source+="';\n"+evaluateValue+";\n__p += '";
}
if(interpolateValue){
source+="' +\n((__t = ("+interpolateValue+")) == null ? '' : __t) +\n'";
}
index=offset+match.length;



return match;
});

source+="';\n";



var variable=options.variable,
hasVariable=variable;

if(!hasVariable){
variable='obj';
source='with ('+variable+') {\n'+source+'\n}\n';
}

source=(isEvaluating?source.replace(reEmptyStringLeading,''):source)
.replace(reEmptyStringMiddle,'$1')
.replace(reEmptyStringTrailing,'$1;');


source='function('+variable+') {\n'+
(hasVariable?'':variable+' || ('+variable+' = {});\n')+
"var __t, __p = '', __e = _.escape"+
(isEvaluating
?', __j = Array.prototype.join;\n'+
"function print() { __p += __j.call(arguments, '') }\n"
:';\n'
)+
source+
'return __p\n}';



var sourceURL='\n/*\n//# sourceURL='+(options.sourceURL||'/lodash/template/source['+(templateCounter++)+']')+'\n*/';

try{
var result=Function(importsKeys,'return '+source+sourceURL).apply(undefined,importsValues);
}catch(e){
e.source=source;
throw e;
}
if(data){
return result(data);
}



result.source=source;
return result;
}
























function times(n,callback,thisArg){
n=(n=+n)>-1?n:0;
var index=-1,
result=Array(n);

callback=baseCreateCallback(callback,thisArg,1);
while(++index<n){
result[index]=callback(index);
}
return result;
}
















function unescape(string){
return string==null?'':String(string).replace(reEscapedHtml,unescapeHtmlChar);
}

















function uniqueId(prefix){
var id=++idCounter;
return String(prefix==null?'':prefix)+id;
}



























function chain(value){
value=new lodashWrapper(value);
value.__chain__=true;
return value;
}





















function tap(value,interceptor){
interceptor(value);
return value;
}


























function wrapperChain(){
this.__chain__=true;
return this;
}













function wrapperToString(){
return String(this.__wrapped__);
}














function wrapperValueOf(){
return this.__wrapped__;
}




lodash.after=after;
lodash.assign=assign;
lodash.at=at;
lodash.bind=bind;
lodash.bindAll=bindAll;
lodash.bindKey=bindKey;
lodash.chain=chain;
lodash.compact=compact;
lodash.compose=compose;
lodash.countBy=countBy;
lodash.create=create;
lodash.createCallback=createCallback;
lodash.curry=curry;
lodash.debounce=debounce;
lodash.defaults=defaults;
lodash.defer=defer;
lodash.delay=delay;
lodash.difference=difference;
lodash.filter=filter;
lodash.flatten=flatten;
lodash.forEach=forEach;
lodash.forEachRight=forEachRight;
lodash.forIn=forIn;
lodash.forInRight=forInRight;
lodash.forOwn=forOwn;
lodash.forOwnRight=forOwnRight;
lodash.functions=functions;
lodash.groupBy=groupBy;
lodash.indexBy=indexBy;
lodash.initial=initial;
lodash.intersection=intersection;
lodash.invert=invert;
lodash.invoke=invoke;
lodash.keys=keys;
lodash.map=map;
lodash.max=max;
lodash.memoize=memoize;
lodash.merge=merge;
lodash.min=min;
lodash.omit=omit;
lodash.once=once;
lodash.pairs=pairs;
lodash.partial=partial;
lodash.partialRight=partialRight;
lodash.pick=pick;
lodash.pluck=pluck;
lodash.pull=pull;
lodash.range=range;
lodash.reject=reject;
lodash.remove=remove;
lodash.rest=rest;
lodash.shuffle=shuffle;
lodash.sortBy=sortBy;
lodash.tap=tap;
lodash.throttle=throttle;
lodash.times=times;
lodash.toArray=toArray;
lodash.transform=transform;
lodash.union=union;
lodash.uniq=uniq;
lodash.values=values;
lodash.where=where;
lodash.without=without;
lodash.wrap=wrap;
lodash.zip=zip;
lodash.zipObject=zipObject;


lodash.collect=map;
lodash.drop=rest;
lodash.each=forEach;
lodash.eachRight=forEachRight;
lodash.extend=assign;
lodash.methods=functions;
lodash.object=zipObject;
lodash.select=filter;
lodash.tail=rest;
lodash.unique=uniq;
lodash.unzip=zip;


mixin(lodash);




lodash.clone=clone;
lodash.cloneDeep=cloneDeep;
lodash.contains=contains;
lodash.escape=escape;
lodash.every=every;
lodash.find=find;
lodash.findIndex=findIndex;
lodash.findKey=findKey;
lodash.findLast=findLast;
lodash.findLastIndex=findLastIndex;
lodash.findLastKey=findLastKey;
lodash.has=has;
lodash.identity=identity;
lodash.indexOf=indexOf;
lodash.isArguments=isArguments;
lodash.isArray=isArray;
lodash.isBoolean=isBoolean;
lodash.isDate=isDate;
lodash.isElement=isElement;
lodash.isEmpty=isEmpty;
lodash.isEqual=isEqual;
lodash.isFinite=isFinite;
lodash.isFunction=isFunction;
lodash.isNaN=isNaN;
lodash.isNull=isNull;
lodash.isNumber=isNumber;
lodash.isObject=isObject;
lodash.isPlainObject=isPlainObject;
lodash.isRegExp=isRegExp;
lodash.isString=isString;
lodash.isUndefined=isUndefined;
lodash.lastIndexOf=lastIndexOf;
lodash.mixin=mixin;
lodash.noConflict=noConflict;
lodash.noop=noop;
lodash.parseInt=parseInt;
lodash.random=random;
lodash.reduce=reduce;
lodash.reduceRight=reduceRight;
lodash.result=result;
lodash.runInContext=runInContext;
lodash.size=size;
lodash.some=some;
lodash.sortedIndex=sortedIndex;
lodash.template=template;
lodash.unescape=unescape;
lodash.uniqueId=uniqueId;


lodash.all=every;
lodash.any=some;
lodash.detect=find;
lodash.findWhere=find;
lodash.foldl=reduce;
lodash.foldr=reduceRight;
lodash.include=contains;
lodash.inject=reduce;

forOwn(lodash,function(func,methodName){
if(!lodash.prototype[methodName]){
lodash.prototype[methodName]=function(){
var args=[this.__wrapped__],
chainAll=this.__chain__;

push.apply(args,arguments);
var result=func.apply(lodash,args);
return chainAll
?new lodashWrapper(result,chainAll)
:result;
};
}
});




lodash.first=first;
lodash.last=last;
lodash.sample=sample;


lodash.take=first;
lodash.head=first;

forOwn(lodash,function(func,methodName){
var callbackable=methodName!=='sample';
if(!lodash.prototype[methodName]){
lodash.prototype[methodName]=function(n,guard){
var chainAll=this.__chain__,
result=func(this.__wrapped__,n,guard);

return!chainAll&&(n==null||(guard&&!(callbackable&&typeof n=='function')))
?result
:new lodashWrapper(result,chainAll);
};
}
});










lodash.VERSION='2.3.0';


lodash.prototype.chain=wrapperChain;
lodash.prototype.toString=wrapperToString;
lodash.prototype.value=wrapperValueOf;
lodash.prototype.valueOf=wrapperValueOf;


baseEach(['join','pop','shift'],function(methodName){
var func=arrayRef[methodName];
lodash.prototype[methodName]=function(){
var chainAll=this.__chain__,
result=func.apply(this.__wrapped__,arguments);

return chainAll
?new lodashWrapper(result,chainAll)
:result;
};
});


baseEach(['push','reverse','sort','unshift'],function(methodName){
var func=arrayRef[methodName];
lodash.prototype[methodName]=function(){
func.apply(this.__wrapped__,arguments);
return this;
};
});


baseEach(['concat','slice','splice'],function(methodName){
var func=arrayRef[methodName];
lodash.prototype[methodName]=function(){
return new lodashWrapper(func.apply(this.__wrapped__,arguments),this.__chain__);
};
});



if(!support.spliceObjects){
baseEach(['pop','shift','splice'],function(methodName){
var func=arrayRef[methodName],
isSplice=methodName=='splice';

lodash.prototype[methodName]=function(){
var chainAll=this.__chain__,
value=this.__wrapped__,
result=func.apply(value,arguments);

if(value.length===0){
delete value[0];
}
return(chainAll||isSplice)
?new lodashWrapper(result,chainAll)
:result;
};
});
}

return lodash;
}




var _=runInContext();


if(typeof define=='function'&&typeof define.amd=='object'&&define.amd){




root._=_;



define(function(){
return _;
});
}

else if(freeExports&&freeModule){

if(moduleExports){
(freeModule.exports=_)._=_;
}

else{
freeExports._=_;
}
}
else{

root._=_;
}
}.call(this));







(function(module){
if(typeof window.define==='function'&&window.define.amd){

window.define(["underscore"],module);
}else{
module(window._);
}
}(function(_){
var applyToPrototype=function(prototype,methods){
for(var i=0;i<methods.length;i++){
(function(method){
if(!prototype[method]){
prototype[method]=function(){
var args=Array.prototype.slice.call(arguments)||[];
args.unshift(this);
return _[method].apply(this,args);
};
}
})(methods[i]);
}
};

applyToPrototype(Function.prototype,["bind"]);
applyToPrototype(Array.prototype,["forEach","map","reduce","reduceRight","filter","every","some","indexOf"]);
}));

if(!window.__td){window.__MT=100;window.__ti=0;window.__td=[];window.__td.length=window.__MT;window.__noTrace=false;

}

if(typeof vp=="undefined")
{
var vp={};
}

if(!vp.a2a)
{
vp.a2a=function(){};
}





vp.a2a.initLink=function $vpfn_OeZjFEE2OZLGXYtTa34RFA19$18(oParams)
{if(!window.__noTrace){__td[__ti]=arguments;__ti=__ti>=__MT?0:__ti+1;}
try
{
if(!window.a2a_config)
{
a2a_config=oParams;
document.write('<script type="text/javascript" src="http://static.addtoany.com/menu/page.js"><\/script>');
}
else
{
for(var k in oParams)
{
a2a_config[k]=oParams[k];
}
a2a.init('page');
}
}
catch(e)
{
var oUrl=new vp.web.URL(document.location.href);
if(oUrl.getItem('debugjs')==1)
{
throw e;
}
}
};

